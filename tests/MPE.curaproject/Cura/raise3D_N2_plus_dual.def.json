{
    "metadata": {
        "type": "machine", 
        "author": "Raise3D", 
        "category": "Other", 
        "manufacturer": "Raise3D", 
        "setting_version": 1, 
        "file_formats": "text/x-gcode", 
        "visible": true, 
        "has_materials": true, 
        "preferred_material": "generic_pla", 
        "preferred_quality_type": "normal", 
        "machine_extruder_trains": {
            "0": "raise3D_N2_plus_dual_extruder_0", 
            "1": "raise3D_N2_plus_dual_extruder_1"
        }, 
        "supports_usb_connection": true
    }, 
    "version": 2, 
    "settings": {
        "resolution": {
            "icon": "category_layer_height", 
            "children": {
                "layer_height": {
                    "children": {}, 
                    "default_value": "0.1", 
                    "unit": "mm", 
                    "label": "Layer Height", 
                    "maximum_value_warning": "=0.8 * min(extruderValues('machine_nozzle_size'))", 
                    "minimum_value_warning": "=0.04", 
                    "type": "float", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "False", 
                    "minimum_value": "=0.001", 
                    "description": "The height of each layer in mm. Higher values produce faster prints in lower resolution, lower values produce slower prints in higher resolution."
                }, 
                "line_width": {
                    "children": {
                        "skirt_brim_line_width": {
                            "unit": "mm", 
                            "maximum_value_warning": "=3 * machine_nozzle_size", 
                            "value": "=line_width", 
                            "settable_per_extruder": "True", 
                            "minimum_value": "=0.001", 
                            "children": {}, 
                            "default_value": "0.4", 
                            "label": "Skirt/Brim Line Width", 
                            "minimum_value_warning": "=0.1 + 0.4 * machine_nozzle_size", 
                            "enabled": "=resolveOrValue('adhesion_type') == 'skirt' or resolveOrValue('adhesion_type') == 'brim'", 
                            "settable_per_mesh": "False", 
                            "type": "float", 
                            "description": "Width of a single skirt or brim line."
                        }, 
                        "skin_line_width": {
                            "limit_to_extruder": "=top_bottom_extruder_nr", 
                            "maximum_value_warning": "=2 * machine_nozzle_size", 
                            "value": "=line_width", 
                            "unit": "mm", 
                            "children": {}, 
                            "default_value": "0.4", 
                            "label": "Top/Bottom Line Width", 
                            "minimum_value_warning": "=0.1 + 0.4 * machine_nozzle_size", 
                            "minimum_value": "=0.001", 
                            "settable_per_mesh": "True", 
                            "type": "float", 
                            "description": "Width of a single top/bottom line."
                        }, 
                        "support_interface_line_width": {
                            "limit_to_extruder": "=support_interface_extruder_nr", 
                            "maximum_value_warning": "=2 * machine_nozzle_size", 
                            "unit": "mm", 
                            "value": "=line_width", 
                            "settable_per_extruder": "True", 
                            "minimum_value": "=0.001", 
                            "children": {
                                "support_bottom_line_width": {
                                    "limit_to_extruder": "=support_bottom_extruder_nr", 
                                    "maximum_value_warning": "=2 * machine_nozzle_size", 
                                    "unit": "mm", 
                                    "value": "=extruderValue(support_bottom_extruder_nr, 'support_interface_line_width')", 
                                    "settable_per_extruder": "True", 
                                    "minimum_value": "=0.001", 
                                    "children": {}, 
                                    "default_value": "0.4", 
                                    "label": "Support Floor Line Width", 
                                    "minimum_value_warning": "=0.4 * machine_nozzle_size", 
                                    "enabled": "=support_enable and support_bottom_enable", 
                                    "settable_per_mesh": "False", 
                                    "type": "float", 
                                    "description": "Width of a single support floor line."
                                }, 
                                "support_roof_line_width": {
                                    "limit_to_extruder": "=support_roof_extruder_nr", 
                                    "maximum_value_warning": "=2 * machine_nozzle_size", 
                                    "unit": "mm", 
                                    "value": "=extruderValue(support_roof_extruder_nr, 'support_interface_line_width')", 
                                    "settable_per_extruder": "True", 
                                    "minimum_value": "=0.001", 
                                    "children": {}, 
                                    "default_value": "0.4", 
                                    "label": "Support Roof Line Width", 
                                    "minimum_value_warning": "=0.4 * machine_nozzle_size", 
                                    "enabled": "=support_enable and support_roof_enable", 
                                    "settable_per_mesh": "False", 
                                    "type": "float", 
                                    "description": "Width of a single support roof line."
                                }
                            }, 
                            "default_value": "0.4", 
                            "label": "Support Interface Line Width", 
                            "minimum_value_warning": "=0.1 + 0.4 * machine_nozzle_size", 
                            "enabled": "=support_enable and support_interface_enable", 
                            "settable_per_mesh": "False", 
                            "type": "float", 
                            "description": "Width of a single line of support roof or floor."
                        }, 
                        "wall_line_width": {
                            "limit_to_extruder": "=wall_0_extruder_nr if wall_x_extruder_nr == wall_0_extruder_nr else -1", 
                            "maximum_value_warning": "=2 * machine_nozzle_size", 
                            "value": "=line_width", 
                            "unit": "mm", 
                            "children": {
                                "wall_line_width_x": {
                                    "limit_to_extruder": "=wall_x_extruder_nr", 
                                    "maximum_value_warning": "=2 * machine_nozzle_size", 
                                    "value": "=wall_line_width", 
                                    "unit": "mm", 
                                    "children": {}, 
                                    "default_value": "0.4", 
                                    "label": "Inner Wall(s) Line Width", 
                                    "minimum_value_warning": "=0.1 + 0.4 * machine_nozzle_size", 
                                    "minimum_value": "=0.001", 
                                    "settable_per_mesh": "True", 
                                    "type": "float", 
                                    "description": "Width of a single wall line for all wall lines except the outermost one."
                                }, 
                                "wall_line_width_0": {
                                    "limit_to_extruder": "=wall_0_extruder_nr", 
                                    "maximum_value_warning": "=2 * machine_nozzle_size", 
                                    "value": "=wall_line_width", 
                                    "unit": "mm", 
                                    "children": {}, 
                                    "default_value": "0.4", 
                                    "label": "Outer Wall Line Width", 
                                    "minimum_value_warning": "=(0.1 + 0.4 * machine_nozzle_size) if outer_inset_first else 0.1 * machine_nozzle_size", 
                                    "minimum_value": "=0.001", 
                                    "settable_per_mesh": "True", 
                                    "type": "float", 
                                    "description": "Width of the outermost wall line. By lowering this value, higher levels of detail can be printed."
                                }
                            }, 
                            "default_value": "0.4", 
                            "label": "Wall Line Width", 
                            "minimum_value_warning": "=0.1 + 0.4 * machine_nozzle_size", 
                            "minimum_value": "=0.001", 
                            "settable_per_mesh": "True", 
                            "type": "float", 
                            "description": "Width of a single wall line."
                        }, 
                        "infill_line_width": {
                            "limit_to_extruder": "=infill_extruder_nr", 
                            "maximum_value_warning": "=3 * machine_nozzle_size", 
                            "unit": "mm", 
                            "value": "=line_width", 
                            "minimum_value": "=0.001", 
                            "children": {}, 
                            "default_value": "0.4", 
                            "label": "Infill Line Width", 
                            "minimum_value_warning": "=0.1 + 0.4 * machine_nozzle_size", 
                            "enabled": "=infill_sparse_density > 0", 
                            "settable_per_mesh": "True", 
                            "type": "float", 
                            "description": "Width of a single infill line."
                        }, 
                        "initial_layer_line_width_factor": {
                            "children": {}, 
                            "default_value": "100.0", 
                            "unit": "%", 
                            "label": "Initial Layer Line Width", 
                            "maximum_value_warning": "=150", 
                            "type": "float", 
                            "settable_per_mesh": "False", 
                            "settable_per_extruder": "True", 
                            "minimum_value": "=0.001", 
                            "description": "Multiplier of the line width on the first layer. Increasing this could improve bed adhesion."
                        }, 
                        "support_line_width": {
                            "limit_to_extruder": "=support_infill_extruder_nr", 
                            "maximum_value_warning": "=3 * machine_nozzle_size", 
                            "unit": "mm", 
                            "value": "=line_width", 
                            "settable_per_extruder": "True", 
                            "minimum_value": "=0.001", 
                            "children": {}, 
                            "default_value": "0.4", 
                            "label": "Support Line Width", 
                            "minimum_value_warning": "=0.1 + 0.4 * machine_nozzle_size", 
                            "enabled": "=support_enable", 
                            "settable_per_mesh": "False", 
                            "type": "float", 
                            "description": "Width of a single support structure line."
                        }, 
                        "prime_tower_line_width": {
                            "unit": "mm", 
                            "maximum_value_warning": "=2 * machine_nozzle_size", 
                            "value": "=line_width", 
                            "settable_per_extruder": "True", 
                            "minimum_value": "=0.001", 
                            "children": {}, 
                            "default_value": "0.4", 
                            "label": "Prime Tower Line Width", 
                            "minimum_value_warning": "=0.1 + 0.4 * machine_nozzle_size", 
                            "enabled": "=resolveOrValue('prime_tower_enable')", 
                            "settable_per_mesh": "False", 
                            "type": "float", 
                            "description": "Width of a single prime tower line."
                        }
                    }, 
                    "default_value": "0.4", 
                    "unit": "mm", 
                    "label": "Line Width", 
                    "maximum_value_warning": "=2 * machine_nozzle_size", 
                    "minimum_value_warning": "=0.1 + 0.4 * machine_nozzle_size", 
                    "value": "=machine_nozzle_size", 
                    "type": "float", 
                    "settable_per_mesh": "True", 
                    "minimum_value": "=0.001", 
                    "description": "Width of a single line. Generally, the width of each line should correspond to the width of the nozzle. However, slightly reducing this value could produce better prints."
                }, 
                "layer_height_0": {
                    "unit": "mm", 
                    "resolve": "=min(extruderValues('layer_height_0'))", 
                    "maximum_value_warning": "=0.8 * min(extruderValues('machine_nozzle_size'))", 
                    "type": "float", 
                    "settable_per_extruder": "False", 
                    "minimum_value": "=0.001", 
                    "children": {}, 
                    "default_value": "0.3", 
                    "label": "Initial Layer Height", 
                    "minimum_value_warning": "=0.1", 
                    "settable_per_mesh": "False", 
                    "description": "The height of the initial layer in mm. A thicker initial layer makes adhesion to the build plate easier."
                }
            }, 
            "type": "category", 
            "label": "Quality", 
            "description": "All settings that influence the resolution of the print. These settings have a large impact on the quality (and print time)"
        }, 
        "shell": {
            "icon": "category_shell", 
            "children": {
                "outer_inset_first": {
                    "children": {}, 
                    "default_value": "False", 
                    "label": "Outer Before Inner Walls", 
                    "enabled": "=wall_0_extruder_nr == wall_x_extruder_nr", 
                    "settable_per_mesh": "True", 
                    "type": "bool", 
                    "description": "Prints walls in order of outside to inside when enabled. This can help improve dimensional accuracy in X and Y when using a high viscosity plastic like ABS; however it can decrease outer surface print quality, especially on overhangs."
                }, 
                "fill_outline_gaps": {
                    "children": {}, 
                    "default_value": "False", 
                    "limit_to_extruder": "=wall_0_extruder_nr", 
                    "label": "Print Thin Walls", 
                    "type": "bool", 
                    "settable_per_mesh": "True", 
                    "description": "Print pieces of the model which are horizontally thinner than the nozzle size."
                }, 
                "wall_0_wipe_dist": {
                    "children": {}, 
                    "default_value": "0.2", 
                    "limit_to_extruder": "=wall_0_extruder_nr", 
                    "label": "Outer Wall Wipe Distance", 
                    "maximum_value_warning": "=machine_nozzle_size * 2", 
                    "unit": "mm", 
                    "value": "=machine_nozzle_size / 2", 
                    "type": "float", 
                    "settable_per_mesh": "True", 
                    "minimum_value": "=0", 
                    "description": "Distance of a travel move inserted after the outer wall, to hide the Z seam better."
                }, 
                "filter_out_tiny_gaps": {
                    "children": {}, 
                    "default_value": "True", 
                    "limit_to_extruder": "=wall_0_extruder_nr", 
                    "label": "Filter Out Tiny Gaps", 
                    "type": "bool", 
                    "settable_per_mesh": "True", 
                    "description": "Filter out tiny gaps to reduce blobs on outside of model."
                }, 
                "skin_angles": {
                    "children": {}, 
                    "default_value": "[ ]", 
                    "limit_to_extruder": "=top_bottom_extruder_nr", 
                    "label": "Top/Bottom Line Directions", 
                    "enabled": "=top_bottom_pattern != 'concentric'", 
                    "settable_per_mesh": "True", 
                    "type": "[int]", 
                    "description": "A list of integer line directions to use when the top/bottom layers use the lines or zig zag pattern. Elements from the list are used sequentially as the layers progress and when the end of the list is reached, it starts at the beginning again. The list items are separated by commas and the whole list is contained in square brackets. Default is an empty list which means use the traditional default angles (45 and 135 degrees)."
                }, 
                "top_bottom_pattern_0": {
                    "children": {}, 
                    "default_value": "lines", 
                    "limit_to_extruder": "=top_bottom_extruder_nr", 
                    "label": "Bottom Pattern Initial Layer", 
                    "value": "=top_bottom_pattern", 
                    "settable_per_mesh": "True", 
                    "options": "OrderedDict([('lines', 'Lines'), ('concentric', 'Concentric'), ('zigzag', 'Zig Zag')])", 
                    "type": "enum", 
                    "description": "The pattern on the bottom of the print on the first layer."
                }, 
                "alternate_extra_perimeter": {
                    "children": {}, 
                    "default_value": "False", 
                    "limit_to_extruder": "=infill_extruder_nr", 
                    "label": "Alternate Extra Wall", 
                    "type": "bool", 
                    "settable_per_mesh": "True", 
                    "description": "Prints an extra wall at every other layer. This way infill gets caught between these extra walls, resulting in stronger prints."
                }, 
                "xy_offset": {
                    "children": {}, 
                    "default_value": "0", 
                    "limit_to_extruder": "=wall_0_extruder_nr", 
                    "label": "Horizontal Expansion", 
                    "maximum_value_warning": "=1", 
                    "minimum_value_warning": "=-1", 
                    "type": "float", 
                    "settable_per_mesh": "True", 
                    "unit": "mm", 
                    "description": "Amount of offset applied to all polygons in each layer. Positive values can compensate for too big holes; negative values can compensate for too small holes."
                }, 
                "fill_perimeter_gaps": {
                    "children": {}, 
                    "default_value": "everywhere", 
                    "limit_to_extruder": "=wall_0_extruder_nr", 
                    "label": "Fill Gaps Between Walls", 
                    "type": "enum", 
                    "settable_per_mesh": "True", 
                    "options": "OrderedDict([('nowhere', 'Nowhere'), ('everywhere', 'Everywhere')])", 
                    "description": "Fills the gaps between walls where no walls fit."
                }, 
                "acceleration_ironing": {
                    "limit_to_extruder": "=top_bottom_extruder_nr", 
                    "maximum_value_warning": "=10000", 
                    "unit": "mm/s\u00b2", 
                    "value": "=acceleration_topbottom", 
                    "minimum_value": "=0.1", 
                    "children": {}, 
                    "default_value": "3000", 
                    "label": "Ironing Acceleration", 
                    "minimum_value_warning": "=100", 
                    "enabled": "=resolveOrValue('acceleration_enabled') and ironing_enabled", 
                    "settable_per_mesh": "True", 
                    "type": "float", 
                    "description": "The acceleration with which ironing is performed."
                }, 
                "speed_ironing": {
                    "limit_to_extruder": "=top_bottom_extruder_nr", 
                    "maximum_value_warning": "=100", 
                    "maximum_value": "=math.sqrt(machine_max_feedrate_x ** 2 + machine_max_feedrate_y ** 2)", 
                    "unit": "mm/s", 
                    "value": "=speed_topbottom * 20 / 30", 
                    "minimum_value": "=0.001", 
                    "children": {}, 
                    "default_value": "20.0", 
                    "label": "Ironing Speed", 
                    "enabled": "=ironing_enabled", 
                    "settable_per_mesh": "True", 
                    "type": "float", 
                    "description": "The speed at which to pass over the top surface."
                }, 
                "wall_thickness": {
                    "children": {
                        "wall_line_count": {
                            "children": {}, 
                            "default_value": "2", 
                            "limit_to_extruder": "=wall_x_extruder_nr", 
                            "label": "Wall Line Count", 
                            "maximum_value_warning": "=10", 
                            "minimum_value_warning": "=1", 
                            "value": "=1 if magic_spiralize else max(1, round((wall_thickness - wall_line_width_0) / wall_line_width_x) + 1) if wall_thickness != 0 else 0", 
                            "settable_per_mesh": "True", 
                            "minimum_value": "=0", 
                            "type": "int", 
                            "description": "The number of walls. When calculated by the wall thickness, this value is rounded to a whole number."
                        }
                    }, 
                    "default_value": "0.8", 
                    "limit_to_extruder": "=wall_x_extruder_nr", 
                    "label": "Wall Thickness", 
                    "maximum_value_warning": "=10 * line_width", 
                    "unit": "mm", 
                    "minimum_value_warning": "=line_width", 
                    "type": "float", 
                    "settable_per_mesh": "True", 
                    "minimum_value": "=0", 
                    "description": "The thickness of the walls in the horizontal direction. This value divided by the wall line width defines the number of walls."
                }, 
                "travel_compensate_overlapping_walls_enabled": {
                    "children": {
                        "travel_compensate_overlapping_walls_0_enabled": {
                            "children": {}, 
                            "default_value": "True", 
                            "limit_to_extruder": "=wall_0_extruder_nr", 
                            "label": "Compensate Outer Wall Overlaps", 
                            "value": "=travel_compensate_overlapping_walls_enabled", 
                            "settable_per_mesh": "True", 
                            "type": "bool", 
                            "description": "Compensate the flow for parts of an outer wall being printed where there is already a wall in place."
                        }, 
                        "travel_compensate_overlapping_walls_x_enabled": {
                            "children": {}, 
                            "default_value": "True", 
                            "limit_to_extruder": "=wall_x_extruder_nr", 
                            "label": "Compensate Inner Wall Overlaps", 
                            "value": "=travel_compensate_overlapping_walls_enabled", 
                            "settable_per_mesh": "True", 
                            "type": "bool", 
                            "description": "Compensate the flow for parts of an inner wall being printed where there is already a wall in place."
                        }
                    }, 
                    "default_value": "True", 
                    "limit_to_extruder": "=wall_x_extruder_nr", 
                    "label": "Compensate Wall Overlaps", 
                    "type": "bool", 
                    "settable_per_mesh": "True", 
                    "description": "Compensate the flow for parts of a wall being printed where there is already a wall in place."
                }, 
                "skin_outline_count": {
                    "children": {}, 
                    "default_value": "1", 
                    "limit_to_extruder": "=top_bottom_extruder_nr", 
                    "label": "Extra Skin Wall Count", 
                    "maximum_value_warning": "=10", 
                    "type": "int", 
                    "settable_per_mesh": "True", 
                    "minimum_value": "=0", 
                    "description": "Replaces the outermost part of the top/bottom pattern with a number of concentric lines. Using one or two lines improves roofs that start on infill material."
                }, 
                "z_seam_type": {
                    "children": {}, 
                    "default_value": "sharpest_corner", 
                    "limit_to_extruder": "=wall_0_extruder_nr", 
                    "label": "Z Seam Alignment", 
                    "type": "enum", 
                    "settable_per_mesh": "True", 
                    "options": "OrderedDict([('back', 'User Specified'), ('shortest', 'Shortest'), ('random', 'Random'), ('sharpest_corner', 'Sharpest Corner')])", 
                    "description": "Starting point of each path in a layer. When paths in consecutive layers start at the same point a vertical seam may show on the print. When aligning these near a user specified location, the seam is easiest to remove. When placed randomly the inaccuracies at the paths' start will be less noticeable. When taking the shortest path the print will be quicker."
                }, 
                "xy_offset_layer_0": {
                    "children": {}, 
                    "default_value": "0", 
                    "limit_to_extruder": "=wall_0_extruder_nr", 
                    "label": "Initial Layer Horizontal Expansion", 
                    "maximum_value_warning": "=1", 
                    "minimum_value_warning": "=-1", 
                    "value": "=xy_offset", 
                    "type": "float", 
                    "settable_per_mesh": "True", 
                    "unit": "mm", 
                    "description": "Amount of offset applied to all polygons in the first layer. A negative value can compensate for squishing of the first layer known as \"elephant's foot\"."
                }, 
                "jerk_ironing": {
                    "limit_to_extruder": "=top_bottom_extruder_nr", 
                    "maximum_value_warning": "=50", 
                    "value": "=jerk_topbottom", 
                    "unit": "mm/s", 
                    "children": {}, 
                    "default_value": "20", 
                    "label": "Ironing Jerk", 
                    "minimum_value": "=0", 
                    "enabled": "=resolveOrValue('jerk_enabled') and ironing_enabled", 
                    "settable_per_mesh": "True", 
                    "type": "float", 
                    "description": "The maximum instantaneous velocity change while performing ironing."
                }, 
                "wall_extruder_nr": {
                    "children": {
                        "wall_x_extruder_nr": {
                            "children": {}, 
                            "default_value": "-1", 
                            "settable_globally": "True", 
                            "label": "Inner Wall Extruder", 
                            "settable_per_meshgroup": "True", 
                            "enabled": "=extruders_enabled_count > 1", 
                            "settable_per_mesh": "False", 
                            "settable_per_extruder": "False", 
                            "value": "=wall_extruder_nr", 
                            "type": "optional_extruder", 
                            "description": "The extruder train used for printing the inner walls. This is used in multi-extrusion."
                        }, 
                        "wall_0_extruder_nr": {
                            "children": {}, 
                            "default_value": "-1", 
                            "settable_globally": "True", 
                            "label": "Outer Wall Extruder", 
                            "settable_per_meshgroup": "True", 
                            "enabled": "=extruders_enabled_count > 1", 
                            "settable_per_mesh": "False", 
                            "settable_per_extruder": "False", 
                            "value": "=wall_extruder_nr", 
                            "type": "optional_extruder", 
                            "description": "The extruder train used for printing the outer wall. This is used in multi-extrusion."
                        }
                    }, 
                    "default_value": "-1", 
                    "settable_globally": "True", 
                    "label": "Wall Extruder", 
                    "settable_per_meshgroup": "True", 
                    "enabled": "=extruders_enabled_count > 1", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "False", 
                    "type": "optional_extruder", 
                    "description": "The extruder train used for printing the walls. This is used in multi-extrusion."
                }, 
                "skin_no_small_gaps_heuristic": {
                    "children": {}, 
                    "default_value": "True", 
                    "limit_to_extruder": "=top_bottom_extruder_nr", 
                    "label": "Ignore Small Z Gaps", 
                    "type": "bool", 
                    "settable_per_mesh": "True", 
                    "description": "When the model has small vertical gaps, about 5% extra computation time can be spent on generating top and bottom skin in these narrow spaces. In such case, disable the setting."
                }, 
                "ironing_only_highest_layer": {
                    "children": {}, 
                    "default_value": "False", 
                    "limit_to_extruder": "=top_bottom_extruder_nr", 
                    "label": "Iron Only Highest Layer", 
                    "enabled": "=ironing_enabled", 
                    "settable_per_mesh": "True", 
                    "type": "bool", 
                    "description": "Only perform ironing on the very last layer of the mesh. This saves time if the lower layers don't need a smooth surface finish."
                }, 
                "top_bottom_pattern": {
                    "children": {}, 
                    "default_value": "lines", 
                    "limit_to_extruder": "=top_bottom_extruder_nr", 
                    "label": "Top/Bottom Pattern", 
                    "type": "enum", 
                    "settable_per_mesh": "True", 
                    "options": "OrderedDict([('lines', 'Lines'), ('concentric', 'Concentric'), ('zigzag', 'Zig Zag')])", 
                    "description": "The pattern of the top/bottom layers."
                }, 
                "ironing_pattern": {
                    "children": {}, 
                    "default_value": "zigzag", 
                    "limit_to_extruder": "=top_bottom_extruder_nr", 
                    "label": "Ironing Pattern", 
                    "enabled": "=ironing_enabled", 
                    "settable_per_mesh": "True", 
                    "options": "OrderedDict([('concentric', 'Concentric'), ('zigzag', 'Zig Zag')])", 
                    "type": "enum", 
                    "description": "The pattern to use for ironing top surfaces."
                }, 
                "top_bottom_extruder_nr": {
                    "children": {}, 
                    "default_value": "-1", 
                    "settable_globally": "True", 
                    "label": "Top/Bottom Extruder", 
                    "settable_per_meshgroup": "True", 
                    "enabled": "=extruders_enabled_count > 1", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "False", 
                    "type": "optional_extruder", 
                    "description": "The extruder train used for printing the top and bottom skin. This is used in multi-extrusion."
                }, 
                "ironing_inset": {
                    "limit_to_extruder": "=top_bottom_extruder_nr", 
                    "maximum_value_warning": "=wall_line_width_0", 
                    "value": "=wall_line_width_0 / 2", 
                    "unit": "mm", 
                    "children": {}, 
                    "default_value": "0.35", 
                    "label": "Ironing Inset", 
                    "minimum_value_warning": "=0", 
                    "enabled": "=ironing_enabled", 
                    "settable_per_mesh": "True", 
                    "type": "float", 
                    "description": "A distance to keep from the edges of the model. Ironing all the way to the edge of the mesh may result in a jagged edge on your print."
                }, 
                "wall_0_inset": {
                    "children": {}, 
                    "default_value": "0.0", 
                    "limit_to_extruder": "=wall_0_extruder_nr", 
                    "label": "Outer Wall Inset", 
                    "maximum_value_warning": "=machine_nozzle_size", 
                    "minimum_value_warning": "=0", 
                    "value": "=(machine_nozzle_size - wall_line_width_0) / 2 if (wall_line_width_0 < machine_nozzle_size and not outer_inset_first) else 0", 
                    "type": "float", 
                    "settable_per_mesh": "True", 
                    "unit": "mm", 
                    "description": "Inset applied to the path of the outer wall. If the outer wall is smaller than the nozzle, and printed after the inner walls, use this offset to get the hole in the nozzle to overlap with the inner walls instead of the outside of the model."
                }, 
                "z_seam_corner": {
                    "children": {}, 
                    "default_value": "z_seam_corner_inner", 
                    "limit_to_extruder": "=wall_0_extruder_nr", 
                    "label": "Seam Corner Preference", 
                    "enabled": "=z_seam_type != 'random'", 
                    "settable_per_mesh": "True", 
                    "options": "OrderedDict([('z_seam_corner_none', 'None'), ('z_seam_corner_inner', 'Hide Seam'), ('z_seam_corner_outer', 'Expose Seam'), ('z_seam_corner_any', 'Hide or Expose Seam')])", 
                    "type": "enum", 
                    "description": "Control whether corners on the model outline influence the position of the seam. None means that corners have no influence on the seam position. Hide Seam makes the seam more likely to occur on an inside corner. Expose Seam makes the seam more likely to occur on an outside corner. Hide or Expose Seam makes the seam more likely to occur at an inside or outside corner."
                }, 
                "ironing_enabled": {
                    "children": {}, 
                    "default_value": "False", 
                    "limit_to_extruder": "=top_bottom_extruder_nr", 
                    "label": "Enable Ironing", 
                    "type": "bool", 
                    "settable_per_mesh": "True", 
                    "description": "Go over the top surface one additional time, but without extruding material. This is meant to melt the plastic on top further, creating a smoother surface."
                }, 
                "ironing_flow": {
                    "children": {}, 
                    "default_value": "10.0", 
                    "limit_to_extruder": "=top_bottom_extruder_nr", 
                    "label": "Ironing Flow", 
                    "maximum_value_warning": "=50", 
                    "unit": "%", 
                    "enabled": "=ironing_enabled", 
                    "settable_per_mesh": "True", 
                    "minimum_value": "=0", 
                    "type": "float", 
                    "description": "The amount of material, relative to a normal skin line, to extrude during ironing. Keeping the nozzle filled helps filling some of the crevices of the top surface, but too much results in overextrusion and blips on the side of the surface."
                }, 
                "z_seam_y": {
                    "children": {}, 
                    "default_value": "100.0", 
                    "limit_to_extruder": "=wall_0_extruder_nr", 
                    "label": "Z Seam Y", 
                    "value": "=machine_depth * 3", 
                    "settable_per_mesh": "True", 
                    "enabled": "=z_seam_type == 'back'", 
                    "unit": "mm", 
                    "type": "float", 
                    "description": "The Y coordinate of the position near where to start printing each part in a layer."
                }, 
                "roofing_layer_count": {
                    "children": {}, 
                    "default_value": "0", 
                    "limit_to_extruder": "=roofing_extruder_nr", 
                    "label": "Top Surface Skin Layers", 
                    "maximum_value_warning": "=top_layers - 1", 
                    "value": "=0", 
                    "settable_per_mesh": "True", 
                    "enabled": "=top_layers > 0", 
                    "minimum_value": "=0", 
                    "type": "int", 
                    "description": "The number of top most skin layers. Usually only one top most layer is sufficient to generate higher quality top surfaces."
                }, 
                "z_seam_x": {
                    "children": {}, 
                    "default_value": "100.0", 
                    "limit_to_extruder": "=wall_0_extruder_nr", 
                    "label": "Z Seam X", 
                    "value": "=machine_width / 2", 
                    "settable_per_mesh": "True", 
                    "enabled": "=z_seam_type == 'back'", 
                    "unit": "mm", 
                    "type": "float", 
                    "description": "The X coordinate of the position near where to start printing each part in a layer."
                }, 
                "roofing_extruder_nr": {
                    "children": {}, 
                    "default_value": "-1", 
                    "settable_globally": "True", 
                    "label": "Top Surface Skin Extruder", 
                    "settable_per_meshgroup": "True", 
                    "enabled": "=extruders_enabled_count > 1 and max(extruderValues('roofing_layer_count')) > 0 and max(extruderValues('top_layers')) > 0", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "False", 
                    "value": "=top_bottom_extruder_nr", 
                    "type": "optional_extruder", 
                    "description": "The extruder train used for printing the top most skin. This is used in multi-extrusion."
                }, 
                "z_seam_relative": {
                    "children": {}, 
                    "default_value": "False", 
                    "limit_to_extruder": "=wall_0_extruder_nr", 
                    "label": "Z Seam Relative", 
                    "enabled": "=z_seam_type == 'back'", 
                    "settable_per_mesh": "True", 
                    "unit": "mm", 
                    "type": "bool", 
                    "description": "When enabled, the z seam coordinates are relative to each part's centre. When disabled, the coordinates define an absolute position on the build plate."
                }, 
                "ironing_line_spacing": {
                    "children": {}, 
                    "default_value": "0.1", 
                    "limit_to_extruder": "=top_bottom_extruder_nr", 
                    "label": "Ironing Line Spacing", 
                    "maximum_value_warning": "=machine_nozzle_tip_outer_diameter", 
                    "unit": "mm", 
                    "enabled": "=ironing_enabled", 
                    "settable_per_mesh": "True", 
                    "minimum_value": "=0.001", 
                    "type": "float", 
                    "description": "The distance between the lines of ironing."
                }, 
                "optimize_wall_printing_order": {
                    "children": {}, 
                    "default_value": "False", 
                    "label": "Optimize Wall Printing Order", 
                    "type": "bool", 
                    "settable_per_mesh": "True", 
                    "description": "Optimize the order in which walls are printed so as to reduce the number of retractions and the distance travelled. Most parts will benefit from this being enabled but some may actually take longer so please compare the print time estimates with and without optimization. First layer is not optimized when choosing brim as build plate adhesion type."
                }, 
                "top_bottom_thickness": {
                    "unit": "mm", 
                    "children": {
                        "top_thickness": {
                            "limit_to_extruder": "=top_bottom_extruder_nr", 
                            "maximum_value": "=machine_height", 
                            "value": "=top_bottom_thickness", 
                            "children": {
                                "top_layers": {
                                    "children": {}, 
                                    "default_value": "8", 
                                    "limit_to_extruder": "=top_bottom_extruder_nr", 
                                    "label": "Top Layers", 
                                    "maximum_value_warning": "=100", 
                                    "minimum_value_warning": "=2", 
                                    "value": "=0 if infill_sparse_density == 100 else math.ceil(round(top_thickness / resolveOrValue('layer_height'), 4))", 
                                    "settable_per_mesh": "True", 
                                    "minimum_value": "=0", 
                                    "type": "int", 
                                    "description": "The number of top layers. When calculated by the top thickness, this value is rounded to a whole number."
                                }
                            }, 
                            "unit": "mm", 
                            "default_value": "0.8", 
                            "label": "Top Thickness", 
                            "minimum_value_warning": "=0.2 + resolveOrValue('layer_height')", 
                            "minimum_value": "=0", 
                            "settable_per_mesh": "True", 
                            "type": "float", 
                            "description": "The thickness of the top layers in the print. This value divided by the layer height defines the number of top layers."
                        }, 
                        "bottom_thickness": {
                            "limit_to_extruder": "=top_bottom_extruder_nr", 
                            "maximum_value": "=machine_height", 
                            "value": "=top_bottom_thickness", 
                            "children": {
                                "bottom_layers": {
                                    "children": {}, 
                                    "default_value": "6", 
                                    "limit_to_extruder": "=top_bottom_extruder_nr", 
                                    "label": "Bottom Layers", 
                                    "minimum_value_warning": "=2", 
                                    "value": "=999999 if infill_sparse_density == 100 else math.ceil(round(bottom_thickness / resolveOrValue('layer_height'), 4))", 
                                    "settable_per_mesh": "True", 
                                    "minimum_value": "=0", 
                                    "type": "int", 
                                    "description": "The number of bottom layers. When calculated by the bottom thickness, this value is rounded to a whole number."
                                }
                            }, 
                            "unit": "mm", 
                            "default_value": "0.6", 
                            "label": "Bottom Thickness", 
                            "minimum_value_warning": "=0.2 + resolveOrValue('layer_height')", 
                            "minimum_value": "=0", 
                            "settable_per_mesh": "True", 
                            "type": "float", 
                            "description": "The thickness of the bottom layers in the print. This value divided by the layer height defines the number of bottom layers."
                        }
                    }, 
                    "default_value": "0.8", 
                    "limit_to_extruder": "=top_bottom_extruder_nr", 
                    "label": "Top/Bottom Thickness", 
                    "maximum_value": "=machine_height", 
                    "minimum_value_warning": "=0.6", 
                    "type": "float", 
                    "settable_per_mesh": "True", 
                    "minimum_value": "=0", 
                    "description": "The thickness of the top/bottom layers in the print. This value divided by the layer height defines the number of top/bottom layers."
                }
            }, 
            "type": "category", 
            "label": "Shell", 
            "description": "Shell"
        }, 
        "machine_settings": {
            "icon": "category_machine", 
            "children": {
                "machine_shape": {
                    "children": {}, 
                    "default_value": "rectangular", 
                    "label": "Build Plate Shape", 
                    "settable_per_meshgroup": "False", 
                    "settable_per_extruder": "False", 
                    "type": "enum", 
                    "settable_per_mesh": "False", 
                    "options": "OrderedDict([('rectangular', 'Rectangular'), ('elliptic', 'Elliptic')])", 
                    "description": "The shape of the build plate without taking unprintable areas into account."
                }, 
                "machine_steps_per_mm_e": {
                    "children": {}, 
                    "default_value": "1600", 
                    "label": "Steps per Millimeter (E)", 
                    "type": "int", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "True", 
                    "minimum_value": "=0.0000001", 
                    "description": "How many steps of the stepper motors will result in one millimeter of extrusion."
                }, 
                "material_guid": {
                    "children": {}, 
                    "default_value": "", 
                    "label": "Material GUID", 
                    "enabled": "=False", 
                    "type": "str", 
                    "description": "GUID of the material. This is set automatically. "
                }, 
                "machine_filament_park_distance": {
                    "children": {}, 
                    "default_value": "16", 
                    "label": "Filament Park Distance", 
                    "settable_per_meshgroup": "False", 
                    "value": "=machine_heat_zone_length", 
                    "type": "float", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "True", 
                    "unit": "mm", 
                    "description": "The distance from the tip of the nozzle where to park the filament when an extruder is no longer used."
                }, 
                "machine_endstop_positive_direction_y": {
                    "children": {}, 
                    "default_value": "False", 
                    "label": "Y Endstop in Positive Direction", 
                    "type": "bool", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "True", 
                    "description": "Whether the endstop of the Y axis is in the positive direction (high Y coordinate) or negative (low Y coordinate)."
                }, 
                "machine_max_feedrate_y": {
                    "children": {}, 
                    "default_value": "500", 
                    "label": "Maximum Speed Y", 
                    "settable_per_meshgroup": "False", 
                    "type": "float", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "False", 
                    "unit": "mm/s", 
                    "description": "The maximum speed for the motor of the Y-direction."
                }, 
                "machine_max_jerk_z": {
                    "children": {}, 
                    "default_value": "0.4", 
                    "unit": "mm/s", 
                    "label": "Default Z Jerk", 
                    "settable_per_meshgroup": "False", 
                    "type": "float", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "False", 
                    "minimum_value": "=0", 
                    "description": "Default jerk for the motor of the Z-direction."
                }, 
                "material_print_temp_wait": {
                    "children": {}, 
                    "default_value": "True", 
                    "label": "Wait for Nozzle Heatup", 
                    "settable_per_meshgroup": "False", 
                    "enabled": "=machine_nozzle_temp_enabled", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "False", 
                    "type": "bool", 
                    "description": "Whether to wait until the nozzle temperature is reached at the start."
                }, 
                "machine_start_gcode": {
                    "children": {}, 
                    "default_value": "G90\nG21\n; home all axes\nG28\nG92 X0 Y0 Z0\n; move heatbed into position\nG1 X20.0 Y20.0 Z1.0 F1000\n; zero extruders\nG92 E0 E1\nT0; right tool\n; set extruder steps per mm\nM92 E140\nT1; left tool\n; set extruder steps per mm\nM92 E140\nT0; left tool\nG92 E0 E1\n; purge nozzle\nG1 E25 F250\nT1; left tool\nG92 E0 E1\n; purge nozzle\nG1 E25 F250\n; zero extruders\nG92 E0 E1\n; move heatbed down a little more\nG1 Z5.0 F20\n; wait 600ms\nG4 600\n; move to tack down the strands\nG1 X20.0 Y30.0 Z0 F9000\n; wait 600ms\nG4 600\n;move up a bit\nG1 Z5.0 F9000\n; wait 300ms\nG4 300\n;fast move to center\nG1 X152.5 Y152.5 F9000\nT0\n;Raise3D Job Start\nM117 Printing\u2026\nM1001\n", 
                    "label": "Start G-code", 
                    "settable_per_meshgroup": "False", 
                    "type": "str", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "False", 
                    "description": "G-code commands to be executed at the very start - separated by \\n."
                }, 
                "machine_nozzle_expansion_angle": {
                    "children": {}, 
                    "default_value": "45", 
                    "unit": "\u00b0", 
                    "label": "Nozzle angle", 
                    "settable_per_meshgroup": "False", 
                    "maximum_value": "=89", 
                    "type": "int", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "False", 
                    "minimum_value": "=1", 
                    "description": "The angle between the horizontal plane and the conical part right above the tip of the nozzle."
                }, 
                "machine_heated_bed": {
                    "children": {}, 
                    "default_value": "True", 
                    "label": "Has Heated Build Plate", 
                    "settable_per_meshgroup": "False", 
                    "type": "bool", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "False", 
                    "description": "Whether the machine has a heated build plate present."
                }, 
                "machine_nozzle_cool_down_speed": {
                    "children": {}, 
                    "default_value": "4", 
                    "label": "Cool down speed", 
                    "enabled": "=machine_nozzle_temp_enabled", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "True", 
                    "unit": "\u00b0C/s", 
                    "type": "float", 
                    "description": "The speed (\u00b0C/s) by which the nozzle cools down averaged over the window of normal printing temperatures and the standby temperature."
                }, 
                "machine_endstop_positive_direction_x": {
                    "children": {}, 
                    "default_value": "False", 
                    "label": "X Endstop in Positive Direction", 
                    "type": "bool", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "True", 
                    "description": "Whether the endstop of the X axis is in the positive direction (high X coordinate) or negative (low X coordinate)."
                }, 
                "machine_gcode_flavor": {
                    "children": {}, 
                    "default_value": "RepRap (Marlin/Sprinter)", 
                    "label": "G-code flavour", 
                    "settable_per_meshgroup": "False", 
                    "settable_per_extruder": "False", 
                    "type": "enum", 
                    "settable_per_mesh": "False", 
                    "options": "OrderedDict([('RepRap (Marlin/Sprinter)', 'Marlin'), ('RepRap (Volumetric)', 'Marlin (Volumetric)'), ('RepRap (RepRap)', 'RepRap'), ('UltiGCode', 'Ultimaker 2'), ('Griffin', 'Griffin'), ('Makerbot', 'Makerbot'), ('BFB', 'Bits from Bytes'), ('MACH3', 'Mach3'), ('Repetier', 'Repetier')])", 
                    "description": "The type of g-code to be generated."
                }, 
                "machine_feeder_wheel_diameter": {
                    "children": {}, 
                    "default_value": "10.0", 
                    "label": "Feeder Wheel Diameter", 
                    "type": "float", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "True", 
                    "unit": "mm", 
                    "description": "The diameter of the wheel that drives the material in the feeder."
                }, 
                "machine_nozzle_head_distance": {
                    "children": {}, 
                    "default_value": "3", 
                    "label": "Nozzle length", 
                    "settable_per_meshgroup": "False", 
                    "type": "float", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "True", 
                    "unit": "mm", 
                    "description": "The height difference between the tip of the nozzle and the lowest part of the print head."
                }, 
                "machine_end_gcode": {
                    "children": {}, 
                    "default_value": "M107\nM1002\nM104 S0 T1\nM104 S0 T0\nM140 S0\nM117 Print Complete.\nG28 X0 Y0\nG91\nG1 Z10\nG90\nM84", 
                    "label": "End G-code", 
                    "settable_per_meshgroup": "False", 
                    "type": "str", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "False", 
                    "description": "G-code commands to be executed at the very end - separated by \\n."
                }, 
                "machine_height": {
                    "children": {}, 
                    "default_value": "610", 
                    "label": "Machine Height", 
                    "settable_per_meshgroup": "False", 
                    "type": "float", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "False", 
                    "description": "The height (Z-direction) of the printable area."
                }, 
                "machine_center_is_zero": {
                    "children": {}, 
                    "default_value": "False", 
                    "label": "Is Center Origin", 
                    "settable_per_meshgroup": "False", 
                    "type": "bool", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "False", 
                    "description": "Whether the X/Y coordinates of the zero position of the printer is at the center of the printable area."
                }, 
                "machine_nozzle_temp_enabled": {
                    "children": {}, 
                    "default_value": "True", 
                    "label": "Enable Nozzle Temperature Control", 
                    "settable_per_meshgroup": "False", 
                    "value": "=machine_gcode_flavor != \"UltiGCode\"", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "True", 
                    "type": "bool", 
                    "description": "Whether to control temperature from Cura. Turn this off to control nozzle temperature from outside of Cura."
                }, 
                "machine_min_cool_heat_time_window": {
                    "children": {}, 
                    "default_value": "3600", 
                    "label": "Minimal Time Standby Temperature", 
                    "enabled": "=machine_nozzle_temp_enabled", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "True", 
                    "unit": "s", 
                    "type": "float", 
                    "description": "The minimal time an extruder has to be inactive before the nozzle is cooled. Only when an extruder is not used for longer than this time will it be allowed to cool down to the standby temperature."
                }, 
                "machine_max_feedrate_e": {
                    "children": {}, 
                    "default_value": "299792458000", 
                    "label": "Maximum Feedrate", 
                    "settable_per_meshgroup": "False", 
                    "type": "float", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "False", 
                    "unit": "mm/s", 
                    "description": "The maximum speed of the filament."
                }, 
                "machine_width": {
                    "children": {}, 
                    "default_value": "305", 
                    "label": "Machine Width", 
                    "settable_per_meshgroup": "False", 
                    "type": "float", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "False", 
                    "description": "The width (X-direction) of the printable area."
                }, 
                "machine_disallowed_areas": {
                    "children": {}, 
                    "default_value": "[]", 
                    "label": "Disallowed areas", 
                    "settable_per_meshgroup": "False", 
                    "type": "polygons", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "False", 
                    "description": "A list of polygons with areas the print head is not allowed to enter."
                }, 
                "machine_max_feedrate_z": {
                    "children": {}, 
                    "default_value": "5", 
                    "label": "Maximum Speed Z", 
                    "settable_per_meshgroup": "False", 
                    "type": "float", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "False", 
                    "unit": "mm/s", 
                    "description": "The maximum speed for the motor of the Z-direction."
                }, 
                "machine_head_with_fans_polygon": {
                    "children": {}, 
                    "default_value": "[[-75, 35], [-75, -18], [18, 35], [18, -18]]", 
                    "label": "Machine head & Fan polygon", 
                    "settable_per_meshgroup": "False", 
                    "type": "polygon", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "False", 
                    "description": "A 2D silhouette of the print head (fan caps included)."
                }, 
                "machine_steps_per_mm_y": {
                    "children": {}, 
                    "default_value": "50", 
                    "label": "Steps per Millimeter (Y)", 
                    "type": "int", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "True", 
                    "minimum_value": "=0.0000001", 
                    "description": "How many steps of the stepper motor will result in one millimeter of movement in the Y direction."
                }, 
                "machine_acceleration": {
                    "children": {}, 
                    "default_value": "4000", 
                    "label": "Default Acceleration", 
                    "settable_per_meshgroup": "False", 
                    "type": "float", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "False", 
                    "unit": "mm/s\u00b2", 
                    "description": "The default acceleration of print head movement."
                }, 
                "machine_steps_per_mm_x": {
                    "children": {}, 
                    "default_value": "50", 
                    "label": "Steps per Millimeter (X)", 
                    "type": "int", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "True", 
                    "minimum_value": "=0.0000001", 
                    "description": "How many steps of the stepper motor will result in one millimeter of movement in the X direction."
                }, 
                "material_print_temp_prepend": {
                    "children": {}, 
                    "default_value": "True", 
                    "label": "Include Material Temperatures", 
                    "settable_per_meshgroup": "False", 
                    "enabled": "=machine_nozzle_temp_enabled", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "False", 
                    "type": "bool", 
                    "description": "Whether to include nozzle temperature commands at the start of the gcode. When the start_gcode already contains nozzle temperature commands Cura frontend will automatically disable this setting."
                }, 
                "machine_endstop_positive_direction_z": {
                    "children": {}, 
                    "default_value": "True", 
                    "label": "Z Endstop in Positive Direction", 
                    "type": "bool", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "True", 
                    "description": "Whether the endstop of the Z axis is in the positive direction (high Z coordinate) or negative (low Z coordinate)."
                }, 
                "machine_max_acceleration_e": {
                    "children": {}, 
                    "default_value": "10000", 
                    "label": "Maximum Filament Acceleration", 
                    "settable_per_meshgroup": "False", 
                    "type": "float", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "False", 
                    "unit": "mm/s\u00b2", 
                    "description": "Maximum acceleration for the motor of the filament."
                }, 
                "machine_max_jerk_e": {
                    "children": {}, 
                    "default_value": "5.0", 
                    "unit": "mm/s", 
                    "label": "Default Filament Jerk", 
                    "settable_per_meshgroup": "False", 
                    "type": "float", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "False", 
                    "minimum_value": "=0", 
                    "description": "Default jerk for the motor of the filament."
                }, 
                "extruders_enabled_count": {
                    "children": {}, 
                    "settable_per_meshgroup": "False", 
                    "label": "Number of Extruders that are enabled", 
                    "maximum_value": "=16", 
                    "value": "=machine_extruder_count", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "False", 
                    "minimum_value": "=1", 
                    "type": "int", 
                    "description": "Number of extruder trains that are enabled; automatically set in software"
                }, 
                "machine_heat_zone_length": {
                    "children": {}, 
                    "default_value": "16", 
                    "label": "Heat zone length", 
                    "settable_per_meshgroup": "False", 
                    "type": "float", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "True", 
                    "unit": "mm", 
                    "description": "The distance from the tip of the nozzle in which heat from the nozzle is transferred to the filament."
                }, 
                "machine_steps_per_mm_z": {
                    "children": {}, 
                    "default_value": "50", 
                    "label": "Steps per Millimeter (Z)", 
                    "type": "int", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "True", 
                    "minimum_value": "=0.0000001", 
                    "description": "How many steps of the stepper motor will result in one millimeter of movement in the Z direction."
                }, 
                "machine_minimum_feedrate": {
                    "children": {}, 
                    "default_value": "0.0", 
                    "label": "Minimum Feedrate", 
                    "settable_per_meshgroup": "False", 
                    "type": "float", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "False", 
                    "unit": "mm/s", 
                    "description": "The minimal movement speed of the print head."
                }, 
                "machine_buildplate_type": {
                    "children": {}, 
                    "default_value": "glass", 
                    "label": "Build Plate Material", 
                    "settable_per_meshgroup": "False", 
                    "settable_per_extruder": "False", 
                    "type": "enum", 
                    "settable_per_mesh": "False", 
                    "options": "OrderedDict([('glass', 'Glass'), ('aluminum', 'Aluminum')])", 
                    "description": "The material of the build plate installed on the printer."
                }, 
                "machine_firmware_retract": {
                    "children": {}, 
                    "default_value": "False", 
                    "label": "Firmware Retraction", 
                    "settable_per_meshgroup": "False", 
                    "value": "=machine_gcode_flavor == 'RepRap (Volumetric)' or machine_gcode_flavor == 'UltiGCode' or machine_gcode_flavor == 'BFB'", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "False", 
                    "type": "bool", 
                    "description": "Whether to use firmware retract commands (G10/G11) instead of using the E property in G1 commands to retract the material."
                }, 
                "machine_max_acceleration_y": {
                    "children": {}, 
                    "default_value": "9000", 
                    "label": "Maximum Acceleration Y", 
                    "settable_per_meshgroup": "False", 
                    "type": "float", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "False", 
                    "unit": "mm/s\u00b2", 
                    "description": "Maximum acceleration for the motor of the Y-direction."
                }, 
                "machine_max_acceleration_z": {
                    "children": {}, 
                    "default_value": "100", 
                    "label": "Maximum Acceleration Z", 
                    "settable_per_meshgroup": "False", 
                    "type": "float", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "False", 
                    "unit": "mm/s\u00b2", 
                    "description": "Maximum acceleration for the motor of the Z-direction."
                }, 
                "extruder_prime_pos_abs": {
                    "children": {}, 
                    "default_value": "False", 
                    "label": "Absolute Extruder Prime Position", 
                    "type": "bool", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "True", 
                    "description": "Make the extruder prime position absolute rather than relative to the last-known location of the head."
                }, 
                "machine_extruder_count": {
                    "children": {}, 
                    "default_value": "2", 
                    "label": "Number of Extruders", 
                    "settable_per_meshgroup": "False", 
                    "maximum_value": "=16", 
                    "type": "int", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "False", 
                    "minimum_value": "=1", 
                    "description": "Number of extruder trains. An extruder train is the combination of a feeder, bowden tube, and nozzle."
                }, 
                "nozzle_disallowed_areas": {
                    "children": {}, 
                    "default_value": "[]", 
                    "label": "Nozzle Disallowed Areas", 
                    "settable_per_meshgroup": "False", 
                    "type": "polygons", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "False", 
                    "description": "A list of polygons with areas the nozzle is not allowed to enter."
                }, 
                "material_bed_temp_wait": {
                    "children": {}, 
                    "default_value": "True", 
                    "label": "Wait for Build Plate Heatup", 
                    "settable_per_meshgroup": "False", 
                    "type": "bool", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "False", 
                    "description": "Whether to insert a command to wait until the build plate temperature is reached at the start."
                }, 
                "machine_nozzle_tip_outer_diameter": {
                    "children": {}, 
                    "default_value": "1", 
                    "settable_globally": "False", 
                    "label": "Outer nozzle diameter", 
                    "settable_per_meshgroup": "False", 
                    "type": "float", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "True", 
                    "unit": "mm", 
                    "description": "The outer diameter of the tip of the nozzle."
                }, 
                "machine_nozzle_heat_up_speed": {
                    "children": {}, 
                    "default_value": "6", 
                    "label": "Heat up speed", 
                    "enabled": "=machine_nozzle_temp_enabled", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "True", 
                    "unit": "\u00b0C/s", 
                    "type": "float", 
                    "description": "The speed (\u00b0C/s) by which the nozzle heats up averaged over the window of normal printing temperatures and the standby temperature."
                }, 
                "machine_nozzle_size": {
                    "children": {}, 
                    "default_value": "0.4", 
                    "unit": "mm", 
                    "label": "Nozzle Diameter", 
                    "maximum_value_warning": "=10", 
                    "type": "float", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "True", 
                    "minimum_value": "=0.001", 
                    "description": "The inner diameter of the nozzle. Change this setting when using a non-standard nozzle size."
                }, 
                "machine_head_polygon": {
                    "children": {}, 
                    "default_value": "[[-1, 1], [-1, -1], [1, -1], [1, 1]]", 
                    "label": "Machine head polygon", 
                    "settable_per_meshgroup": "False", 
                    "type": "polygon", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "False", 
                    "description": "A 2D silhouette of the print head (fan caps excluded)."
                }, 
                "machine_depth": {
                    "children": {}, 
                    "default_value": "305", 
                    "label": "Machine Depth", 
                    "settable_per_meshgroup": "False", 
                    "type": "float", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "False", 
                    "description": "The depth (Y-direction) of the printable area."
                }, 
                "machine_max_jerk_xy": {
                    "children": {}, 
                    "default_value": "20.0", 
                    "unit": "mm/s", 
                    "label": "Default X-Y Jerk", 
                    "settable_per_meshgroup": "False", 
                    "type": "float", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "False", 
                    "minimum_value": "=0", 
                    "description": "Default jerk for movement in the horizontal plane."
                }, 
                "machine_max_feedrate_x": {
                    "children": {}, 
                    "default_value": "500", 
                    "label": "Maximum Speed X", 
                    "settable_per_meshgroup": "False", 
                    "type": "float", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "False", 
                    "unit": "mm/s", 
                    "description": "The maximum speed for the motor of the X-direction."
                }, 
                "machine_show_variants": {
                    "children": {}, 
                    "default_value": "False", 
                    "label": "Show Machine Variants", 
                    "settable_per_meshgroup": "False", 
                    "type": "bool", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "False", 
                    "description": "Whether to show the different variants of this machine, which are described in separate json files."
                }, 
                "gantry_height": {
                    "children": {}, 
                    "default_value": "55", 
                    "label": "Gantry height", 
                    "settable_per_meshgroup": "False", 
                    "type": "float", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "False", 
                    "description": "The height difference between the tip of the nozzle and the gantry system (X and Y axes)."
                }, 
                "machine_name": {
                    "children": {}, 
                    "default_value": "Raise3D N2 Plus Dual", 
                    "label": "Machine Type", 
                    "settable_per_meshgroup": "False", 
                    "type": "str", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "False", 
                    "description": "The name of your 3D printer model."
                }, 
                "machine_nozzle_id": {
                    "children": {}, 
                    "default_value": "unknown", 
                    "label": "Nozzle ID", 
                    "type": "str", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "True", 
                    "description": "The nozzle ID for an extruder train, such as \"AA 0.4\" and \"BB 0.8\"."
                }, 
                "material_bed_temp_prepend": {
                    "children": {}, 
                    "default_value": "True", 
                    "label": "Include Build Plate Temperature", 
                    "settable_per_meshgroup": "False", 
                    "type": "bool", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "False", 
                    "description": "Whether to include build plate temperature commands at the start of the gcode. When the start_gcode already contains build plate temperature commands Cura frontend will automatically disable this setting."
                }, 
                "extruder_prime_pos_z": {
                    "children": {}, 
                    "default_value": "0", 
                    "label": "Extruder Prime Z Position", 
                    "maximum_value": "=machine_height", 
                    "minimum_value_warning": "=0", 
                    "type": "float", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "True", 
                    "unit": "mm", 
                    "description": "The Z coordinate of the position where the nozzle primes at the start of printing."
                }, 
                "machine_max_acceleration_x": {
                    "children": {}, 
                    "default_value": "9000", 
                    "label": "Maximum Acceleration X", 
                    "settable_per_meshgroup": "False", 
                    "type": "float", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "False", 
                    "unit": "mm/s\u00b2", 
                    "description": "Maximum acceleration for the motor of the X-direction"
                }, 
                "machine_use_extruder_offset_to_offset_coords": {
                    "children": {}, 
                    "default_value": "True", 
                    "label": "Offset With Extruder", 
                    "settable_per_meshgroup": "False", 
                    "type": "bool", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "False", 
                    "description": "Apply the extruder offset to the coordinate system."
                }
            }, 
            "type": "category", 
            "label": "Machine", 
            "description": "Machine specific settings"
        }, 
        "command_line_settings": {
            "children": {
                "mesh_rotation_matrix": {
                    "children": {}, 
                    "default_value": "[[1,0,0], [0,1,0], [0,0,1]]", 
                    "label": "Mesh Rotation Matrix", 
                    "enabled": "=False", 
                    "type": "str", 
                    "description": "Transformation matrix to be applied to the model when loading it from file."
                }, 
                "mesh_position_z": {
                    "children": {}, 
                    "default_value": "0", 
                    "label": "Mesh Position Z", 
                    "enabled": "=False", 
                    "type": "float", 
                    "description": "Offset applied to the object in the z direction. With this you can perform what was used to be called 'Object Sink'."
                }, 
                "mesh_position_y": {
                    "children": {}, 
                    "default_value": "0", 
                    "label": "Mesh Position Y", 
                    "enabled": "=False", 
                    "type": "float", 
                    "description": "Offset applied to the object in the y direction."
                }, 
                "center_object": {
                    "children": {}, 
                    "default_value": "False", 
                    "label": "Center Object", 
                    "enabled": "=False", 
                    "type": "bool", 
                    "description": "Whether to center the object on the middle of the build platform (0,0), instead of using the coordinate system in which the object was saved."
                }, 
                "mesh_position_x": {
                    "children": {}, 
                    "default_value": "0", 
                    "label": "Mesh Position X", 
                    "enabled": "=False", 
                    "type": "float", 
                    "description": "Offset applied to the object in the x direction."
                }
            }, 
            "type": "category", 
            "enabled": "=False", 
            "label": "Command Line Settings", 
            "description": "Settings which are only used if CuraEngine isn't called from the Cura frontend."
        }, 
        "cooling": {
            "icon": "category_cool", 
            "children": {
                "cool_min_speed": {
                    "children": {}, 
                    "default_value": "10", 
                    "unit": "mm/s", 
                    "label": "Minimum Speed", 
                    "maximum_value_warning": "=100", 
                    "type": "float", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "True", 
                    "minimum_value": "=0", 
                    "description": "The minimum print speed, despite slowing down due to the minimum layer time. When the printer would slow down too much, the pressure in the nozzle would be too low and result in bad print quality."
                }, 
                "cool_min_layer_time_fan_speed_max": {
                    "children": {}, 
                    "default_value": "10", 
                    "label": "Regular/Maximum Fan Speed Threshold", 
                    "maximum_value_warning": "=600", 
                    "type": "float", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "True", 
                    "unit": "s", 
                    "description": "The layer time which sets the threshold between regular fan speed and maximum fan speed. Layers that print slower than this time use regular fan speed. For faster layers the fan speed gradually increases towards the maximum fan speed."
                }, 
                "cool_fan_speed_0": {
                    "children": {}, 
                    "default_value": "0", 
                    "unit": "%", 
                    "label": "Initial Fan Speed", 
                    "maximum_value": "=100", 
                    "enabled": "=cool_fan_enabled", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "True", 
                    "minimum_value": "=0", 
                    "type": "float", 
                    "description": "The speed at which the fans spin at the start of the print. In subsequent layers the fan speed is gradually increased up to the layer corresponding to Regular Fan Speed at Height."
                }, 
                "cool_fan_speed": {
                    "minimum_value": "=0", 
                    "maximum_value": "=100", 
                    "value": "=100.0 if cool_fan_enabled else 0.0", 
                    "settable_per_extruder": "True", 
                    "unit": "%", 
                    "children": {
                        "cool_fan_speed_max": {
                            "minimum_value": "=max(0, cool_fan_speed_min)", 
                            "maximum_value": "=100", 
                            "value": "=cool_fan_speed", 
                            "settable_per_extruder": "True", 
                            "unit": "%", 
                            "children": {}, 
                            "default_value": "100", 
                            "label": "Maximum Fan Speed", 
                            "enabled": "=cool_fan_enabled", 
                            "settable_per_mesh": "False", 
                            "type": "float", 
                            "description": "The speed at which the fans spin on the minimum layer time. The fan speed gradually increases between the regular fan speed and maximum fan speed when the threshold is hit."
                        }, 
                        "cool_fan_speed_min": {
                            "minimum_value": "=0", 
                            "maximum_value": "=100", 
                            "value": "=cool_fan_speed", 
                            "settable_per_extruder": "True", 
                            "unit": "%", 
                            "children": {}, 
                            "default_value": "100", 
                            "label": "Regular Fan Speed", 
                            "enabled": "=cool_fan_enabled", 
                            "settable_per_mesh": "False", 
                            "type": "float", 
                            "description": "The speed at which the fans spin before hitting the threshold. When a layer prints faster than the threshold, the fan speed gradually inclines towards the maximum fan speed."
                        }
                    }, 
                    "default_value": "100", 
                    "label": "Fan Speed", 
                    "enabled": "=cool_fan_enabled", 
                    "settable_per_mesh": "False", 
                    "type": "float", 
                    "description": "The speed at which the print cooling fans spin."
                }, 
                "cool_lift_head": {
                    "children": {}, 
                    "default_value": "False", 
                    "label": "Lift Head", 
                    "type": "bool", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "True", 
                    "description": "When the minimum speed is hit because of minimum layer time, lift the head away from the print and wait the extra time until the minimum layer time is reached."
                }, 
                "cool_min_layer_time": {
                    "children": {}, 
                    "default_value": "5", 
                    "unit": "s", 
                    "label": "Minimum Layer Time", 
                    "maximum_value_warning": "=600", 
                    "type": "float", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "True", 
                    "minimum_value": "=0", 
                    "description": "The minimum time spent in a layer. This forces the printer to slow down, to at least spend the time set here in one layer. This allows the printed material to cool down properly before printing the next layer. Layers may still take shorter than the minimal layer time if Lift Head is disabled and if the Minimum Speed would otherwise be violated."
                }, 
                "cool_fan_enabled": {
                    "children": {}, 
                    "default_value": "True", 
                    "label": "Enable Print Cooling", 
                    "type": "bool", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "True", 
                    "description": "Enables the print cooling fans while printing. The fans improve print quality on layers with short layer times and bridging / overhangs."
                }, 
                "cool_fan_full_at_height": {
                    "children": {
                        "cool_fan_full_layer": {
                            "children": {}, 
                            "default_value": "2", 
                            "label": "Regular Fan Speed at Layer", 
                            "maximum_value_warning": "=10 / resolveOrValue('layer_height')", 
                            "value": "=max(1, int(math.floor((cool_fan_full_at_height - resolveOrValue('layer_height_0')) / resolveOrValue('layer_height')) + 2))", 
                            "settable_per_mesh": "False", 
                            "settable_per_extruder": "True", 
                            "minimum_value": "=1", 
                            "type": "int", 
                            "description": "The layer at which the fans spin on regular fan speed. If regular fan speed at height is set, this value is calculated and rounded to a whole number."
                        }
                    }, 
                    "default_value": "0.5", 
                    "unit": "mm", 
                    "label": "Regular Fan Speed at Height", 
                    "maximum_value_warning": "=10.0", 
                    "settable_per_extruder": "True", 
                    "value": "=0 if resolveOrValue('adhesion_type') == 'raft' else resolveOrValue('layer_height_0')", 
                    "type": "float", 
                    "settable_per_mesh": "False", 
                    "minimum_value": "=0", 
                    "description": "The height at which the fans spin on regular fan speed. At the layers below the fan speed gradually increases from Initial Fan Speed to Regular Fan Speed."
                }
            }, 
            "type": "category", 
            "label": "Cooling", 
            "description": "Cooling"
        }, 
        "travel": {
            "icon": "category_travel", 
            "children": {
                "travel_avoid_supports": {
                    "children": {}, 
                    "default_value": "False", 
                    "label": "Avoid Supports When Traveling", 
                    "enabled": "=resolveOrValue('retraction_combing') != 'off' and travel_avoid_other_parts", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "True", 
                    "type": "bool", 
                    "description": "The nozzle avoids already printed supports when traveling. This option is only available when combing is enabled."
                }, 
                "retraction_hop_enabled": {
                    "children": {}, 
                    "default_value": "False", 
                    "label": "Z Hop When Retracted", 
                    "enabled": "=retraction_enable", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "True", 
                    "type": "bool", 
                    "description": "Whenever a retraction is done, the build plate is lowered to create clearance between the nozzle and the print. It prevents the nozzle from hitting the print during travel moves, reducing the chance to knock the print from the build plate."
                }, 
                "retraction_combing_max_distance": {
                    "children": {}, 
                    "default_value": "0", 
                    "unit": "mm", 
                    "label": "Max Comb Distance With No Retract", 
                    "enabled": "=resolveOrValue('retraction_combing') != 'off'", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "True", 
                    "minimum_value": "=0", 
                    "type": "float", 
                    "description": "When non-zero, combing travel moves that are longer than this distance will use retraction."
                }, 
                "travel_avoid_distance": {
                    "unit": "mm", 
                    "maximum_value_warning": "=machine_nozzle_tip_outer_diameter * 5", 
                    "value": "=machine_nozzle_tip_outer_diameter / 2 * 1.25", 
                    "settable_per_extruder": "True", 
                    "minimum_value": "=0", 
                    "children": {}, 
                    "default_value": "0.625", 
                    "label": "Travel Avoid Distance", 
                    "minimum_value_warning": "=machine_nozzle_tip_outer_diameter * 0.5", 
                    "enabled": "=resolveOrValue('retraction_combing') != 'off' and travel_avoid_other_parts", 
                    "settable_per_mesh": "False", 
                    "type": "float", 
                    "description": "The distance between the nozzle and already printed parts when avoiding during travel moves."
                }, 
                "retraction_combing": {
                    "children": {}, 
                    "default_value": "all", 
                    "description": "Combing keeps the nozzle within already printed areas when traveling. This results in slightly longer travel moves but reduces the need for retractions. If combing is off, the material will retract and the nozzle moves in a straight line to the next point. It is also possible to avoid combing over top/bottom skin areas by combing within the infill only.", 
                    "resolve": "='noskin' if 'noskin' in extruderValues('retraction_combing') else ('all' if 'all' in extruderValues('retraction_combing') else 'off')", 
                    "type": "enum", 
                    "settable_per_mesh": "False", 
                    "options": "OrderedDict([('off', 'Off'), ('all', 'All'), ('noskin', 'Not in Skin')])", 
                    "settable_per_extruder": "False", 
                    "label": "Combing Mode"
                }, 
                "layer_start_x": {
                    "children": {}, 
                    "default_value": "0.0", 
                    "unit": "mm", 
                    "label": "Layer Start X", 
                    "settable_per_meshgroup": "True", 
                    "type": "float", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "True", 
                    "minimum_value": "=machine_width / -2 if machine_center_is_zero else 0", 
                    "description": "The X coordinate of the position near where to find the part to start printing each layer."
                }, 
                "retraction_hop_after_extruder_switch": {
                    "children": {}, 
                    "default_value": "True", 
                    "label": "Z Hop After Extruder Switch", 
                    "enabled": "=retraction_hop_enabled and extruders_enabled_count > 1", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "True", 
                    "type": "bool", 
                    "description": "After the machine switched from one extruder to the other, the build plate is lowered to create clearance between the nozzle and the print. This prevents the nozzle from leaving oozed material on the outside of a print."
                }, 
                "layer_start_y": {
                    "children": {}, 
                    "default_value": "0.0", 
                    "unit": "mm", 
                    "label": "Layer Start Y", 
                    "settable_per_meshgroup": "True", 
                    "type": "float", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "True", 
                    "minimum_value": "=machine_depth / -2 if machine_center_is_zero else 0", 
                    "description": "The Y coordinate of the position near where to find the part to start printing each layer."
                }, 
                "retraction_hop": {
                    "children": {}, 
                    "default_value": "1", 
                    "label": "Z Hop Height", 
                    "maximum_value_warning": "=10", 
                    "minimum_value_warning": "=0", 
                    "enabled": "=retraction_enable and retraction_hop_enabled", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "True", 
                    "unit": "mm", 
                    "type": "float", 
                    "description": "The height difference when performing a Z Hop."
                }, 
                "start_layers_at_same_position": {
                    "children": {}, 
                    "default_value": "False", 
                    "label": "Start Layers with the Same Part", 
                    "settable_per_meshgroup": "True", 
                    "enabled": "=False", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "False", 
                    "type": "bool", 
                    "description": "In each layer start with printing the object near the same point, so that we don't start a new layer with printing the piece which the previous layer ended with. This makes for better overhangs and small parts, but increases printing time."
                }, 
                "travel_retract_before_outer_wall": {
                    "children": {}, 
                    "default_value": "False", 
                    "label": "Retract Before Outer Wall", 
                    "enabled": "=retraction_enable", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "False", 
                    "type": "bool", 
                    "description": "Always retract when moving to start an outer wall."
                }, 
                "retraction_hop_only_when_collides": {
                    "children": {}, 
                    "default_value": "False", 
                    "label": "Z Hop Only Over Printed Parts", 
                    "enabled": "=retraction_enable and retraction_hop_enabled and travel_avoid_other_parts", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "True", 
                    "type": "bool", 
                    "description": "Only perform a Z Hop when moving over printed parts which cannot be avoided by horizontal motion by Avoid Printed Parts when Traveling."
                }, 
                "travel_avoid_other_parts": {
                    "children": {}, 
                    "default_value": "True", 
                    "label": "Avoid Printed Parts When Traveling", 
                    "enabled": "=resolveOrValue('retraction_combing') != 'off'", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "True", 
                    "type": "bool", 
                    "description": "The nozzle avoids already printed parts when traveling. This option is only available when combing is enabled."
                }
            }, 
            "type": "category", 
            "label": "Travel", 
            "description": "travel"
        }, 
        "infill": {
            "icon": "category_infill", 
            "children": {
                "gradual_infill_step_height": {
                    "children": {}, 
                    "default_value": "1.5", 
                    "limit_to_extruder": "=infill_extruder_nr", 
                    "label": "Gradual Infill Step Height", 
                    "unit": "mm", 
                    "minimum_value_warning": "=3 * resolveOrValue('layer_height')", 
                    "enabled": "=infill_sparse_density > 0 and gradual_infill_steps > 0 and infill_pattern != 'cubicsubdiv'", 
                    "settable_per_mesh": "True", 
                    "minimum_value": "=0.0001", 
                    "type": "float", 
                    "description": "The height of infill of a given density before switching to half the density."
                }, 
                "skin_preshrink": {
                    "children": {
                        "top_skin_preshrink": {
                            "children": {}, 
                            "default_value": "0", 
                            "limit_to_extruder": "=top_bottom_extruder_nr", 
                            "label": "Top Skin Removal Width", 
                            "unit": "mm", 
                            "value": "=skin_preshrink", 
                            "type": "float", 
                            "settable_per_mesh": "True", 
                            "minimum_value": "=0", 
                            "description": "The largest width of top skin areas which are to be removed. Every skin area smaller than this value will disappear. This can help in limiting the amount of time and material spent on printing top skin at slanted surfaces in the model."
                        }, 
                        "bottom_skin_preshrink": {
                            "children": {}, 
                            "default_value": "0", 
                            "limit_to_extruder": "=top_bottom_extruder_nr", 
                            "label": "Bottom Skin Removal Width", 
                            "unit": "mm", 
                            "value": "=skin_preshrink", 
                            "type": "float", 
                            "settable_per_mesh": "True", 
                            "minimum_value": "=0", 
                            "description": "The largest width of bottom skin areas which are to be removed. Every skin area smaller than this value will disappear. This can help in limiting the amount of time and material spent on printing bottom skin at slanted surfaces in the model."
                        }
                    }, 
                    "default_value": "0", 
                    "limit_to_extruder": "=top_bottom_extruder_nr", 
                    "label": "Skin Removal Width", 
                    "unit": "mm", 
                    "value": "=wall_line_width_0 + (wall_line_count - 1) * wall_line_width_x", 
                    "type": "float", 
                    "settable_per_mesh": "True", 
                    "minimum_value": "=0", 
                    "description": "The largest width of skin areas which are to be removed. Every skin area smaller than this value will disappear. This can help in limiting the amount of time and material spent on printing top/bottom skin at slanted surfaces in the model."
                }, 
                "infill_offset_y": {
                    "children": {}, 
                    "default_value": "0", 
                    "limit_to_extruder": "=infill_extruder_nr", 
                    "label": "Infill Y Offset", 
                    "enabled": "=infill_pattern == 'grid' or infill_pattern == 'lines' or infill_pattern == 'triangles' or infill_pattern == 'cubic' or infill_pattern == 'tetrahedral' or infill_pattern == 'quarter_cubic' or infill_pattern == 'zigzag'", 
                    "settable_per_mesh": "True", 
                    "unit": "mm", 
                    "type": "float", 
                    "description": "The infill pattern is moved this distance along the Y axis."
                }, 
                "infill_wipe_dist": {
                    "limit_to_extruder": "=infill_extruder_nr", 
                    "maximum_value_warning": "=machine_nozzle_size", 
                    "value": "=wall_line_width_0 / 4 if wall_line_count == 1 else wall_line_width_x / 4", 
                    "unit": "mm", 
                    "children": {}, 
                    "default_value": "0.04", 
                    "label": "Infill Wipe Distance", 
                    "minimum_value_warning": "=0", 
                    "enabled": "=infill_sparse_density > 0", 
                    "settable_per_mesh": "True", 
                    "type": "float", 
                    "description": "Distance of a travel move inserted after every infill line, to make the infill stick to the walls better. This option is similar to infill overlap, but without extrusion and only on one end of the infill line."
                }, 
                "skin_overlap": {
                    "limit_to_extruder": "=top_bottom_extruder_nr", 
                    "maximum_value_warning": "=100", 
                    "value": "=5 if top_bottom_pattern != 'concentric' else 0", 
                    "unit": "%", 
                    "children": {
                        "skin_overlap_mm": {
                            "children": {}, 
                            "default_value": "0.02", 
                            "label": "Skin Overlap", 
                            "maximum_value_warning": "=machine_nozzle_size", 
                            "minimum_value_warning": "=-0.5 * machine_nozzle_size", 
                            "value": "=0.5 * (skin_line_width + (wall_line_width_x if wall_line_count > 1 else wall_line_width_0)) * skin_overlap / 100 if top_bottom_pattern != 'concentric' else 0", 
                            "settable_per_mesh": "True", 
                            "enabled": "=top_bottom_pattern != 'concentric'", 
                            "unit": "mm", 
                            "type": "float", 
                            "description": "The amount of overlap between the skin and the walls. A slight overlap allows the walls to connect firmly to the skin."
                        }
                    }, 
                    "default_value": "5", 
                    "label": "Skin Overlap Percentage", 
                    "minimum_value_warning": "=-50", 
                    "enabled": "=top_bottom_pattern != 'concentric'", 
                    "settable_per_mesh": "True", 
                    "type": "float", 
                    "description": "The amount of overlap between the skin and the walls as a percentage of the skin line width. A slight overlap allows the walls to connect firmly to the skin. This is a percentage of the average line widths of the skin lines and the innermost wall."
                }, 
                "infill_support_enabled": {
                    "children": {}, 
                    "default_value": "False", 
                    "limit_to_extruder": "=infill_extruder_nr", 
                    "label": "Infill Support", 
                    "enabled": "=infill_sparse_density > 0", 
                    "settable_per_mesh": "True", 
                    "type": "bool", 
                    "description": "Print infill structures only where tops of the model should be supported. Enabling this reduces print time and material usage, but leads to ununiform object strength."
                }, 
                "infill_sparse_thickness": {
                    "limit_to_extruder": "=infill_extruder_nr", 
                    "maximum_value_warning": "=0.75 * machine_nozzle_size", 
                    "maximum_value": "=resolveOrValue('layer_height') * (1.45 if spaghetti_infill_enabled else 8)", 
                    "unit": "mm", 
                    "value": "=resolveOrValue('layer_height')", 
                    "minimum_value": "=resolveOrValue('layer_height')", 
                    "children": {}, 
                    "default_value": "0.1", 
                    "label": "Infill Layer Thickness", 
                    "enabled": "=infill_sparse_density > 0 and not spaghetti_infill_enabled", 
                    "settable_per_mesh": "True", 
                    "type": "float", 
                    "description": "The thickness per layer of infill material. This value should always be a multiple of the layer height and is otherwise rounded."
                }, 
                "sub_div_rad_add": {
                    "limit_to_extruder": "=infill_extruder_nr", 
                    "maximum_value_warning": "=5 * infill_line_distance", 
                    "value": "=wall_line_width_x", 
                    "unit": "mm", 
                    "children": {}, 
                    "default_value": "0.4", 
                    "label": "Cubic Subdivision Shell", 
                    "minimum_value_warning": "=-1 * infill_line_distance", 
                    "enabled": "=infill_sparse_density > 0 and infill_pattern == 'cubicsubdiv'", 
                    "settable_per_mesh": "True", 
                    "type": "float", 
                    "description": "An addition to the radius from the center of each cube to check for the boundary of the model, as to decide whether this cube should be subdivided. Larger values lead to a thicker shell of small cubes near the boundary of the model."
                }, 
                "max_skin_angle_for_expansion": {
                    "limit_to_extruder": "=top_bottom_extruder_nr", 
                    "maximum_value": "=90", 
                    "minimum_value": "=0", 
                    "children": {
                        "min_skin_width_for_expansion": {
                            "children": {}, 
                            "default_value": "2.24", 
                            "limit_to_extruder": "=top_bottom_extruder_nr", 
                            "label": "Minimum Skin Width for Expansion", 
                            "unit": "mm", 
                            "value": "=top_layers * layer_height / math.tan(math.radians(max_skin_angle_for_expansion))", 
                            "settable_per_mesh": "True", 
                            "enabled": "=top_skin_expand_distance > 0 or bottom_skin_expand_distance > 0", 
                            "minimum_value": "=0", 
                            "type": "float", 
                            "description": "Skin areas narrower than this are not expanded. This avoids expanding the narrow skin areas that are created when the model surface has a slope close to the vertical."
                        }
                    }, 
                    "unit": "\u00b0", 
                    "default_value": "90", 
                    "label": "Maximum Skin Angle for Expansion", 
                    "minimum_value_warning": "=2", 
                    "enabled": "=top_skin_expand_distance > 0 or bottom_skin_expand_distance > 0", 
                    "settable_per_mesh": "True", 
                    "type": "float", 
                    "description": "Top and/or bottom surfaces of your object with an angle larger than this setting, won't have their top/bottom skin expanded. This avoids expanding the narrow skin areas that are created when the model surface has a near vertical slope. An angle of 0\u00b0 is horizontal, while an angle of 90\u00b0 is vertical."
                }, 
                "expand_skins_expand_distance": {
                    "children": {
                        "bottom_skin_expand_distance": {
                            "children": {}, 
                            "default_value": "2.8", 
                            "limit_to_extruder": "=top_bottom_extruder_nr", 
                            "label": "Bottom Skin Expand Distance", 
                            "unit": "mm", 
                            "value": "=expand_skins_expand_distance", 
                            "type": "float", 
                            "settable_per_mesh": "True", 
                            "minimum_value": "=-bottom_skin_preshrink", 
                            "description": "The distance the bottom skins are expanded into the infill. Higher values makes the skin attach better to the infill pattern and makes the skin adhere better to the walls on the layer below. Lower values save amount of material used."
                        }, 
                        "top_skin_expand_distance": {
                            "children": {}, 
                            "default_value": "2.8", 
                            "limit_to_extruder": "=top_bottom_extruder_nr", 
                            "label": "Top Skin Expand Distance", 
                            "unit": "mm", 
                            "value": "=expand_skins_expand_distance", 
                            "type": "float", 
                            "settable_per_mesh": "True", 
                            "minimum_value": "=-top_skin_preshrink", 
                            "description": "The distance the top skins are expanded into the infill. Higher values makes the skin attach better to the infill pattern and makes the walls on the layer above adhere better to the skin. Lower values save amount of material used."
                        }
                    }, 
                    "default_value": "2.8", 
                    "limit_to_extruder": "=top_bottom_extruder_nr", 
                    "label": "Skin Expand Distance", 
                    "unit": "mm", 
                    "value": "=wall_line_width_0 + (wall_line_count - 1) * wall_line_width_x", 
                    "type": "float", 
                    "settable_per_mesh": "True", 
                    "minimum_value": "=-skin_preshrink", 
                    "description": "The distance the skins are expanded into the infill. Higher values makes the skin attach better to the infill pattern and makes the walls on neighboring layers adhere better to the skin. Lower values save amount of material used."
                }, 
                "infill_offset_x": {
                    "children": {}, 
                    "default_value": "0", 
                    "limit_to_extruder": "=infill_extruder_nr", 
                    "label": "Infill X Offset", 
                    "enabled": "=infill_pattern == 'grid' or infill_pattern == 'lines' or infill_pattern == 'triangles' or infill_pattern == 'cubic' or infill_pattern == 'tetrahedral' or infill_pattern == 'quarter_cubic' or infill_pattern == 'zigzag'", 
                    "settable_per_mesh": "True", 
                    "unit": "mm", 
                    "type": "float", 
                    "description": "The infill pattern is moved this distance along the X axis."
                }, 
                "infill_before_walls": {
                    "children": {}, 
                    "default_value": "True", 
                    "label": "Infill Before Walls", 
                    "enabled": "=infill_sparse_density > 0 and wall_x_extruder_nr == infill_extruder_nr", 
                    "settable_per_mesh": "True", 
                    "type": "bool", 
                    "description": "Print the infill before printing the walls. Printing the walls first may lead to more accurate walls, but overhangs print worse. Printing the infill first leads to sturdier walls, but the infill pattern might sometimes show through the surface."
                }, 
                "infill_extruder_nr": {
                    "children": {}, 
                    "default_value": "-1", 
                    "settable_globally": "True", 
                    "label": "Infill Extruder", 
                    "settable_per_meshgroup": "True", 
                    "enabled": "=extruders_enabled_count > 1", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "False", 
                    "type": "optional_extruder", 
                    "description": "The extruder train used for printing infill. This is used in multi-extrusion."
                }, 
                "infill_overlap": {
                    "limit_to_extruder": "=infill_extruder_nr", 
                    "maximum_value_warning": "=100", 
                    "value": "=10 if infill_sparse_density < 95 and infill_pattern != 'concentric' else 0", 
                    "unit": "%", 
                    "children": {
                        "infill_overlap_mm": {
                            "children": {}, 
                            "default_value": "0.04", 
                            "label": "Infill Overlap", 
                            "maximum_value_warning": "=machine_nozzle_size", 
                            "minimum_value_warning": "=-0.5 * machine_nozzle_size", 
                            "value": "=0.5 * (infill_line_width + (wall_line_width_x if wall_line_count > 1 else wall_line_width_0)) * infill_overlap / 100 if infill_sparse_density < 95 and infill_pattern != 'concentric' else 0", 
                            "settable_per_mesh": "True", 
                            "enabled": "=infill_sparse_density > 0 and infill_pattern != 'concentric'", 
                            "unit": "mm", 
                            "type": "float", 
                            "description": "The amount of overlap between the infill and the walls. A slight overlap allows the walls to connect firmly to the infill."
                        }
                    }, 
                    "default_value": "10", 
                    "label": "Infill Overlap Percentage", 
                    "minimum_value_warning": "=-50", 
                    "enabled": "=infill_sparse_density > 0 and infill_pattern != 'concentric'", 
                    "settable_per_mesh": "True", 
                    "type": "float", 
                    "description": "The amount of overlap between the infill and the walls as a percentage of the infill line width. A slight overlap allows the walls to connect firmly to the infill."
                }, 
                "infill_sparse_density": {
                    "children": {
                        "infill_line_distance": {
                            "children": {}, 
                            "default_value": "2", 
                            "limit_to_extruder": "=infill_extruder_nr", 
                            "label": "Infill Line Distance", 
                            "unit": "mm", 
                            "minimum_value_warning": "=infill_line_width", 
                            "value": "=0 if infill_sparse_density == 0 else (infill_line_width * 100) / infill_sparse_density * (2 if infill_pattern == 'grid' else (3 if infill_pattern == 'triangles' or infill_pattern == 'trihexagon' or infill_pattern == 'cubic' or infill_pattern == 'cubicsubdiv' else (2 if infill_pattern == 'tetrahedral' or infill_pattern == 'quarter_cubic' else (1 if infill_pattern == 'cross' or infill_pattern == 'cross_3d' else 1))))", 
                            "type": "float", 
                            "settable_per_mesh": "True", 
                            "minimum_value": "=0", 
                            "description": "Distance between the printed infill lines. This setting is calculated by the infill density and the infill line width."
                        }
                    }, 
                    "default_value": "20", 
                    "limit_to_extruder": "=infill_extruder_nr", 
                    "label": "Infill Density", 
                    "maximum_value_warning": "=100", 
                    "unit": "%", 
                    "type": "float", 
                    "settable_per_mesh": "True", 
                    "minimum_value": "=0", 
                    "description": "Adjusts the density of infill of the print."
                }, 
                "infill_support_angle": {
                    "limit_to_extruder": "=infill_extruder_nr", 
                    "maximum_value": "=90", 
                    "minimum_value": "=0", 
                    "children": {}, 
                    "unit": "\u00b0", 
                    "default_value": "40", 
                    "label": "Infill Overhang Angle", 
                    "minimum_value_warning": "=2", 
                    "enabled": "=infill_sparse_density > 0 and infill_support_enabled", 
                    "settable_per_mesh": "True", 
                    "type": "float", 
                    "description": "The minimum angle of internal overhangs for which infill is added. At a value of 0\u00b0 objects are totally filled with infill, 90\u00b0 will not provide any infill."
                }, 
                "infill_angles": {
                    "children": {}, 
                    "default_value": "[ ]", 
                    "limit_to_extruder": "=infill_extruder_nr", 
                    "label": "Infill Line Directions", 
                    "enabled": "=infill_pattern != 'concentric' and infill_pattern != 'concentric_3d' and infill_pattern != 'cubicsubdiv' and infill_sparse_density > 0", 
                    "settable_per_mesh": "True", 
                    "type": "[int]", 
                    "description": "A list of integer line directions to use. Elements from the list are used sequentially as the layers progress and when the end of the list is reached, it starts at the beginning again. The list items are separated by commas and the whole list is contained in square brackets. Default is an empty list which means use the traditional default angles (45 and 135 degrees for the lines and zig zag patterns and 45 degrees for all other patterns)."
                }, 
                "gradual_infill_steps": {
                    "children": {}, 
                    "default_value": "0", 
                    "limit_to_extruder": "=infill_extruder_nr", 
                    "label": "Gradual Infill Steps", 
                    "maximum_value_warning": "=1 if (infill_pattern == 'cross' or infill_pattern == 'cross_3d' or support_pattern == 'concentric' or support_pattern == 'concentric_3d') else 5", 
                    "maximum_value": "=0 if spaghetti_infill_enabled else (999999 if infill_line_distance == 0 else (20 - math.log(infill_line_distance) / math.log(2)))", 
                    "enabled": "=infill_sparse_density > 0 and infill_pattern != 'cubicsubdiv' and not spaghetti_infill_enabled", 
                    "settable_per_mesh": "True", 
                    "minimum_value": "=0", 
                    "type": "int", 
                    "description": "Number of times to reduce the infill density by half when getting further below top surfaces. Areas which are closer to top surfaces get a higher density, up to the Infill Density."
                }, 
                "min_infill_area": {
                    "children": {}, 
                    "default_value": "0", 
                    "limit_to_extruder": "=infill_extruder_nr", 
                    "label": "Minimum Infill Area", 
                    "unit": "mm\u00b2", 
                    "type": "float", 
                    "settable_per_mesh": "True", 
                    "minimum_value": "=0", 
                    "description": "Don't generate areas of infill smaller than this (use skin instead)."
                }, 
                "zig_zaggify_infill": {
                    "children": {}, 
                    "default_value": "False", 
                    "limit_to_extruder": "=infill_extruder_nr", 
                    "label": "Connect Infill Lines", 
                    "value": "=infill_pattern == 'cross' or infill_pattern == 'cross_3d'", 
                    "settable_per_mesh": "True", 
                    "enabled": "=infill_pattern == 'grid' or infill_pattern == 'triangles' or infill_pattern == 'trihexagon' or infill_pattern == 'cubic' or infill_pattern == 'tetrahedral' or infill_pattern == 'quarter_cubic' or infill_pattern == 'cross' or infill_pattern == 'cross_3d'", 
                    "type": "bool", 
                    "description": "Connect the ends where the infill pattern meets the inner wall using a line which follows the shape of the inner wall. Enabling this setting can make the infill adhere to the walls better and reduce the effects of infill on the quality of vertical surfaces. Disabling this setting reduces the amount of material used."
                }, 
                "infill_pattern": {
                    "children": {}, 
                    "default_value": "grid", 
                    "limit_to_extruder": "=infill_extruder_nr", 
                    "label": "Infill Pattern", 
                    "value": "='lines' if infill_sparse_density > 25 else 'grid'", 
                    "settable_per_mesh": "True", 
                    "options": "OrderedDict([('grid', 'Grid'), ('lines', 'Lines'), ('triangles', 'Triangles'), ('trihexagon', 'Tri-Hexagon'), ('cubic', 'Cubic'), ('cubicsubdiv', 'Cubic Subdivision'), ('tetrahedral', 'Octet'), ('quarter_cubic', 'Quarter Cubic'), ('concentric', 'Concentric'), ('concentric_3d', 'Concentric 3D'), ('zigzag', 'Zig Zag'), ('cross', 'Cross'), ('cross_3d', 'Cross 3D')])", 
                    "enabled": "=infill_sparse_density > 0", 
                    "type": "enum", 
                    "description": "The pattern of the infill material of the print. The line and zig zag infill swap direction on alternate layers, reducing material cost. The grid, triangle, tri-hexagon, cubic, octet, quarter cubic, cross and concentric patterns are fully printed every layer. Cubic, quarter cubic and octet infill change with every layer to provide a more equal distribution of strength over each direction."
                }
            }, 
            "type": "category", 
            "label": "Infill", 
            "description": "Infill"
        }, 
        "platform_adhesion": {
            "icon": "category_adhesion", 
            "children": {
                "adhesion_type": {
                    "children": {}, 
                    "default_value": "skirt", 
                    "description": "Different options that help to improve both priming your extrusion and adhesion to the build plate. Brim adds a single layer flat area around the base of your model to prevent warping. Raft adds a thick grid with a roof below the model. Skirt is a line printed around the model, but not connected to the model.", 
                    "resolve": "=extruderValue(adhesion_extruder_nr, 'adhesion_type')", 
                    "type": "enum", 
                    "settable_per_mesh": "False", 
                    "options": "OrderedDict([('skirt', 'Skirt'), ('brim', 'Brim'), ('raft', 'Raft'), ('none', 'None')])", 
                    "settable_per_extruder": "False", 
                    "label": "Build Plate Adhesion Type"
                }, 
                "skirt_brim_minimal_length": {
                    "maximum_value_warning": "=2500", 
                    "minimum_value": "=0", 
                    "settable_per_extruder": "True", 
                    "unit": "mm", 
                    "children": {}, 
                    "default_value": "250", 
                    "label": "Skirt/Brim Minimum Length", 
                    "minimum_value_warning": "=25", 
                    "enabled": "=resolveOrValue('adhesion_type') == 'skirt' or resolveOrValue('adhesion_type') == 'brim'", 
                    "settable_per_mesh": "False", 
                    "type": "float", 
                    "description": "The minimum length of the skirt or brim. If this length is not reached by all skirt or brim lines together, more skirt or brim lines will be added until the minimum length is reached. Note: If the line count is set to 0 this is ignored."
                }, 
                "raft_surface_thickness": {
                    "limit_to_extruder": "=adhesion_extruder_nr", 
                    "maximum_value_warning": "=0.75 * machine_nozzle_size", 
                    "unit": "mm", 
                    "value": "=resolveOrValue('layer_height')", 
                    "settable_per_extruder": "True", 
                    "minimum_value": "=0.001", 
                    "children": {}, 
                    "default_value": "0.1", 
                    "label": "Raft Top Layer Thickness", 
                    "minimum_value_warning": "=0.04", 
                    "enabled": "=resolveOrValue('adhesion_type') == 'raft'", 
                    "settable_per_mesh": "False", 
                    "type": "float", 
                    "description": "Layer thickness of the top raft layers."
                }, 
                "adhesion_extruder_nr": {
                    "children": {}, 
                    "default_value": "0", 
                    "label": "Build Plate Adhesion Extruder", 
                    "value": "=defaultExtruderPosition()", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "False", 
                    "enabled": "=extruders_enabled_count > 1 and resolveOrValue('adhesion_type') != 'none'", 
                    "type": "extruder", 
                    "description": "The extruder train to use for printing the skirt/brim/raft. This is used in multi-extrusion."
                }, 
                "layer_0_z_overlap": {
                    "limit_to_extruder": "=adhesion_extruder_nr", 
                    "maximum_value_warning": "=raft_airgap", 
                    "unit": "mm", 
                    "value": "=raft_airgap / 2", 
                    "settable_per_extruder": "True", 
                    "minimum_value": "=0", 
                    "children": {}, 
                    "default_value": "0.22", 
                    "label": "Initial Layer Z Overlap", 
                    "enabled": "=resolveOrValue('adhesion_type') == 'raft'", 
                    "settable_per_mesh": "False", 
                    "type": "float", 
                    "description": "Make the first and second layer of the model overlap in the Z direction to compensate for the filament lost in the airgap. All models above the first model layer will be shifted down by this amount."
                }, 
                "raft_base_line_spacing": {
                    "limit_to_extruder": "=adhesion_extruder_nr", 
                    "maximum_value_warning": "=100", 
                    "unit": "mm", 
                    "value": "=raft_base_line_width * 2", 
                    "settable_per_extruder": "True", 
                    "minimum_value": "=0", 
                    "children": {}, 
                    "default_value": "1.6", 
                    "label": "Raft Line Spacing", 
                    "minimum_value_warning": "=raft_base_line_width", 
                    "enabled": "=resolveOrValue('adhesion_type') == 'raft'", 
                    "settable_per_mesh": "False", 
                    "type": "float", 
                    "description": "The distance between the raft lines for the base raft layer. Wide spacing makes for easy removal of the raft from the build plate."
                }, 
                "brim_width": {
                    "limit_to_extruder": "=adhesion_extruder_nr", 
                    "maximum_value_warning": "=50.0", 
                    "minimum_value": "=0.0", 
                    "settable_per_extruder": "True", 
                    "unit": "mm", 
                    "children": {
                        "brim_line_count": {
                            "limit_to_extruder": "=adhesion_extruder_nr", 
                            "maximum_value_warning": "=50 / skirt_brim_line_width", 
                            "value": "=math.ceil(brim_width / (skirt_brim_line_width * initial_layer_line_width_factor / 100.0))", 
                            "settable_per_extruder": "True", 
                            "minimum_value": "=0", 
                            "children": {}, 
                            "default_value": "20", 
                            "label": "Brim Line Count", 
                            "enabled": "=resolveOrValue('adhesion_type') == 'brim'", 
                            "settable_per_mesh": "False", 
                            "type": "int", 
                            "description": "The number of lines used for a brim. More brim lines enhance adhesion to the build plate, but also reduces the effective print area."
                        }
                    }, 
                    "default_value": "8.0", 
                    "label": "Brim Width", 
                    "enabled": "=resolveOrValue('adhesion_type') == 'brim'", 
                    "settable_per_mesh": "False", 
                    "type": "float", 
                    "description": "The distance from the model to the outermost brim line. A larger brim enhances adhesion to the build plate, but also reduces the effective print area."
                }, 
                "extruder_prime_pos_y": {
                    "children": {}, 
                    "default_value": "0", 
                    "label": "Extruder Prime Y Position", 
                    "maximum_value_warning": "=machine_depth / 2 if machine_center_is_zero else machine_depth", 
                    "minimum_value_warning": "=machine_depth / -2 if machine_center_is_zero else 0", 
                    "enabled": "=False", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "True", 
                    "unit": "mm", 
                    "type": "float", 
                    "description": "The Y coordinate of the position where the nozzle primes at the start of printing."
                }, 
                "raft_interface_line_spacing": {
                    "limit_to_extruder": "=adhesion_extruder_nr", 
                    "maximum_value_warning": "=15.0", 
                    "unit": "mm", 
                    "value": "=raft_interface_line_width + 0.2", 
                    "settable_per_extruder": "True", 
                    "minimum_value": "=0", 
                    "children": {}, 
                    "default_value": "0.9", 
                    "label": "Raft Middle Spacing", 
                    "minimum_value_warning": "=raft_interface_line_width", 
                    "enabled": "=resolveOrValue('adhesion_type') == 'raft'", 
                    "settable_per_mesh": "False", 
                    "type": "float", 
                    "description": "The distance between the raft lines for the middle raft layer. The spacing of the middle should be quite wide, while being dense enough to support the top raft layers."
                }, 
                "raft_jerk": {
                    "limit_to_extruder": "=adhesion_extruder_nr", 
                    "maximum_value_warning": "=50", 
                    "unit": "mm/s", 
                    "value": "=jerk_print", 
                    "minimum_value": "=0", 
                    "children": {
                        "raft_surface_jerk": {
                            "limit_to_extruder": "=adhesion_extruder_nr", 
                            "maximum_value_warning": "=100", 
                            "unit": "mm/s", 
                            "value": "=raft_jerk", 
                            "minimum_value": "=0", 
                            "children": {}, 
                            "default_value": "20", 
                            "label": "Raft Top Print Jerk", 
                            "minimum_value_warning": "=5", 
                            "enabled": "=resolveOrValue('adhesion_type') == 'raft' and resolveOrValue('jerk_enabled')", 
                            "settable_per_mesh": "False", 
                            "type": "float", 
                            "description": "The jerk with which the top raft layers are printed."
                        }, 
                        "raft_interface_jerk": {
                            "limit_to_extruder": "=adhesion_extruder_nr", 
                            "maximum_value_warning": "=50", 
                            "unit": "mm/s", 
                            "value": "=raft_jerk", 
                            "minimum_value": "=0", 
                            "children": {}, 
                            "default_value": "20", 
                            "label": "Raft Middle Print Jerk", 
                            "minimum_value_warning": "=5", 
                            "enabled": "=resolveOrValue('adhesion_type') == 'raft' and resolveOrValue('jerk_enabled')", 
                            "settable_per_mesh": "False", 
                            "type": "float", 
                            "description": "The jerk with which the middle raft layer is printed."
                        }, 
                        "raft_base_jerk": {
                            "limit_to_extruder": "=adhesion_extruder_nr", 
                            "maximum_value_warning": "=50", 
                            "unit": "mm/s", 
                            "value": "=raft_jerk", 
                            "minimum_value": "=0", 
                            "children": {}, 
                            "default_value": "20", 
                            "label": "Raft Base Print Jerk", 
                            "minimum_value_warning": "=5", 
                            "enabled": "=resolveOrValue('adhesion_type') == 'raft' and resolveOrValue('jerk_enabled')", 
                            "settable_per_mesh": "False", 
                            "type": "float", 
                            "description": "The jerk with which the base raft layer is printed."
                        }
                    }, 
                    "default_value": "20", 
                    "label": "Raft Print Jerk", 
                    "minimum_value_warning": "=5", 
                    "enabled": "=resolveOrValue('adhesion_type') == 'raft' and resolveOrValue('jerk_enabled')", 
                    "settable_per_mesh": "False", 
                    "type": "float", 
                    "description": "The jerk with which the raft is printed."
                }, 
                "raft_fan_speed": {
                    "limit_to_extruder": "=adhesion_extruder_nr", 
                    "maximum_value": "=100", 
                    "minimum_value": "=0", 
                    "settable_per_extruder": "True", 
                    "unit": "%", 
                    "children": {
                        "raft_interface_fan_speed": {
                            "limit_to_extruder": "=adhesion_extruder_nr", 
                            "maximum_value": "=100", 
                            "unit": "%", 
                            "value": "=raft_fan_speed", 
                            "settable_per_extruder": "True", 
                            "minimum_value": "=0", 
                            "children": {}, 
                            "default_value": "0", 
                            "label": "Raft Middle Fan Speed", 
                            "enabled": "=resolveOrValue('adhesion_type') == 'raft'", 
                            "settable_per_mesh": "False", 
                            "type": "float", 
                            "description": "The fan speed for the middle raft layer."
                        }, 
                        "raft_surface_fan_speed": {
                            "limit_to_extruder": "=adhesion_extruder_nr", 
                            "maximum_value": "=100", 
                            "unit": "%", 
                            "value": "=raft_fan_speed", 
                            "settable_per_extruder": "True", 
                            "minimum_value": "=0", 
                            "children": {}, 
                            "default_value": "0", 
                            "label": "Raft Top Fan Speed", 
                            "enabled": "=resolveOrValue('adhesion_type') == 'raft'", 
                            "settable_per_mesh": "False", 
                            "type": "float", 
                            "description": "The fan speed for the top raft layers."
                        }, 
                        "raft_base_fan_speed": {
                            "limit_to_extruder": "=adhesion_extruder_nr", 
                            "maximum_value": "=100", 
                            "unit": "%", 
                            "value": "=raft_fan_speed", 
                            "settable_per_extruder": "True", 
                            "minimum_value": "=0", 
                            "children": {}, 
                            "default_value": "0", 
                            "label": "Raft Base Fan Speed", 
                            "enabled": "=resolveOrValue('adhesion_type') == 'raft'", 
                            "settable_per_mesh": "False", 
                            "type": "float", 
                            "description": "The fan speed for the base raft layer."
                        }
                    }, 
                    "default_value": "0", 
                    "label": "Raft Fan Speed", 
                    "enabled": "=resolveOrValue('adhesion_type') == 'raft'", 
                    "settable_per_mesh": "False", 
                    "type": "float", 
                    "description": "The fan speed for the raft."
                }, 
                "raft_margin": {
                    "limit_to_extruder": "=adhesion_extruder_nr", 
                    "maximum_value_warning": "=20", 
                    "type": "float", 
                    "settable_per_extruder": "True", 
                    "unit": "mm", 
                    "children": {}, 
                    "default_value": "15", 
                    "label": "Raft Extra Margin", 
                    "minimum_value_warning": "=raft_interface_line_width", 
                    "enabled": "=resolveOrValue('adhesion_type') == 'raft'", 
                    "settable_per_mesh": "False", 
                    "description": "If the raft is enabled, this is the extra raft area around the model which is also given a raft. Increasing this margin will create a stronger raft while using more material and leaving less area for your print."
                }, 
                "brim_outside_only": {
                    "children": {}, 
                    "default_value": "True", 
                    "limit_to_extruder": "=adhesion_extruder_nr", 
                    "label": "Brim Only on Outside", 
                    "enabled": "=resolveOrValue('adhesion_type') == 'brim'", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "True", 
                    "type": "bool", 
                    "description": "Only print the brim on the outside of the model. This reduces the amount of brim you need to remove afterwards, while it doesn't reduce the bed adhesion that much."
                }, 
                "raft_interface_thickness": {
                    "limit_to_extruder": "=adhesion_extruder_nr", 
                    "maximum_value_warning": "=0.75 * machine_nozzle_size", 
                    "unit": "mm", 
                    "value": "=resolveOrValue('layer_height') * 1.5", 
                    "settable_per_extruder": "True", 
                    "minimum_value": "=0.001", 
                    "children": {}, 
                    "default_value": "0.15", 
                    "label": "Raft Middle Thickness", 
                    "minimum_value_warning": "=0.04", 
                    "enabled": "=resolveOrValue('adhesion_type') == 'raft'", 
                    "settable_per_mesh": "False", 
                    "type": "float", 
                    "description": "Layer thickness of the middle raft layer."
                }, 
                "adhesion_z_offset": {
                    "children": {}, 
                    "default_value": "0", 
                    "minimum_value": "=-layer_height_0", 
                    "label": "Z Offset", 
                    "maximum_value_warning": "=layer_height_0", 
                    "settable_per_meshgroup": "False", 
                    "type": "float", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "False", 
                    "unit": "mm", 
                    "description": "An additional distance between the nozzle and the build platform."
                }, 
                "skirt_line_count": {
                    "children": {}, 
                    "default_value": "1", 
                    "limit_to_extruder": "=adhesion_extruder_nr", 
                    "label": "Skirt Line Count", 
                    "maximum_value_warning": "=10", 
                    "enabled": "=resolveOrValue('adhesion_type') == 'skirt'", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "True", 
                    "minimum_value": "=0", 
                    "type": "int", 
                    "description": "Multiple skirt lines help to prime your extrusion better for small models. Setting this to 0 will disable the skirt."
                }, 
                "raft_interface_line_width": {
                    "limit_to_extruder": "=adhesion_extruder_nr", 
                    "maximum_value_warning": "=machine_nozzle_size * 3", 
                    "unit": "mm", 
                    "value": "=line_width * 2", 
                    "settable_per_extruder": "True", 
                    "minimum_value": "=0.001", 
                    "children": {}, 
                    "default_value": "0.7", 
                    "label": "Raft Middle Line Width", 
                    "minimum_value_warning": "=machine_nozzle_size * 0.5", 
                    "enabled": "=resolveOrValue('adhesion_type') == 'raft'", 
                    "settable_per_mesh": "False", 
                    "type": "float", 
                    "description": "Width of the lines in the middle raft layer. Making the second layer extrude more causes the lines to stick to the build plate."
                }, 
                "prime_blob_enable": {
                    "children": {}, 
                    "default_value": "True", 
                    "description": "Whether to prime the filament with a blob before printing. Turning this setting on will ensure that the extruder will have material ready at the nozzle before printing. Printing Brim or Skirt can act like priming too, in which case turning this setting off saves some time.", 
                    "resolve": "=any(extruderValues('prime_blob_enable'))", 
                    "enabled": "=False", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "True", 
                    "type": "bool", 
                    "label": "Enable Prime Blob"
                }, 
                "raft_speed": {
                    "limit_to_extruder": "=adhesion_extruder_nr", 
                    "maximum_value_warning": "=200", 
                    "maximum_value": "=math.sqrt(machine_max_feedrate_x ** 2 + machine_max_feedrate_y ** 2)", 
                    "unit": "mm/s", 
                    "value": "=speed_print / 60 * 30", 
                    "settable_per_extruder": "True", 
                    "minimum_value": "=0.1", 
                    "children": {
                        "raft_base_speed": {
                            "limit_to_extruder": "=adhesion_extruder_nr", 
                            "maximum_value_warning": "=200", 
                            "maximum_value": "=math.sqrt(machine_max_feedrate_x ** 2 + machine_max_feedrate_y ** 2)", 
                            "unit": "mm/s", 
                            "value": "=0.75 * raft_speed", 
                            "settable_per_extruder": "True", 
                            "minimum_value": "=0.1", 
                            "children": {}, 
                            "default_value": "15", 
                            "label": "Raft Base Print Speed", 
                            "enabled": "=resolveOrValue('adhesion_type') == 'raft'", 
                            "settable_per_mesh": "False", 
                            "type": "float", 
                            "description": "The speed at which the base raft layer is printed. This should be printed quite slowly, as the volume of material coming out of the nozzle is quite high."
                        }, 
                        "raft_surface_speed": {
                            "limit_to_extruder": "=adhesion_extruder_nr", 
                            "maximum_value_warning": "=100", 
                            "maximum_value": "=math.sqrt(machine_max_feedrate_x ** 2 + machine_max_feedrate_y ** 2)", 
                            "unit": "mm/s", 
                            "value": "=raft_speed", 
                            "settable_per_extruder": "True", 
                            "minimum_value": "=0.1", 
                            "children": {}, 
                            "default_value": "20", 
                            "label": "Raft Top Print Speed", 
                            "enabled": "=resolveOrValue('adhesion_type') == 'raft'", 
                            "settable_per_mesh": "False", 
                            "type": "float", 
                            "description": "The speed at which the top raft layers are printed. These should be printed a bit slower, so that the nozzle can slowly smooth out adjacent surface lines."
                        }, 
                        "raft_interface_speed": {
                            "limit_to_extruder": "=adhesion_extruder_nr", 
                            "maximum_value_warning": "=150", 
                            "maximum_value": "=math.sqrt(machine_max_feedrate_x ** 2 + machine_max_feedrate_y ** 2)", 
                            "unit": "mm/s", 
                            "value": "=raft_speed * 0.75", 
                            "settable_per_extruder": "True", 
                            "minimum_value": "=0.1", 
                            "children": {}, 
                            "default_value": "15", 
                            "label": "Raft Middle Print Speed", 
                            "enabled": "=resolveOrValue('adhesion_type') == 'raft'", 
                            "settable_per_mesh": "False", 
                            "type": "float", 
                            "description": "The speed at which the middle raft layer is printed. This should be printed quite slowly, as the volume of material coming out of the nozzle is quite high."
                        }
                    }, 
                    "default_value": "20", 
                    "label": "Raft Print Speed", 
                    "enabled": "=resolveOrValue('adhesion_type') == 'raft'", 
                    "settable_per_mesh": "False", 
                    "type": "float", 
                    "description": "The speed at which the raft is printed."
                }, 
                "raft_surface_line_spacing": {
                    "limit_to_extruder": "=adhesion_extruder_nr", 
                    "maximum_value_warning": "=raft_surface_line_width * 3", 
                    "unit": "mm", 
                    "value": "=raft_surface_line_width", 
                    "settable_per_extruder": "True", 
                    "minimum_value": "=0", 
                    "children": {}, 
                    "default_value": "0.4", 
                    "label": "Raft Top Spacing", 
                    "minimum_value_warning": "=raft_surface_line_width", 
                    "enabled": "=resolveOrValue('adhesion_type') == 'raft'", 
                    "settable_per_mesh": "False", 
                    "type": "float", 
                    "description": "The distance between the raft lines for the top raft layers. The spacing should be equal to the line width, so that the surface is solid."
                }, 
                "raft_surface_layers": {
                    "children": {}, 
                    "default_value": "2", 
                    "limit_to_extruder": "=adhesion_extruder_nr", 
                    "label": "Raft Top Layers", 
                    "maximum_value_warning": "=20", 
                    "enabled": "=resolveOrValue('adhesion_type') == 'raft'", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "True", 
                    "minimum_value": "=0", 
                    "type": "int", 
                    "description": "The number of top layers on top of the 2nd raft layer. These are fully filled layers that the model sits on. 2 layers result in a smoother top surface than 1."
                }, 
                "raft_base_line_width": {
                    "limit_to_extruder": "=adhesion_extruder_nr", 
                    "maximum_value_warning": "=machine_nozzle_size * 3", 
                    "unit": "mm", 
                    "value": "=machine_nozzle_size * 2", 
                    "settable_per_extruder": "True", 
                    "minimum_value": "=0.001", 
                    "children": {}, 
                    "default_value": "0.8", 
                    "label": "Raft Base Line Width", 
                    "minimum_value_warning": "=machine_nozzle_size * 0.5", 
                    "enabled": "=resolveOrValue('adhesion_type') == 'raft'", 
                    "settable_per_mesh": "False", 
                    "type": "float", 
                    "description": "Width of the lines in the base raft layer. These should be thick lines to assist in build plate adhesion."
                }, 
                "raft_airgap": {
                    "limit_to_extruder": "=adhesion_extruder_nr", 
                    "maximum_value_warning": "=min(extruderValues('machine_nozzle_size'))", 
                    "minimum_value": "=0", 
                    "settable_per_extruder": "True", 
                    "unit": "mm", 
                    "children": {}, 
                    "default_value": "0.3", 
                    "label": "Raft Air Gap", 
                    "enabled": "=resolveOrValue('adhesion_type') == 'raft'", 
                    "settable_per_mesh": "False", 
                    "type": "float", 
                    "description": "The gap between the final raft layer and the first layer of the model. Only the first layer is raised by this amount to lower the bonding between the raft layer and the model. Makes it easier to peel off the raft."
                }, 
                "raft_surface_line_width": {
                    "limit_to_extruder": "=adhesion_extruder_nr", 
                    "maximum_value_warning": "=machine_nozzle_size * 2", 
                    "unit": "mm", 
                    "value": "=line_width", 
                    "settable_per_extruder": "True", 
                    "minimum_value": "=0.001", 
                    "children": {}, 
                    "default_value": "0.4", 
                    "label": "Raft Top Line Width", 
                    "minimum_value_warning": "=machine_nozzle_size * 0.1", 
                    "enabled": "=resolveOrValue('adhesion_type') == 'raft'", 
                    "settable_per_mesh": "False", 
                    "type": "float", 
                    "description": "Width of the lines in the top surface of the raft. These can be thin lines so that the top of the raft becomes smooth."
                }, 
                "extruder_prime_pos_x": {
                    "children": {}, 
                    "default_value": "0", 
                    "label": "Extruder Prime X Position", 
                    "maximum_value_warning": "=machine_width / 2 if machine_center_is_zero else machine_width", 
                    "minimum_value_warning": "=machine_width / -2 if machine_center_is_zero else 0", 
                    "enabled": "=False", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "True", 
                    "unit": "mm", 
                    "type": "float", 
                    "description": "The X coordinate of the position where the nozzle primes at the start of printing."
                }, 
                "raft_acceleration": {
                    "limit_to_extruder": "=adhesion_extruder_nr", 
                    "maximum_value_warning": "=10000", 
                    "unit": "mm/s\u00b2", 
                    "value": "=acceleration_print", 
                    "minimum_value": "=0.1", 
                    "children": {
                        "raft_surface_acceleration": {
                            "limit_to_extruder": "=adhesion_extruder_nr", 
                            "maximum_value_warning": "=10000", 
                            "unit": "mm/s\u00b2", 
                            "value": "=raft_acceleration", 
                            "minimum_value": "=0.1", 
                            "children": {}, 
                            "default_value": "3000", 
                            "label": "Raft Top Print Acceleration", 
                            "minimum_value_warning": "=100", 
                            "enabled": "=resolveOrValue('adhesion_type') == 'raft' and resolveOrValue('acceleration_enabled')", 
                            "settable_per_mesh": "False", 
                            "type": "float", 
                            "description": "The acceleration with which the top raft layers are printed."
                        }, 
                        "raft_interface_acceleration": {
                            "limit_to_extruder": "=adhesion_extruder_nr", 
                            "maximum_value_warning": "=10000", 
                            "unit": "mm/s\u00b2", 
                            "value": "=raft_acceleration", 
                            "minimum_value": "=0.1", 
                            "children": {}, 
                            "default_value": "3000", 
                            "label": "Raft Middle Print Acceleration", 
                            "minimum_value_warning": "=100", 
                            "enabled": "=resolveOrValue('adhesion_type') == 'raft' and resolveOrValue('acceleration_enabled')", 
                            "settable_per_mesh": "False", 
                            "type": "float", 
                            "description": "The acceleration with which the middle raft layer is printed."
                        }, 
                        "raft_base_acceleration": {
                            "limit_to_extruder": "=adhesion_extruder_nr", 
                            "maximum_value_warning": "=10000", 
                            "unit": "mm/s\u00b2", 
                            "value": "=raft_acceleration", 
                            "minimum_value": "=0.1", 
                            "children": {}, 
                            "default_value": "3000", 
                            "label": "Raft Base Print Acceleration", 
                            "minimum_value_warning": "=100", 
                            "enabled": "=resolveOrValue('adhesion_type') == 'raft' and resolveOrValue('acceleration_enabled')", 
                            "settable_per_mesh": "False", 
                            "type": "float", 
                            "description": "The acceleration with which the base raft layer is printed."
                        }
                    }, 
                    "default_value": "3000", 
                    "label": "Raft Print Acceleration", 
                    "minimum_value_warning": "=100", 
                    "enabled": "=resolveOrValue('adhesion_type') == 'raft' and resolveOrValue('acceleration_enabled')", 
                    "settable_per_mesh": "False", 
                    "type": "float", 
                    "description": "The acceleration with which the raft is printed."
                }, 
                "raft_smoothing": {
                    "limit_to_extruder": "=adhesion_extruder_nr", 
                    "minimum_value": "=0", 
                    "settable_per_extruder": "True", 
                    "unit": "mm", 
                    "children": {}, 
                    "default_value": "5", 
                    "label": "Raft Smoothing", 
                    "minimum_value_warning": "=raft_interface_line_width", 
                    "enabled": "=resolveOrValue('adhesion_type') == 'raft'", 
                    "settable_per_mesh": "False", 
                    "type": "float", 
                    "description": "This setting controls how much inner corners in the raft outline are rounded. Inward corners are rounded to a semi circle with a radius equal to the value given here. This setting also removes holes in the raft outline which are smaller than such a circle."
                }, 
                "raft_base_thickness": {
                    "limit_to_extruder": "=adhesion_extruder_nr", 
                    "maximum_value_warning": "=0.75 * raft_base_line_width", 
                    "unit": "mm", 
                    "value": "=resolveOrValue('layer_height_0') * 1.2", 
                    "settable_per_extruder": "True", 
                    "minimum_value": "=0.001", 
                    "children": {}, 
                    "default_value": "0.3", 
                    "label": "Raft Base Thickness", 
                    "minimum_value_warning": "=0.04", 
                    "enabled": "=resolveOrValue('adhesion_type') == 'raft'", 
                    "settable_per_mesh": "False", 
                    "type": "float", 
                    "description": "Layer thickness of the base raft layer. This should be a thick layer which sticks firmly to the printer build plate."
                }, 
                "skirt_gap": {
                    "limit_to_extruder": "=adhesion_extruder_nr", 
                    "maximum_value_warning": "=10", 
                    "type": "float", 
                    "settable_per_extruder": "True", 
                    "unit": "mm", 
                    "children": {}, 
                    "default_value": "3", 
                    "label": "Skirt Distance", 
                    "minimum_value_warning": "=max(extruderValues('machine_nozzle_size'))", 
                    "enabled": "=resolveOrValue('adhesion_type') == 'skirt'", 
                    "settable_per_mesh": "False", 
                    "description": "The horizontal distance between the skirt and the first layer of the print.\nThis is the minimum distance. Multiple skirt lines will extend outwards from this distance."
                }
            }, 
            "type": "category", 
            "label": "Build Plate Adhesion", 
            "description": "Adhesion"
        }, 
        "dual": {
            "icon": "category_dual", 
            "children": {
                "prime_tower_size": {
                    "unit": "mm", 
                    "resolve": "=max(extruderValues('prime_tower_size'))", 
                    "maximum_value_warning": "=20", 
                    "maximum_value": "=min(0.5 * machine_width, 0.5 * machine_depth)", 
                    "type": "float", 
                    "settable_per_extruder": "False", 
                    "minimum_value": "=0", 
                    "children": {}, 
                    "default_value": "20", 
                    "label": "Prime Tower Size", 
                    "minimum_value_warning": "=max(extruderValues('prime_tower_line_width')) * 2", 
                    "enabled": "=resolveOrValue('prime_tower_enable')", 
                    "settable_per_mesh": "False", 
                    "description": "The width of the prime tower."
                }, 
                "dual_pre_wipe": {
                    "children": {}, 
                    "default_value": "True", 
                    "label": "Wipe Nozzle After Switch", 
                    "enabled": "=resolveOrValue('prime_tower_enable')", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "True", 
                    "type": "bool", 
                    "description": "After switching extruder, wipe the oozed material off of the nozzle on the first thing printed. This performs a safe slow wipe move at a place where the oozed material causes least harm to the surface quality of your print."
                }, 
                "ooze_shield_angle": {
                    "resolve": "=min(extruderValues('ooze_shield_angle'))", 
                    "maximum_value": "=90", 
                    "minimum_value": "=0", 
                    "settable_per_extruder": "False", 
                    "unit": "\u00b0", 
                    "children": {}, 
                    "default_value": "60", 
                    "description": "The maximum angle a part in the ooze shield will have. With 0 degrees being vertical, and 90 degrees being horizontal. A smaller angle leads to less failed ooze shields, but more material.", 
                    "enabled": "=resolveOrValue('ooze_shield_enabled')", 
                    "settable_per_mesh": "False", 
                    "type": "float", 
                    "label": "Ooze Shield Angle"
                }, 
                "prime_tower_position_x": {
                    "minimum_value": "=resolveOrValue('prime_tower_size') - machine_width / 2 if machine_center_is_zero else resolveOrValue('prime_tower_size')", 
                    "maximum_value": "=machine_width / 2 if machine_center_is_zero else machine_width", 
                    "value": "=machine_width - max(extruderValue(adhesion_extruder_nr, 'brim_width') * extruderValue(adhesion_extruder_nr, 'initial_layer_line_width_factor') / 100 if adhesion_type == 'brim' else (extruderValue(adhesion_extruder_nr, 'raft_margin') if adhesion_type == 'raft' else (extruderValue(adhesion_extruder_nr, 'skirt_gap') if adhesion_type == 'skirt' else 0)), max(extruderValues('travel_avoid_distance'))) - max(extruderValues('support_offset')) - sum(extruderValues('skirt_brim_line_width')) * extruderValue(adhesion_extruder_nr, 'initial_layer_line_width_factor') / 100 - 1", 
                    "settable_per_extruder": "False", 
                    "unit": "mm", 
                    "children": {}, 
                    "default_value": "195", 
                    "label": "Prime Tower X Position", 
                    "enabled": "=resolveOrValue('prime_tower_enable')", 
                    "settable_per_mesh": "False", 
                    "type": "float", 
                    "description": "The x coordinate of the position of the prime tower."
                }, 
                "prime_tower_circular": {
                    "children": {}, 
                    "default_value": "True", 
                    "description": "Make the prime tower as a circular shape.", 
                    "resolve": "=any(extruderValues('prime_tower_circular'))", 
                    "enabled": "=resolveOrValue('prime_tower_enable')", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "False", 
                    "type": "bool", 
                    "label": "Circular Prime Tower"
                }, 
                "prime_tower_position_y": {
                    "minimum_value": "=machine_depth / -2 if machine_center_is_zero else 0", 
                    "maximum_value": "=machine_depth / 2 - resolveOrValue('prime_tower_size') if machine_center_is_zero else machine_depth - resolveOrValue('prime_tower_size')", 
                    "value": "=machine_depth - prime_tower_size - max(extruderValue(adhesion_extruder_nr, 'brim_width') * extruderValue(adhesion_extruder_nr, 'initial_layer_line_width_factor') / 100 if adhesion_type == 'brim' else (extruderValue(adhesion_extruder_nr, 'raft_margin') if adhesion_type == 'raft' else (extruderValue(adhesion_extruder_nr, 'skirt_gap') if adhesion_type == 'skirt' else 0)), max(extruderValues('travel_avoid_distance'))) - max(extruderValues('support_offset')) - sum(extruderValues('skirt_brim_line_width')) * extruderValue(adhesion_extruder_nr, 'initial_layer_line_width_factor') / 100 - 1", 
                    "settable_per_extruder": "False", 
                    "unit": "mm", 
                    "children": {}, 
                    "default_value": "149", 
                    "label": "Prime Tower Y Position", 
                    "enabled": "=resolveOrValue('prime_tower_enable')", 
                    "settable_per_mesh": "False", 
                    "type": "float", 
                    "description": "The y coordinate of the position of the prime tower."
                }, 
                "prime_tower_wipe_enabled": {
                    "children": {}, 
                    "default_value": "True", 
                    "label": "Wipe Inactive Nozzle on Prime Tower", 
                    "enabled": "=resolveOrValue('prime_tower_enable')", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "True", 
                    "type": "bool", 
                    "description": "After printing the prime tower with one nozzle, wipe the oozed material from the other nozzle off on the prime tower."
                }, 
                "ooze_shield_dist": {
                    "resolve": "=max(extruderValues('ooze_shield_dist'))", 
                    "maximum_value_warning": "=20", 
                    "minimum_value": "=0", 
                    "settable_per_extruder": "False", 
                    "unit": "mm", 
                    "children": {}, 
                    "default_value": "2", 
                    "label": "Ooze Shield Distance", 
                    "enabled": "=resolveOrValue('ooze_shield_enabled')", 
                    "settable_per_mesh": "False", 
                    "type": "float", 
                    "description": "Distance of the ooze shield from the print, in the X/Y directions."
                }, 
                "prime_tower_purge_volume": {
                    "children": {}, 
                    "default_value": "0", 
                    "unit": "mm\u00b3", 
                    "label": "Prime Tower Purge Volume", 
                    "maximum_value_warning": "=2.5", 
                    "enabled": "=resolveOrValue('prime_tower_enable') and dual_pre_wipe", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "True", 
                    "minimum_value": "=0", 
                    "type": "float", 
                    "description": "Amount of filament to be purged when wiping on the prime tower. Purging is useful for compensating the filament lost by oozing during inactivity of the nozzle."
                }, 
                "prime_tower_flow": {
                    "unit": "%", 
                    "maximum_value_warning": "=150", 
                    "value": "=material_flow", 
                    "settable_per_extruder": "True", 
                    "minimum_value": "=0.0001", 
                    "children": {}, 
                    "default_value": "100", 
                    "label": "Prime Tower Flow", 
                    "minimum_value_warning": "=50", 
                    "enabled": "=resolveOrValue('prime_tower_enable')", 
                    "settable_per_mesh": "False", 
                    "type": "float", 
                    "description": "Flow compensation: the amount of material extruded is multiplied by this value."
                }, 
                "ooze_shield_enabled": {
                    "children": {}, 
                    "default_value": "False", 
                    "description": "Enable exterior ooze shield. This will create a shell around the model which is likely to wipe a second nozzle if it's at the same height as the first nozzle.", 
                    "resolve": "=any(extruderValues('ooze_shield_enabled'))", 
                    "enabled": "=extruders_enabled_count > 1", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "False", 
                    "type": "bool", 
                    "label": "Enable Ooze Shield"
                }, 
                "prime_tower_enable": {
                    "children": {}, 
                    "default_value": "False", 
                    "description": "Print a tower next to the print which serves to prime the material after each nozzle switch.", 
                    "resolve": "=any(extruderValues('prime_tower_enable'))", 
                    "enabled": "=extruders_enabled_count > 1", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "False", 
                    "type": "bool", 
                    "label": "Enable Prime Tower"
                }, 
                "prime_tower_min_volume": {
                    "minimum_value": "=0", 
                    "maximum_value_warning": "=round((resolveOrValue('prime_tower_size') * 0.5) ** 2 * 3.14159 * resolveOrValue('layer_height'), 2) if prime_tower_circular else resolveOrValue('prime_tower_size') ** 2 * resolveOrValue('layer_height')", 
                    "value": "=8.48 if prime_tower_circular else 10", 
                    "settable_per_extruder": "True", 
                    "unit": "mm\u00b3", 
                    "children": {
                        "prime_tower_wall_thickness": {
                            "unit": "mm", 
                            "resolve": "=max(extruderValues('prime_tower_wall_thickness'))", 
                            "maximum_value_warning": "=prime_tower_size / 2", 
                            "value": "=round(max(2 * prime_tower_line_width, (0.5 * (prime_tower_size - math.sqrt(max(0, prime_tower_size ** 2 - 4 * prime_tower_min_volume / (3.14159 * layer_height))))) if prime_tower_circular else (0.5 * (prime_tower_size - math.sqrt(max(0, prime_tower_size ** 2 - prime_tower_min_volume / layer_height))))), 3)", 
                            "settable_per_extruder": "False", 
                            "minimum_value": "=0.001", 
                            "children": {}, 
                            "default_value": "2", 
                            "label": "Prime Tower Thickness", 
                            "minimum_value_warning": "=2 * min(extruderValues('prime_tower_line_width')) - 0.0001", 
                            "enabled": "=prime_tower_enable", 
                            "settable_per_mesh": "False", 
                            "type": "float", 
                            "description": "The thickness of the hollow prime tower. A thickness larger than half the Prime Tower Minimum Volume will result in a dense prime tower."
                        }
                    }, 
                    "default_value": "10", 
                    "label": "Prime Tower Minimum Volume", 
                    "enabled": "=resolveOrValue('prime_tower_enable')", 
                    "settable_per_mesh": "False", 
                    "type": "float", 
                    "description": "The minimum volume for each layer of the prime tower in order to purge enough material."
                }
            }, 
            "type": "category", 
            "label": "Dual Extrusion", 
            "description": "Settings used for printing with multiple extruders."
        }, 
        "blackmagic": {
            "icon": "category_blackmagic", 
            "children": {
                "magic_mesh_surface_mode": {
                    "children": {}, 
                    "default_value": "normal", 
                    "label": "Surface Mode", 
                    "type": "enum", 
                    "settable_per_mesh": "True", 
                    "options": "OrderedDict([('normal', 'Normal'), ('surface', 'Surface'), ('both', 'Both')])", 
                    "description": "Treat the model as a surface only, a volume, or volumes with loose surfaces. The normal print mode only prints enclosed volumes. \"Surface\" prints a single wall tracing the mesh surface with no infill and no top/bottom skin. \"Both\" prints enclosed volumes like normal and any remaining polygons as surfaces."
                }, 
                "relative_extrusion": {
                    "children": {}, 
                    "default_value": "False", 
                    "label": "Relative Extrusion", 
                    "value": "=machine_gcode_flavor==\"RepRap (RepRap)\"", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "False", 
                    "enabled": "=True", 
                    "type": "bool", 
                    "description": "Use relative extrusion rather than absolute extrusion. Using relative E-steps makes for easier post-processing of the g-code. However, it's not supported by all printers and it may produce very slight deviations in the amount of deposited material compared to absolute E-steps. Irrespective of this setting, the extrusion mode will always be set to absolute before any g-code script is output."
                }, 
                "magic_spiralize": {
                    "children": {}, 
                    "default_value": "False", 
                    "label": "Spiralize Outer Contour", 
                    "type": "bool", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "False", 
                    "description": "Spiralize smooths out the Z move of the outer edge. This will create a steady Z increase over the whole print. This feature turns a solid model into a single walled print with a solid bottom. This feature should only be enabled when each layer only contains a single part."
                }, 
                "support_mesh": {
                    "children": {}, 
                    "default_value": "False", 
                    "settable_globally": "False", 
                    "label": "Support Mesh", 
                    "settable_per_meshgroup": "False", 
                    "type": "bool", 
                    "settable_per_mesh": "True", 
                    "settable_per_extruder": "False", 
                    "description": "Use this mesh to specify support areas. This can be used to generate support structure."
                }, 
                "print_sequence": {
                    "children": {}, 
                    "default_value": "all_at_once", 
                    "label": "Print Sequence", 
                    "settable_per_meshgroup": "False", 
                    "settable_per_extruder": "False", 
                    "enabled": "=extruders_enabled_count == 1", 
                    "settable_per_mesh": "False", 
                    "options": "OrderedDict([('all_at_once', 'All at Once'), ('one_at_a_time', 'One at a Time')])", 
                    "type": "enum", 
                    "description": "Whether to print all models one layer at a time or to wait for one model to finish, before moving on to the next. One at a time mode is only possible if all models are separated in such a way that the whole print head can move in between and all models are lower than the distance between the nozzle and the X/Y axes."
                }, 
                "infill_mesh_order": {
                    "settable_per_meshgroup": "False", 
                    "settable_globally": "False", 
                    "maximum_value_warning": "=50", 
                    "value": "=1 if infill_mesh else 0", 
                    "settable_per_extruder": "False", 
                    "children": {}, 
                    "default_value": "0", 
                    "label": "Infill Mesh Order", 
                    "minimum_value_warning": "=1", 
                    "settable_per_mesh": "True", 
                    "type": "int", 
                    "description": "Determines which infill mesh is inside the infill of another infill mesh. An infill mesh with a higher order will modify the infill of infill meshes with lower order and normal meshes."
                }, 
                "mold_enabled": {
                    "children": {}, 
                    "default_value": "False", 
                    "label": "Mold", 
                    "type": "bool", 
                    "settable_per_mesh": "True", 
                    "description": "Print models as a mold, which can be cast in order to get a model which resembles the models on the build plate."
                }, 
                "smooth_spiralized_contours": {
                    "children": {}, 
                    "default_value": "True", 
                    "label": "Smooth Spiralized Contours", 
                    "enabled": "=magic_spiralize", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "False", 
                    "type": "bool", 
                    "description": "Smooth the spiralized contours to reduce the visibility of the Z seam (the Z-seam should be barely visible on the print but will still be visible in the layer view). Note that smoothing will tend to blur fine surface details."
                }, 
                "mold_angle": {
                    "unit": "\u00b0", 
                    "maximum_value_warning": "=support_angle", 
                    "maximum_value": "=90", 
                    "type": "float", 
                    "minimum_value": "=-89", 
                    "children": {}, 
                    "default_value": "40", 
                    "label": "Mold Angle", 
                    "minimum_value_warning": "=0", 
                    "enabled": "=mold_enabled", 
                    "settable_per_mesh": "True", 
                    "description": "The angle of overhang of the outer walls created for the mold. 0\u00b0 will make the outer shell of the mold vertical, while 90\u00b0 will make the outside of the model follow the contour of the model."
                }, 
                "mold_roof_height": {
                    "children": {}, 
                    "default_value": "0.5", 
                    "minimum_value": "=0", 
                    "label": "Mold Roof Height", 
                    "maximum_value_warning": "=5", 
                    "enabled": "=mold_enabled", 
                    "settable_per_mesh": "True", 
                    "unit": "mm", 
                    "type": "float", 
                    "description": "The height above horizontal parts in your model which to print mold."
                }, 
                "mold_width": {
                    "children": {}, 
                    "default_value": "5", 
                    "label": "Minimal Mold Width", 
                    "maximum_value_warning": "=100", 
                    "minimum_value_warning": "=wall_line_width_0 * 2", 
                    "enabled": "=mold_enabled", 
                    "settable_per_mesh": "True", 
                    "unit": "mm", 
                    "type": "float", 
                    "description": "The minimal distance between the ouside of the mold and the outside of the model."
                }, 
                "anti_overhang_mesh": {
                    "children": {}, 
                    "default_value": "False", 
                    "settable_globally": "False", 
                    "label": "Anti Overhang Mesh", 
                    "settable_per_meshgroup": "False", 
                    "type": "bool", 
                    "settable_per_mesh": "True", 
                    "settable_per_extruder": "False", 
                    "description": "Use this mesh to specify where no part of the model should be detected as overhang. This can be used to remove unwanted support structure."
                }, 
                "cutting_mesh": {
                    "children": {}, 
                    "default_value": "False", 
                    "settable_globally": "False", 
                    "label": "Cutting Mesh", 
                    "settable_per_meshgroup": "False", 
                    "type": "bool", 
                    "settable_per_mesh": "True", 
                    "settable_per_extruder": "False", 
                    "description": "Limit the volume of this mesh to within other meshes. You can use this to make certain areas of one mesh print with different settings and with a whole different extruder."
                }, 
                "infill_mesh": {
                    "children": {}, 
                    "default_value": "False", 
                    "settable_globally": "False", 
                    "label": "Infill Mesh", 
                    "settable_per_meshgroup": "False", 
                    "type": "bool", 
                    "settable_per_mesh": "True", 
                    "settable_per_extruder": "False", 
                    "description": "Use this mesh to modify the infill of other meshes with which it overlaps. Replaces infill regions of other meshes with regions for this mesh. It's suggested to only print one Wall and no Top/Bottom Skin for this mesh."
                }
            }, 
            "type": "category", 
            "label": "Special Modes", 
            "description": "category_blackmagic"
        }, 
        "meshfix": {
            "icon": "category_fixes", 
            "children": {
                "meshfix_union_all_remove_holes": {
                    "children": {}, 
                    "default_value": "False", 
                    "label": "Remove All Holes", 
                    "type": "bool", 
                    "settable_per_mesh": "True", 
                    "description": "Remove the holes in each layer and keep only the outside shape. This will ignore any invisible internal geometry. However, it also ignores layer holes which can be viewed from above or below."
                }, 
                "meshfix_extensive_stitching": {
                    "children": {}, 
                    "default_value": "False", 
                    "label": "Extensive Stitching", 
                    "type": "bool", 
                    "settable_per_mesh": "True", 
                    "description": "Extensive stitching tries to stitch up open holes in the mesh by closing the hole with touching polygons. This option can introduce a lot of processing time."
                }, 
                "remove_empty_first_layers": {
                    "children": {}, 
                    "default_value": "True", 
                    "label": "Remove Empty First Layers", 
                    "enabled": "=not support_enable", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "False", 
                    "type": "bool", 
                    "description": "Remove empty layers beneath the first printed layer if they are present. Disabling this setting can cause empty first layers if the Slicing Tolerance setting is set to Exclusive or Middle."
                }, 
                "meshfix_keep_open_polygons": {
                    "children": {}, 
                    "default_value": "False", 
                    "label": "Keep Disconnected Faces", 
                    "type": "bool", 
                    "settable_per_mesh": "True", 
                    "description": "Normally Cura tries to stitch up small holes in the mesh and remove parts of a layer with big holes. Enabling this option keeps those parts which cannot be stitched. This option should be used as a last resort option when everything else fails to produce proper g-code."
                }, 
                "meshfix_union_all": {
                    "children": {}, 
                    "default_value": "True", 
                    "label": "Union Overlapping Volumes", 
                    "type": "bool", 
                    "settable_per_mesh": "True", 
                    "description": "Ignore the internal geometry arising from overlapping volumes within a mesh and print the volumes as one. This may cause unintended internal cavities to disappear."
                }, 
                "alternate_carve_order": {
                    "children": {}, 
                    "default_value": "True", 
                    "label": "Alternate Mesh Removal", 
                    "settable_per_meshgroup": "True", 
                    "enabled": "=carve_multiple_volumes", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "False", 
                    "type": "bool", 
                    "description": "Switch to which mesh intersecting volumes will belong with every layer, so that the overlapping meshes become interwoven. Turning this setting off will cause one of the meshes to obtain all of the volume in the overlap, while it is removed from the other meshes."
                }, 
                "carve_multiple_volumes": {
                    "children": {}, 
                    "default_value": "True", 
                    "label": "Remove Mesh Intersection", 
                    "settable_per_meshgroup": "True", 
                    "value": "=extruders_enabled_count > 1", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "False", 
                    "type": "bool", 
                    "description": "Remove areas where multiple meshes are overlapping with each other. This may be used if merged dual material objects overlap with each other."
                }, 
                "multiple_mesh_overlap": {
                    "children": {}, 
                    "default_value": "0.15", 
                    "limit_to_extruder": "=wall_0_extruder_nr", 
                    "label": "Merged Meshes Overlap", 
                    "maximum_value_warning": "=1.0", 
                    "unit": "mm", 
                    "type": "float", 
                    "settable_per_mesh": "True", 
                    "minimum_value": "=0", 
                    "description": "Make meshes which are touching each other overlap a bit. This makes them bond together better."
                }
            }, 
            "type": "category", 
            "label": "Mesh Fixes", 
            "description": "category_fixes"
        }, 
        "experimental": {
            "icon": "category_experimental", 
            "children": {
                "support_skip_zag_per_mm": {
                    "limit_to_extruder": "=support_infill_extruder_nr", 
                    "minimum_value": "=0", 
                    "settable_per_extruder": "True", 
                    "unit": "mm", 
                    "children": {
                        "support_zag_skip_count": {
                            "limit_to_extruder": "=support_infill_extruder_nr", 
                            "value": "=0 if support_line_distance == 0 else round(support_skip_zag_per_mm / support_line_distance)", 
                            "settable_per_extruder": "True", 
                            "minimum_value": "=1", 
                            "children": {}, 
                            "default_value": "5", 
                            "label": "Support Chunk Line Count", 
                            "minimum_value_warning": "=3", 
                            "enabled": "=support_enable and (support_pattern == 'zigzag') and support_skip_some_zags", 
                            "settable_per_mesh": "False", 
                            "type": "int", 
                            "description": "Skip one in every N connection lines to make the support structure easier to break away."
                        }
                    }, 
                    "default_value": "20", 
                    "label": "Support Chunk Size", 
                    "minimum_value_warning": "=support_line_distance", 
                    "enabled": "=support_enable and (support_pattern == 'zigzag') and support_skip_some_zags", 
                    "settable_per_mesh": "False", 
                    "type": "float", 
                    "description": "Leave out a connection between support lines once every N millimeter to make the support structure easier to break away."
                }, 
                "cross_support_density_image": {
                    "children": {}, 
                    "default_value": "", 
                    "limit_to_extruder": "=support_infill_extruder_nr", 
                    "label": "Cross Fill Density Image for Support", 
                    "enabled": "=support_pattern == 'cross' or support_pattern == 'cross_3d'", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "True", 
                    "type": "str", 
                    "description": "The file location of an image of which the brightness values determine the minimal density at the corresponding location in the support."
                }, 
                "support_tree_angle": {
                    "limit_to_extruder": "=support_infill_extruder_nr", 
                    "maximum_value_warning": "=60", 
                    "maximum_value": "=90", 
                    "unit": "\u00b0", 
                    "type": "float", 
                    "settable_per_extruder": "True", 
                    "minimum_value": "=0", 
                    "children": {}, 
                    "default_value": "40", 
                    "label": "Tree Support Branch Angle", 
                    "enabled": "=support_tree_enable", 
                    "settable_per_mesh": "False", 
                    "description": "The angle of the branches. Use a lower angle to make them more vertical and more stable. Use a higher angle to be able to have more reach."
                }, 
                "bridge_skin_speed_3": {
                    "minimum_value": "=cool_min_speed", 
                    "maximum_value_warning": "=300", 
                    "maximum_value": "=math.sqrt(machine_max_feedrate_x ** 2 + machine_max_feedrate_y ** 2)", 
                    "value": "=bridge_skin_speed", 
                    "unit": "mm/s", 
                    "children": {}, 
                    "default_value": "15", 
                    "label": "Bridge Third Skin Speed", 
                    "enabled": "=bridge_settings_enabled and bridge_enable_more_layers", 
                    "settable_per_mesh": "True", 
                    "type": "float", 
                    "description": "Print speed to use when printing the third bridge skin layer."
                }, 
                "spaghetti_infill_enabled": {
                    "children": {}, 
                    "default_value": "False", 
                    "limit_to_extruder": "=infill_extruder_nr", 
                    "label": "Spaghetti Infill", 
                    "enabled": "=infill_sparse_density > 0", 
                    "settable_per_mesh": "True", 
                    "type": "bool", 
                    "description": "Print the infill every so often, so that the filament will curl up chaotically inside the object. This reduces print time, but the behaviour is rather unpredictable."
                }, 
                "spaghetti_max_infill_angle": {
                    "limit_to_extruder": "=infill_extruder_nr", 
                    "maximum_value_warning": "=45", 
                    "maximum_value": "=90", 
                    "minimum_value": "=0", 
                    "unit": "\u00b0", 
                    "children": {}, 
                    "default_value": "10", 
                    "label": "Spaghetti Maximum Infill Angle", 
                    "enabled": "=infill_sparse_density > 0 and spaghetti_infill_enabled and spaghetti_infill_stepped", 
                    "settable_per_mesh": "True", 
                    "type": "float", 
                    "description": "The maximum angle w.r.t. the Z axis of the inside of the print for areas which are to be filled with spaghetti infill afterwards. Lowering this value causes more angled parts in your model to be filled on each layer."
                }, 
                "cross_infill_density_image": {
                    "children": {}, 
                    "default_value": "", 
                    "limit_to_extruder": "=infill_extruder_nr", 
                    "label": "Cross Infill Density Image", 
                    "enabled": "=infill_pattern == 'cross' or infill_pattern == 'cross_3d'", 
                    "settable_per_mesh": "True", 
                    "type": "str", 
                    "description": "The file location of an image of which the brightness values determine the minimal density at the corresponding location in the infill of the print."
                }, 
                "bridge_skin_material_flow_3": {
                    "maximum_value_warning": "=150", 
                    "maximum_value": "=500", 
                    "minimum_value": "=5", 
                    "unit": "%", 
                    "children": {}, 
                    "default_value": "110", 
                    "label": "Bridge Third Skin Flow", 
                    "minimum_value_warning": "=50", 
                    "enabled": "=bridge_settings_enabled and bridge_enable_more_layers", 
                    "settable_per_mesh": "True", 
                    "type": "float", 
                    "description": "When printing the third bridge skin layer, the amount of material extruded is multiplied by this value."
                }, 
                "wireframe_height": {
                    "settable_per_meshgroup": "False", 
                    "unit": "mm", 
                    "maximum_value_warning": "=20", 
                    "value": "=machine_nozzle_head_distance", 
                    "settable_per_extruder": "False", 
                    "minimum_value": "=0.0001", 
                    "children": {}, 
                    "default_value": "3", 
                    "label": "WP Connection Height", 
                    "enabled": "=wireframe_enabled", 
                    "settable_per_mesh": "False", 
                    "type": "float", 
                    "description": "The height of the upward and diagonally downward lines between two horizontal parts. This determines the overall density of the net structure. Only applies to Wire Printing."
                }, 
                "support_tree_branch_distance": {
                    "children": {}, 
                    "default_value": "4", 
                    "limit_to_extruder": "=support_infill_extruder_nr", 
                    "label": "Tree Support Branch Distance", 
                    "unit": "mm", 
                    "enabled": "=support_tree_enable", 
                    "settable_per_mesh": "True", 
                    "minimum_value": "=0.001", 
                    "type": "float", 
                    "description": "How far apart the branches need to be when they touch the model. Making this distance small will cause the tree support to touch the model at more points, causing better overhang but making support harder to remove."
                }, 
                "bridge_wall_min_length": {
                    "children": {}, 
                    "default_value": "5", 
                    "unit": "mm", 
                    "label": "Minimum Bridge Wall Length", 
                    "enabled": "=bridge_settings_enabled", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "True", 
                    "minimum_value": "=0", 
                    "type": "float", 
                    "description": "Unsupported walls shorter than this will be printed using the normal wall settings. Longer unsupported walls will be printed using the bridge wall settings."
                }, 
                "support_conical_enabled": {
                    "children": {}, 
                    "default_value": "False", 
                    "limit_to_extruder": "=support_infill_extruder_nr", 
                    "label": "Enable Conical Support", 
                    "enabled": "=support_enable", 
                    "settable_per_mesh": "True", 
                    "type": "bool", 
                    "description": "Experimental feature: Make support areas smaller at the bottom than at the overhang."
                }, 
                "infill_enable_travel_optimization": {
                    "children": {}, 
                    "default_value": "False", 
                    "label": "Infill Travel Optimization", 
                    "type": "bool", 
                    "settable_per_mesh": "True", 
                    "description": "When enabled, the order in which the infill lines are printed is optimized to reduce the distance travelled. The reduction in travel time achieved very much depends on the model being sliced, infill pattern, density, etc. Note that, for some models that have many small areas of infill, the time to slice the model may be greatly increased."
                }, 
                "meshfix_maximum_travel_resolution": {
                    "minimum_value": "=0.001", 
                    "maximum_value_warning": "=1", 
                    "value": "=meshfix_maximum_resolution * speed_travel / speed_print", 
                    "settable_per_extruder": "True", 
                    "unit": "mm", 
                    "children": {}, 
                    "default_value": "0.02", 
                    "label": "Maximum Travel Resolution", 
                    "minimum_value_warning": "=0.005", 
                    "settable_per_mesh": "False", 
                    "type": "float", 
                    "description": "The minimum size of a travel line segment after slicing. If you increase this, the travel moves will have less smooth corners. This may allow the printer to keep up with the speed it has to process g-code, but it may cause model avoidance to become less accurate."
                }, 
                "wireframe_drag_along": {
                    "settable_per_meshgroup": "False", 
                    "maximum_value_warning": "=wireframe_height", 
                    "minimum_value": "=0", 
                    "settable_per_extruder": "False", 
                    "unit": "mm", 
                    "children": {}, 
                    "default_value": "0.6", 
                    "label": "WP Drag Along", 
                    "enabled": "=wireframe_enabled", 
                    "settable_per_mesh": "False", 
                    "type": "float", 
                    "description": "Distance with which the material of an upward extrusion is dragged along with the diagonally downward extrusion. This distance is compensated for. Only applies to Wire Printing."
                }, 
                "coasting_volume": {
                    "children": {}, 
                    "default_value": "0.064", 
                    "unit": "mm\u00b3", 
                    "label": "Coasting Volume", 
                    "maximum_value_warning": "=machine_nozzle_size * 5", 
                    "enabled": "=coasting_enable", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "True", 
                    "minimum_value": "=0", 
                    "type": "float", 
                    "description": "The volume otherwise oozed. This value should generally be close to the nozzle diameter cubed."
                }, 
                "support_conical_min_width": {
                    "limit_to_extruder": "=support_infill_extruder_nr", 
                    "maximum_value_warning": "=100.0", 
                    "minimum_value": "=0", 
                    "unit": "mm", 
                    "children": {}, 
                    "default_value": "5.0", 
                    "label": "Conical Support Minimum Width", 
                    "minimum_value_warning": "=machine_nozzle_size * 3", 
                    "enabled": "=support_conical_enabled and support_enable", 
                    "settable_per_mesh": "True", 
                    "type": "float", 
                    "description": "Minimum width to which the base of the conical support area is reduced. Small widths can lead to unstable support structures."
                }, 
                "draft_shield_dist": {
                    "resolve": "=max(extruderValues('draft_shield_dist'))", 
                    "maximum_value_warning": "=10", 
                    "minimum_value": "=0", 
                    "settable_per_extruder": "False", 
                    "unit": "mm", 
                    "children": {}, 
                    "default_value": "10", 
                    "label": "Draft Shield X/Y Distance", 
                    "enabled": "=draft_shield_enabled", 
                    "settable_per_mesh": "False", 
                    "type": "float", 
                    "description": "Distance of the draft shield from the print, in the X/Y directions."
                }, 
                "meshfix_maximum_resolution": {
                    "children": {}, 
                    "default_value": "0.01", 
                    "unit": "mm", 
                    "label": "Maximum Resolution", 
                    "maximum_value_warning": "=0.1", 
                    "minimum_value_warning": "=0.005", 
                    "type": "float", 
                    "settable_per_mesh": "True", 
                    "minimum_value": "=0.001", 
                    "description": "The minimum size of a line segment after slicing. If you increase this, the mesh will have a lower resolution. This may allow the printer to keep up with the speed it has to process g-code and will increase slice speed by removing details of the mesh that it can't process anyway."
                }, 
                "roofing_pattern": {
                    "children": {}, 
                    "default_value": "lines", 
                    "limit_to_extruder": "=roofing_extruder_nr", 
                    "label": "Top Surface Skin Pattern", 
                    "enabled": "=roofing_layer_count > 0 and top_layers > 0", 
                    "settable_per_mesh": "True", 
                    "options": "OrderedDict([('lines', 'Lines'), ('concentric', 'Concentric'), ('zigzag', 'Zig Zag')])", 
                    "value": "=top_bottom_pattern", 
                    "type": "enum", 
                    "description": "The pattern of the top most layers."
                }, 
                "material_flow_dependent_temperature": {
                    "children": {}, 
                    "default_value": "False", 
                    "label": "Auto Temperature", 
                    "enabled": "=machine_nozzle_temp_enabled and False", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "True", 
                    "type": "bool", 
                    "description": "Change the temperature for each layer automatically with the average flow speed of that layer."
                }, 
                "roofing_angles": {
                    "children": {}, 
                    "default_value": "[ ]", 
                    "limit_to_extruder": "=roofing_extruder_nr", 
                    "label": "Top Surface Skin Line Directions", 
                    "value": "=skin_angles", 
                    "settable_per_mesh": "True", 
                    "enabled": "=roofing_pattern != 'concentric' and roofing_layer_count > 0 and top_layers > 0", 
                    "type": "[int]", 
                    "description": "A list of integer line directions to use when the top surface skin layers use the lines or zig zag pattern. Elements from the list are used sequentially as the layers progress and when the end of the list is reached, it starts at the beginning again. The list items are separated by commas and the whole list is contained in square brackets. Default is an empty list which means use the traditional default angles (45 and 135 degrees)."
                }, 
                "wireframe_fall_down": {
                    "settable_per_meshgroup": "False", 
                    "maximum_value_warning": "=wireframe_height", 
                    "minimum_value": "=0", 
                    "settable_per_extruder": "False", 
                    "unit": "mm", 
                    "children": {}, 
                    "default_value": "0.5", 
                    "label": "WP Fall Down", 
                    "enabled": "=wireframe_enabled", 
                    "settable_per_mesh": "False", 
                    "type": "float", 
                    "description": "Distance with which the material falls down after an upward extrusion. This distance is compensated for. Only applies to Wire Printing."
                }, 
                "bridge_settings_enabled": {
                    "children": {}, 
                    "default_value": "False", 
                    "label": "Enable Bridge Settings", 
                    "settable_per_meshgroup": "False", 
                    "type": "bool", 
                    "settable_per_mesh": "True", 
                    "settable_per_extruder": "False", 
                    "description": "Detect bridges and modify print speed, flow and fan settings while bridges are printed."
                }, 
                "roofing_line_width": {
                    "limit_to_extruder": "=roofing_extruder_nr", 
                    "maximum_value_warning": "=2 * machine_nozzle_size", 
                    "unit": "mm", 
                    "value": "=skin_line_width", 
                    "minimum_value": "=0.001", 
                    "children": {}, 
                    "default_value": "0.4", 
                    "label": "Top Surface Skin Line Width", 
                    "minimum_value_warning": "=0.1 + 0.4 * machine_nozzle_size", 
                    "enabled": "=roofing_layer_count > 0 and top_layers > 0", 
                    "settable_per_mesh": "True", 
                    "type": "float", 
                    "description": "Width of a single line of the areas at the top of the print."
                }, 
                "bridge_skin_speed_2": {
                    "minimum_value": "=cool_min_speed", 
                    "maximum_value_warning": "=300", 
                    "maximum_value": "=math.sqrt(machine_max_feedrate_x ** 2 + machine_max_feedrate_y ** 2)", 
                    "value": "=bridge_skin_speed", 
                    "unit": "mm/s", 
                    "children": {}, 
                    "default_value": "25", 
                    "label": "Bridge Second Skin Speed", 
                    "enabled": "=bridge_settings_enabled and bridge_enable_more_layers", 
                    "settable_per_mesh": "True", 
                    "type": "float", 
                    "description": "Print speed to use when printing the second bridge skin layer."
                }, 
                "flow_rate_max_extrusion_offset": {
                    "settable_per_meshgroup": "False", 
                    "unit": "mm", 
                    "maximum_value_warning": "=10", 
                    "value": "=0", 
                    "settable_per_extruder": "False", 
                    "minimum_value": "=0", 
                    "children": {}, 
                    "default_value": "0", 
                    "label": "Flow rate compensation max extrusion offset", 
                    "enabled": "=True", 
                    "settable_per_mesh": "False", 
                    "type": "float", 
                    "description": "The maximum distance in mm to compensate."
                }, 
                "bridge_wall_coast": {
                    "children": {}, 
                    "default_value": "100", 
                    "unit": "%", 
                    "label": "Bridge Wall Coasting", 
                    "maximum_value": "=500", 
                    "enabled": "=bridge_settings_enabled", 
                    "settable_per_mesh": "False", 
                    "minimum_value": "=0", 
                    "type": "float", 
                    "description": "This controls the distance the extruder should coast immediately before a bridge wall begins. Coasting before the bridge starts can reduce the pressure in the nozzle and may produce a flatter bridge."
                }, 
                "spaghetti_infill_extra_volume": {
                    "children": {}, 
                    "default_value": "0", 
                    "limit_to_extruder": "=infill_extruder_nr", 
                    "label": "Spaghetti Infill Extra Volume", 
                    "maximum_value_warning": "=100", 
                    "minimum_value_warning": "=0", 
                    "enabled": "=infill_sparse_density > 0 and spaghetti_infill_enabled", 
                    "settable_per_mesh": "True", 
                    "unit": "mm\u00b3", 
                    "type": "float", 
                    "description": "A correction term to adjust the total volume being extruded each time when filling spaghetti."
                }, 
                "support_skip_some_zags": {
                    "children": {}, 
                    "default_value": "False", 
                    "limit_to_extruder": "=support_infill_extruder_nr", 
                    "label": "Break Up Support In Chunks", 
                    "enabled": "=support_enable and (support_pattern == 'zigzag')", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "True", 
                    "type": "bool", 
                    "description": "Skip some support line connections to make the support structure easier to break away. This setting is applicable to the Zig Zag support infill pattern."
                }, 
                "bridge_fan_speed_3": {
                    "children": {}, 
                    "default_value": "0", 
                    "unit": "%", 
                    "label": "Bridge Third Skin Fan Speed", 
                    "maximum_value": "=100", 
                    "enabled": "=bridge_settings_enabled and bridge_enable_more_layers", 
                    "settable_per_mesh": "True", 
                    "minimum_value": "=0", 
                    "type": "float", 
                    "description": "Percentage fan speed to use when printing the third bridge skin layer."
                }, 
                "conical_overhang_enabled": {
                    "children": {}, 
                    "type": "bool", 
                    "default_value": "False", 
                    "label": "Make Overhang Printable", 
                    "description": "Change the geometry of the printed model such that minimal support is required. Steep overhangs will become shallow overhangs. Overhanging areas will drop down to become more vertical."
                }, 
                "support_tree_collision_resolution": {
                    "limit_to_extruder": "=support_infill_extruder_nr", 
                    "maximum_value_warning": "=support_line_width * 2", 
                    "unit": "mm", 
                    "value": "=support_line_width / 2", 
                    "settable_per_extruder": "True", 
                    "minimum_value": "=0.001", 
                    "children": {}, 
                    "default_value": "0.4", 
                    "label": "Tree Support Collision Resolution", 
                    "minimum_value_warning": "=support_line_width / 4", 
                    "enabled": "=support_tree_enable and support_tree_branch_diameter_angle > 0", 
                    "settable_per_mesh": "False", 
                    "type": "float", 
                    "description": "Resolution to compute collisions with to avoid hitting the model. Setting this lower will produce more accurate trees that fail less often, but increases slicing time dramatically."
                }, 
                "wireframe_roof_outer_delay": {
                    "settable_per_meshgroup": "False", 
                    "maximum_value_warning": "=2.0", 
                    "minimum_value": "=0", 
                    "settable_per_extruder": "False", 
                    "unit": "s", 
                    "children": {}, 
                    "default_value": "0.2", 
                    "label": "WP Roof Outer Delay", 
                    "enabled": "=wireframe_enabled", 
                    "settable_per_mesh": "False", 
                    "type": "float", 
                    "description": "Time spent at the outer perimeters of hole which is to become a roof. Longer times can ensure a better connection. Only applies to Wire Printing."
                }, 
                "wireframe_up_half_speed": {
                    "settable_per_meshgroup": "False", 
                    "maximum_value_warning": "=5.0", 
                    "minimum_value": "=0", 
                    "settable_per_extruder": "False", 
                    "unit": "mm", 
                    "children": {}, 
                    "default_value": "0.3", 
                    "label": "WP Ease Upward", 
                    "enabled": "=wireframe_enabled", 
                    "settable_per_mesh": "False", 
                    "type": "float", 
                    "description": "Distance of an upward move which is extruded with half speed.\nThis can cause better adhesion to previous layers, while not heating the material in those layers too much. Only applies to Wire Printing."
                }, 
                "wireframe_roof_fall_down": {
                    "settable_per_meshgroup": "False", 
                    "maximum_value_warning": "=wireframe_roof_inset", 
                    "type": "float", 
                    "settable_per_extruder": "False", 
                    "unit": "mm", 
                    "children": {}, 
                    "default_value": "2", 
                    "label": "WP Roof Fall Down", 
                    "minimum_value_warning": "=0", 
                    "enabled": "=wireframe_enabled", 
                    "settable_per_mesh": "False", 
                    "description": "The distance which horizontal roof lines printed 'in thin air' fall down when being printed. This distance is compensated for. Only applies to Wire Printing."
                }, 
                "wireframe_strategy": {
                    "children": {}, 
                    "default_value": "compensate", 
                    "label": "WP Strategy", 
                    "settable_per_meshgroup": "False", 
                    "settable_per_extruder": "False", 
                    "enabled": "=wireframe_enabled", 
                    "settable_per_mesh": "False", 
                    "options": "OrderedDict([('compensate', 'Compensate'), ('knot', 'Knot'), ('retract', 'Retract')])", 
                    "type": "enum", 
                    "description": "Strategy for making sure two consecutive layers connect at each connection point. Retraction lets the upward lines harden in the right position, but may cause filament grinding. A knot can be made at the end of an upward line to heighten the chance of connecting to it and to let the line cool; however, it may require slow printing speeds. Another strategy is to compensate for the sagging of the top of an upward line; however, the lines won't always fall down as predicted."
                }, 
                "coasting_min_volume": {
                    "children": {}, 
                    "default_value": "0.8", 
                    "unit": "mm\u00b3", 
                    "label": "Minimum Volume Before Coasting", 
                    "maximum_value_warning": "=10.0", 
                    "enabled": "=coasting_enable", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "True", 
                    "minimum_value": "=0", 
                    "type": "float", 
                    "description": "The smallest volume an extrusion path should have before allowing coasting. For smaller extrusion paths, less pressure has been built up in the bowden tube and so the coasted volume is scaled linearly. This value should always be larger than the Coasting Volume."
                }, 
                "draft_shield_height_limitation": {
                    "children": {}, 
                    "default_value": "full", 
                    "description": "Set the height of the draft shield. Choose to print the draft shield at the full height of the model or at a limited height.", 
                    "resolve": "='full' if 'full' in extruderValues('draft_shield_height_limitation') else 'limited'", 
                    "enabled": "=draft_shield_enabled", 
                    "settable_per_mesh": "False", 
                    "options": "OrderedDict([('full', 'Full'), ('limited', 'Limited')])", 
                    "settable_per_extruder": "False", 
                    "type": "enum", 
                    "label": "Draft Shield Limitation"
                }, 
                "wireframe_nozzle_clearance": {
                    "settable_per_meshgroup": "False", 
                    "maximum_value_warning": "=10.0", 
                    "type": "float", 
                    "settable_per_extruder": "False", 
                    "unit": "mm", 
                    "children": {}, 
                    "default_value": "1", 
                    "label": "WP Nozzle Clearance", 
                    "minimum_value_warning": "=0", 
                    "enabled": "=wireframe_enabled", 
                    "settable_per_mesh": "False", 
                    "description": "Distance between the nozzle and horizontally downward lines. Larger clearance results in diagonally downward lines with a less steep angle, which in turn results in less upward connections with the next layer. Only applies to Wire Printing."
                }, 
                "support_tree_wall_thickness": {
                    "limit_to_extruder": "=support_infill_extruder_nr", 
                    "unit": "mm", 
                    "value": "=support_line_width", 
                    "settable_per_extruder": "True", 
                    "minimum_value": "=0", 
                    "children": {
                        "support_tree_wall_count": {
                            "limit_to_extruder": "=support_infill_extruder_nr", 
                            "value": "=round(support_tree_wall_thickness / support_line_width)", 
                            "settable_per_extruder": "True", 
                            "minimum_value": "=0", 
                            "children": {}, 
                            "default_value": "1", 
                            "label": "Tree Support Wall Line Count", 
                            "minimum_value_warning": "=1", 
                            "enabled": "=support_tree_enable", 
                            "settable_per_mesh": "False", 
                            "type": "int", 
                            "description": "The number of walls of the branches of tree support. Thicker walls take longer to print but don't fall over as easily."
                        }
                    }, 
                    "default_value": "0.8", 
                    "label": "Tree Support Wall Thickness", 
                    "minimum_value_warning": "=wall_line_width", 
                    "enabled": "=support_tree_enable", 
                    "settable_per_mesh": "False", 
                    "type": "float", 
                    "description": "The thickness of the walls of the branches of tree support. Thicker walls take longer to print but don't fall over as easily."
                }, 
                "bridge_fan_speed_2": {
                    "children": {}, 
                    "default_value": "0", 
                    "unit": "%", 
                    "label": "Bridge Second Skin Fan Speed", 
                    "maximum_value": "=100", 
                    "enabled": "=bridge_settings_enabled and bridge_enable_more_layers", 
                    "settable_per_mesh": "True", 
                    "minimum_value": "=0", 
                    "type": "float", 
                    "description": "Percentage fan speed to use when printing the second bridge skin layer."
                }, 
                "spaghetti_flow": {
                    "children": {}, 
                    "default_value": "20", 
                    "limit_to_extruder": "=infill_extruder_nr", 
                    "label": "Spaghetti Flow", 
                    "maximum_value_warning": "=100", 
                    "unit": "%", 
                    "enabled": "=infill_sparse_density > 0 and spaghetti_infill_enabled", 
                    "settable_per_mesh": "True", 
                    "minimum_value": "=0", 
                    "type": "float", 
                    "description": "Adjusts the density of the spaghetti infill. Note that the Infill Density only controls the line spacing of the filling pattern, not the amount of extrusion for spaghetti infill."
                }, 
                "bridge_skin_material_flow": {
                    "children": {}, 
                    "default_value": "60", 
                    "unit": "%", 
                    "label": "Bridge Skin Flow", 
                    "maximum_value_warning": "=150", 
                    "minimum_value_warning": "=50", 
                    "enabled": "=bridge_settings_enabled", 
                    "settable_per_mesh": "True", 
                    "minimum_value": "=5", 
                    "type": "float", 
                    "description": "When printing bridge skin regions, the amount of material extruded is multiplied by this value."
                }, 
                "wireframe_roof_drag_along": {
                    "settable_per_meshgroup": "False", 
                    "maximum_value_warning": "=10", 
                    "minimum_value": "=0", 
                    "settable_per_extruder": "False", 
                    "unit": "mm", 
                    "children": {}, 
                    "default_value": "0.8", 
                    "label": "WP Roof Drag Along", 
                    "enabled": "=wireframe_enabled", 
                    "settable_per_mesh": "False", 
                    "type": "float", 
                    "description": "The distance of the end piece of an inward line which gets dragged along when going back to the outer outline of the roof. This distance is compensated for. Only applies to Wire Printing."
                }, 
                "support_conical_angle": {
                    "limit_to_extruder": "=support_infill_extruder_nr", 
                    "maximum_value_warning": "=45", 
                    "maximum_value": "=90", 
                    "unit": "\u00b0", 
                    "type": "float", 
                    "minimum_value": "=-90", 
                    "children": {}, 
                    "default_value": "30", 
                    "label": "Conical Support Angle", 
                    "minimum_value_warning": "=-45", 
                    "enabled": "=support_conical_enabled and support_enable", 
                    "settable_per_mesh": "True", 
                    "description": "The angle of the tilt of conical support. With 0 degrees being vertical, and 90 degrees being horizontal. Smaller angles cause the support to be more sturdy, but consist of more material. Negative angles cause the base of the support to be wider than the top."
                }, 
                "support_tree_branch_diameter": {
                    "limit_to_extruder": "=support_infill_extruder_nr", 
                    "minimum_value": "=0.001", 
                    "settable_per_extruder": "True", 
                    "unit": "mm", 
                    "children": {}, 
                    "default_value": "2", 
                    "label": "Tree Support Branch Diameter", 
                    "minimum_value_warning": "=support_line_width * 2", 
                    "enabled": "=support_tree_enable", 
                    "settable_per_mesh": "False", 
                    "type": "float", 
                    "description": "The diameter of the thinnest branches of tree support. Thicker branches are more sturdy. Branches towards the base will be thicker than this."
                }, 
                "bridge_fan_speed": {
                    "children": {}, 
                    "default_value": "100", 
                    "unit": "%", 
                    "label": "Bridge Fan Speed", 
                    "maximum_value": "=100", 
                    "enabled": "=bridge_settings_enabled", 
                    "settable_per_mesh": "True", 
                    "minimum_value": "=0", 
                    "type": "float", 
                    "description": "Percentage fan speed to use when printing bridge walls and skin."
                }, 
                "wireframe_bottom_delay": {
                    "settable_per_meshgroup": "False", 
                    "maximum_value_warning": "=1", 
                    "minimum_value": "=0", 
                    "settable_per_extruder": "False", 
                    "unit": "s", 
                    "children": {}, 
                    "default_value": "0", 
                    "label": "WP Bottom Delay", 
                    "enabled": "=wireframe_enabled", 
                    "settable_per_mesh": "False", 
                    "type": "float", 
                    "description": "Delay time after a downward move. Only applies to Wire Printing."
                }, 
                "spaghetti_max_height": {
                    "children": {}, 
                    "default_value": "2.0", 
                    "limit_to_extruder": "=infill_extruder_nr", 
                    "label": "Spaghetti Infill Maximum Height", 
                    "maximum_value_warning": "=10.0", 
                    "unit": "mm", 
                    "enabled": "=infill_sparse_density > 0 and spaghetti_infill_enabled and spaghetti_infill_stepped", 
                    "settable_per_mesh": "True", 
                    "minimum_value": "=layer_height", 
                    "type": "float", 
                    "description": "The maximum height of inside space which can be combined and filled from the top."
                }, 
                "wireframe_roof_inset": {
                    "settable_per_meshgroup": "False", 
                    "unit": "mm", 
                    "maximum_value_warning": "=20", 
                    "value": "=wireframe_height", 
                    "settable_per_extruder": "False", 
                    "minimum_value": "=0", 
                    "children": {}, 
                    "default_value": "3", 
                    "label": "WP Roof Inset Distance", 
                    "minimum_value_warning": "=machine_nozzle_size", 
                    "enabled": "=wireframe_enabled", 
                    "settable_per_mesh": "False", 
                    "type": "float", 
                    "description": "The distance covered when making a connection from a roof outline inward. Only applies to Wire Printing."
                }, 
                "bridge_skin_density": {
                    "children": {}, 
                    "default_value": "100", 
                    "unit": "%", 
                    "label": "Bridge Skin Density", 
                    "maximum_value": "=100", 
                    "minimum_value_warning": "=20", 
                    "enabled": "=bridge_settings_enabled", 
                    "settable_per_mesh": "True", 
                    "minimum_value": "=5", 
                    "type": "float", 
                    "description": "The density of the bridge skin layer. Values less than 100 will increase the gaps between the skin lines."
                }, 
                "magic_fuzzy_skin_point_density": {
                    "limit_to_extruder": "=wall_0_extruder_nr", 
                    "maximum_value_warning": "=10", 
                    "maximum_value": "=2 / magic_fuzzy_skin_thickness", 
                    "unit": "1/mm", 
                    "type": "float", 
                    "minimum_value": "=0.008", 
                    "children": {
                        "magic_fuzzy_skin_point_dist": {
                            "limit_to_extruder": "=wall_0_extruder_nr", 
                            "maximum_value_warning": "=10", 
                            "unit": "mm", 
                            "value": "=10000 if magic_fuzzy_skin_point_density == 0 else 1 / magic_fuzzy_skin_point_density", 
                            "minimum_value": "=magic_fuzzy_skin_thickness / 2", 
                            "children": {}, 
                            "default_value": "0.8", 
                            "label": "Fuzzy Skin Point Distance", 
                            "minimum_value_warning": "=0.1", 
                            "enabled": "=magic_fuzzy_skin_enabled", 
                            "settable_per_mesh": "True", 
                            "type": "float", 
                            "description": "The average distance between the random points introduced on each line segment. Note that the original points of the polygon are discarded, so a high smoothness results in a reduction of the resolution. This value must be higher than half the Fuzzy Skin Thickness."
                        }
                    }, 
                    "default_value": "1.25", 
                    "label": "Fuzzy Skin Density", 
                    "minimum_value_warning": "=0.1", 
                    "enabled": "=magic_fuzzy_skin_enabled", 
                    "settable_per_mesh": "True", 
                    "description": "The average density of points introduced on each polygon in a layer. Note that the original points of the polygon are discarded, so a low density results in a reduction of the resolution."
                }, 
                "draft_shield_height": {
                    "minimum_value": "=0", 
                    "maximum_value_warning": "=9999", 
                    "value": "=10", 
                    "settable_per_extruder": "False", 
                    "unit": "mm", 
                    "children": {}, 
                    "default_value": "10", 
                    "label": "Draft Shield Height", 
                    "enabled": "=draft_shield_enabled and draft_shield_height_limitation == 'limited'", 
                    "settable_per_mesh": "False", 
                    "type": "float", 
                    "description": "Height limitation of the draft shield. Above this height no draft shield will be printed."
                }, 
                "wireframe_flow": {
                    "settable_per_meshgroup": "False", 
                    "maximum_value_warning": "=100", 
                    "minimum_value": "=0", 
                    "settable_per_extruder": "False", 
                    "unit": "%", 
                    "children": {
                        "wireframe_flow_connection": {
                            "settable_per_meshgroup": "False", 
                            "unit": "%", 
                            "maximum_value_warning": "=100", 
                            "value": "=wireframe_flow", 
                            "settable_per_extruder": "False", 
                            "minimum_value": "=0", 
                            "children": {}, 
                            "default_value": "100", 
                            "label": "WP Connection Flow", 
                            "enabled": "=wireframe_enabled", 
                            "settable_per_mesh": "False", 
                            "type": "float", 
                            "description": "Flow compensation when going up or down. Only applies to Wire Printing."
                        }, 
                        "wireframe_flow_flat": {
                            "settable_per_meshgroup": "False", 
                            "unit": "%", 
                            "maximum_value_warning": "=100", 
                            "value": "=wireframe_flow", 
                            "settable_per_extruder": "False", 
                            "minimum_value": "=0", 
                            "children": {}, 
                            "default_value": "100", 
                            "label": "WP Flat Flow", 
                            "enabled": "=wireframe_enabled", 
                            "settable_per_mesh": "False", 
                            "type": "float", 
                            "description": "Flow compensation when printing flat lines. Only applies to Wire Printing."
                        }
                    }, 
                    "default_value": "100", 
                    "label": "WP Flow", 
                    "enabled": "=wireframe_enabled", 
                    "settable_per_mesh": "False", 
                    "type": "float", 
                    "description": "Flow compensation: the amount of material extruded is multiplied by this value. Only applies to Wire Printing."
                }, 
                "flow_rate_extrusion_offset_factor": {
                    "settable_per_meshgroup": "False", 
                    "unit": "%", 
                    "maximum_value_warning": "=100", 
                    "value": "=100", 
                    "settable_per_extruder": "False", 
                    "minimum_value": "=0", 
                    "children": {}, 
                    "default_value": "100", 
                    "label": "Flow rate compensation factor", 
                    "enabled": "=True", 
                    "settable_per_mesh": "False", 
                    "type": "float", 
                    "description": "The multiplication factor for the flow rate -> distance translation."
                }, 
                "spaghetti_inset": {
                    "children": {}, 
                    "default_value": "0.2", 
                    "limit_to_extruder": "=infill_extruder_nr", 
                    "label": "Spaghetti Inset", 
                    "maximum_value_warning": "=5.0", 
                    "minimum_value_warning": "=0", 
                    "enabled": "=infill_sparse_density > 0 and spaghetti_infill_enabled", 
                    "settable_per_mesh": "True", 
                    "unit": "mm", 
                    "type": "float", 
                    "description": "The offset from the walls from where the spaghetti infill will be printed."
                }, 
                "wireframe_top_delay": {
                    "settable_per_meshgroup": "False", 
                    "maximum_value_warning": "=1", 
                    "minimum_value": "=0", 
                    "settable_per_extruder": "False", 
                    "unit": "s", 
                    "children": {}, 
                    "default_value": "0", 
                    "label": "WP Top Delay", 
                    "enabled": "=wireframe_enabled", 
                    "settable_per_mesh": "False", 
                    "type": "float", 
                    "description": "Delay time after an upward move, so that the upward line can harden. Only applies to Wire Printing."
                }, 
                "bridge_skin_support_threshold": {
                    "children": {}, 
                    "default_value": "50", 
                    "unit": "%", 
                    "label": "Bridge Skin Support Threshold", 
                    "maximum_value": "=100", 
                    "enabled": "=bridge_settings_enabled", 
                    "settable_per_mesh": "True", 
                    "minimum_value": "=0", 
                    "type": "float", 
                    "description": "If a skin region is supported for less than this percentage of its area, print it using the bridge settings. Otherwise it is printed using the normal skin settings."
                }, 
                "conical_overhang_angle": {
                    "unit": "\u00b0", 
                    "default_value": "50", 
                    "label": "Maximum Model Angle", 
                    "maximum_value": "=89", 
                    "minimum_value_warning": "=0", 
                    "minimum_value": "=-89", 
                    "type": "float", 
                    "enabled": "=conical_overhang_enabled", 
                    "children": {}, 
                    "description": "The maximum angle of overhangs after the they have been made printable. At a value of 0\u00b0 all overhangs are replaced by a piece of model connected to the build plate, 90\u00b0 will not change the model in any way."
                }, 
                "bridge_skin_speed": {
                    "minimum_value": "=cool_min_speed", 
                    "maximum_value_warning": "=300", 
                    "maximum_value": "=math.sqrt(machine_max_feedrate_x ** 2 + machine_max_feedrate_y ** 2)", 
                    "value": "=max(cool_min_speed, speed_topbottom / 2)", 
                    "unit": "mm/s", 
                    "children": {}, 
                    "default_value": "15", 
                    "label": "Bridge Skin Speed", 
                    "enabled": "=bridge_settings_enabled", 
                    "settable_per_mesh": "True", 
                    "type": "float", 
                    "description": "The speed at which bridge skin regions are printed."
                }, 
                "skin_alternate_rotation": {
                    "children": {}, 
                    "default_value": "False", 
                    "limit_to_extruder": "=top_bottom_extruder_nr", 
                    "label": "Alternate Skin Rotation", 
                    "enabled": "=top_bottom_pattern != 'concentric'", 
                    "settable_per_mesh": "True", 
                    "type": "bool", 
                    "description": "Alternate the direction in which the top/bottom layers are printed. Normally they are printed diagonally only. This setting adds the X-only and Y-only directions."
                }, 
                "adaptive_layer_height_enabled": {
                    "children": {}, 
                    "default_value": "False", 
                    "label": "Use adaptive layers", 
                    "settable_per_meshgroup": "False", 
                    "type": "bool", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "False", 
                    "description": "Adaptive layers computes the layer heights depending on the shape of the model."
                }, 
                "coasting_speed": {
                    "children": {}, 
                    "default_value": "90", 
                    "unit": "%", 
                    "label": "Coasting Speed", 
                    "maximum_value_warning": "=100", 
                    "enabled": "=coasting_enable", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "True", 
                    "minimum_value": "=0.0001", 
                    "type": "float", 
                    "description": "The speed by which to move during coasting, relative to the speed of the extrusion path. A value slightly under 100% is advised, since during the coasting move the pressure in the bowden tube drops."
                }, 
                "bridge_wall_max_overhang": {
                    "children": {}, 
                    "default_value": "100", 
                    "unit": "%", 
                    "label": "Bridge Wall Max Overhang", 
                    "maximum_value": "=100", 
                    "enabled": "=bridge_settings_enabled", 
                    "settable_per_mesh": "True", 
                    "minimum_value": "=0", 
                    "type": "float", 
                    "description": "The maximum allowed width of the region of air below a wall line before the wall is printed using bridge settings. Expressed as a percentage of the wall line width. When the air gap is wider than this, the wall line is printed using the bridge settings. Otherwise, the wall line is printed using the normal settings. The lower the value, the more likely it is that overhung wall lines will be printed using bridge settings."
                }, 
                "draft_shield_enabled": {
                    "children": {}, 
                    "default_value": "False", 
                    "label": "Enable Draft Shield", 
                    "type": "bool", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "False", 
                    "description": "This will create a wall around the model, which traps (hot) air and shields against exterior airflow. Especially useful for materials which warp easily."
                }, 
                "slicing_tolerance": {
                    "children": {}, 
                    "default_value": "middle", 
                    "label": "Slicing Tolerance", 
                    "type": "enum", 
                    "settable_per_mesh": "True", 
                    "options": "OrderedDict([('middle', 'Middle'), ('exclusive', 'Exclusive'), ('inclusive', 'Inclusive')])", 
                    "description": "How to slice layers with diagonal surfaces. The areas of a layer can be generated based on where the middle of the layer intersects the surface (Middle). Alternatively each layer can have the areas which fall inside of the volume throughout the height of the layer (Exclusive) or a layer has the areas which fall inside anywhere within the layer (Inclusive). Exclusive retains the most details, Inclusive makes for the best fit and Middle takes the least time to process."
                }, 
                "support_tree_branch_diameter_angle": {
                    "limit_to_extruder": "=support_infill_extruder_nr", 
                    "maximum_value_warning": "=15", 
                    "maximum_value": "=89.9999", 
                    "unit": "\u00b0", 
                    "type": "float", 
                    "settable_per_extruder": "True", 
                    "minimum_value": "=0", 
                    "children": {}, 
                    "default_value": "5", 
                    "label": "Tree Support Branch Diameter Angle", 
                    "enabled": "=support_tree_enable", 
                    "settable_per_mesh": "False", 
                    "description": "The angle of the branches' diameter as they gradually become thicker towards the bottom. An angle of 0 will cause the branches to have uniform thickness over their length. A bit of an angle can increase stability of the tree support."
                }, 
                "material_flow_temp_graph": {
                    "children": {}, 
                    "default_value": "[[3.5,200],[7.0,240]]", 
                    "label": "Flow Temperature Graph", 
                    "enabled": "=False and machine_nozzle_temp_enabled and material_flow_dependent_temperature", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "True", 
                    "unit": "[[mm\u00b3,\u00b0C]]", 
                    "type": "str", 
                    "description": "Data linking material flow (in mm3 per second) to temperature (degrees Celsius)."
                }, 
                "adaptive_layer_height_variation": {
                    "children": {}, 
                    "default_value": "0.1", 
                    "label": "Adaptive layers maximum variation", 
                    "settable_per_meshgroup": "False", 
                    "enabled": "=adaptive_layer_height_enabled", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "False", 
                    "unit": "mm", 
                    "type": "float", 
                    "description": "The maximum allowed height different from the base layer height."
                }, 
                "coasting_enable": {
                    "children": {}, 
                    "default_value": "False", 
                    "label": "Enable Coasting", 
                    "type": "bool", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "True", 
                    "description": "Coasting replaces the last part of an extrusion path with a travel path. The oozed material is used to print the last piece of the extrusion path in order to reduce stringing."
                }, 
                "support_tree_enable": {
                    "children": {}, 
                    "default_value": "False", 
                    "label": "Tree Support", 
                    "type": "bool", 
                    "settable_per_mesh": "True", 
                    "settable_per_extruder": "False", 
                    "description": "Generate a tree-like support with branches that support your print. This may reduce material usage and print time, but greatly increases slicing time."
                }, 
                "bridge_skin_material_flow_2": {
                    "maximum_value_warning": "=150", 
                    "maximum_value": "=500", 
                    "minimum_value": "=5", 
                    "unit": "%", 
                    "children": {}, 
                    "default_value": "100", 
                    "label": "Bridge Second Skin Flow", 
                    "minimum_value_warning": "=50", 
                    "enabled": "=bridge_settings_enabled and bridge_enable_more_layers", 
                    "settable_per_mesh": "True", 
                    "type": "float", 
                    "description": "When printing the second bridge skin layer, the amount of material extruded is multiplied by this value."
                }, 
                "bridge_skin_density_2": {
                    "children": {}, 
                    "default_value": "75", 
                    "unit": "%", 
                    "label": "Bridge Second Skin Density", 
                    "maximum_value": "=100", 
                    "minimum_value_warning": "=20", 
                    "enabled": "=bridge_settings_enabled and bridge_enable_more_layers", 
                    "settable_per_mesh": "True", 
                    "minimum_value": "=5", 
                    "type": "float", 
                    "description": "The density of the second bridge skin layer. Values less than 100 will increase the gaps between the skin lines."
                }, 
                "bridge_skin_density_3": {
                    "children": {}, 
                    "default_value": "80", 
                    "unit": "%", 
                    "label": "Bridge Third Skin Density", 
                    "maximum_value": "=100", 
                    "minimum_value_warning": "=20", 
                    "enabled": "=bridge_settings_enabled and bridge_enable_more_layers", 
                    "settable_per_mesh": "True", 
                    "minimum_value": "=5", 
                    "type": "float", 
                    "description": "The density of the third bridge skin layer. Values less than 100 will increase the gaps between the skin lines."
                }, 
                "bridge_enable_more_layers": {
                    "children": {}, 
                    "default_value": "True", 
                    "label": "Bridge Has Multiple Layers", 
                    "enabled": "=bridge_settings_enabled", 
                    "settable_per_mesh": "True", 
                    "type": "bool", 
                    "description": "If enabled, the second and third layers above the air are printed using the following settings. Otherwise, those layers are printed using the normal settings."
                }, 
                "bridge_wall_material_flow": {
                    "children": {}, 
                    "default_value": "50", 
                    "unit": "%", 
                    "label": "Bridge Wall Flow", 
                    "maximum_value_warning": "=150", 
                    "minimum_value_warning": "=50", 
                    "enabled": "=bridge_settings_enabled", 
                    "settable_per_mesh": "True", 
                    "minimum_value": "=5", 
                    "type": "float", 
                    "description": "When printing bridge walls, the amount of material extruded is multiplied by this value."
                }, 
                "magic_fuzzy_skin_enabled": {
                    "children": {}, 
                    "default_value": "False", 
                    "limit_to_extruder": "=wall_0_extruder_nr", 
                    "label": "Fuzzy Skin", 
                    "type": "bool", 
                    "settable_per_mesh": "True", 
                    "description": "Randomly jitter while printing the outer wall, so that the surface has a rough and fuzzy look."
                }, 
                "wireframe_top_jump": {
                    "settable_per_meshgroup": "False", 
                    "maximum_value_warning": "=2.0", 
                    "minimum_value": "=0", 
                    "settable_per_extruder": "False", 
                    "unit": "mm", 
                    "children": {}, 
                    "default_value": "0.6", 
                    "label": "WP Knot Size", 
                    "enabled": "=wireframe_enabled", 
                    "settable_per_mesh": "False", 
                    "type": "float", 
                    "description": "Creates a small knot at the top of an upward line, so that the consecutive horizontal layer has a better chance to connect to it. Only applies to Wire Printing."
                }, 
                "wireframe_printspeed": {
                    "settable_per_meshgroup": "False", 
                    "unit": "mm/s", 
                    "maximum_value_warning": "=50", 
                    "maximum_value": "=math.sqrt(machine_max_feedrate_x ** 2 + machine_max_feedrate_y ** 2 + max(max_feedrate_z_override, machine_max_feedrate_z) ** 2)", 
                    "type": "float", 
                    "settable_per_extruder": "False", 
                    "minimum_value": "=0.1", 
                    "children": {
                        "wireframe_printspeed_up": {
                            "settable_per_meshgroup": "False", 
                            "unit": "mm/s", 
                            "maximum_value_warning": "=50", 
                            "maximum_value": "=math.sqrt(machine_max_feedrate_x ** 2 + machine_max_feedrate_y ** 2 + max(max_feedrate_z_override, machine_max_feedrate_z) ** 2)", 
                            "value": "=wireframe_printspeed", 
                            "settable_per_extruder": "False", 
                            "minimum_value": "=0.1", 
                            "children": {}, 
                            "default_value": "5", 
                            "label": "WP Upward Printing Speed", 
                            "enabled": "=wireframe_enabled", 
                            "settable_per_mesh": "False", 
                            "type": "float", 
                            "description": "Speed of printing a line upward 'in thin air'. Only applies to Wire Printing."
                        }, 
                        "wireframe_printspeed_bottom": {
                            "settable_per_meshgroup": "False", 
                            "unit": "mm/s", 
                            "maximum_value_warning": "=50", 
                            "maximum_value": "=math.sqrt(machine_max_feedrate_x ** 2 + machine_max_feedrate_y ** 2)", 
                            "value": "=wireframe_printspeed", 
                            "settable_per_extruder": "False", 
                            "minimum_value": "=0.1", 
                            "children": {}, 
                            "default_value": "5", 
                            "label": "WP Bottom Printing Speed", 
                            "enabled": "=wireframe_enabled", 
                            "settable_per_mesh": "False", 
                            "type": "float", 
                            "description": "Speed of printing the first layer, which is the only layer touching the build platform. Only applies to Wire Printing."
                        }, 
                        "wireframe_printspeed_down": {
                            "settable_per_meshgroup": "False", 
                            "unit": "mm/s", 
                            "maximum_value_warning": "=50", 
                            "maximum_value": "=math.sqrt(machine_max_feedrate_x ** 2 + machine_max_feedrate_y ** 2 + max(max_feedrate_z_override, machine_max_feedrate_z) ** 2)", 
                            "value": "=wireframe_printspeed", 
                            "settable_per_extruder": "False", 
                            "minimum_value": "=0.1", 
                            "children": {}, 
                            "default_value": "5", 
                            "label": "WP Downward Printing Speed", 
                            "enabled": "=wireframe_enabled", 
                            "settable_per_mesh": "False", 
                            "type": "float", 
                            "description": "Speed of printing a line diagonally downward. Only applies to Wire Printing."
                        }, 
                        "wireframe_printspeed_flat": {
                            "settable_per_meshgroup": "False", 
                            "unit": "mm/s", 
                            "maximum_value_warning": "=100", 
                            "maximum_value": "=math.sqrt(machine_max_feedrate_x ** 2 + machine_max_feedrate_y ** 2)", 
                            "value": "=wireframe_printspeed", 
                            "settable_per_extruder": "False", 
                            "minimum_value": "=0.1", 
                            "children": {}, 
                            "default_value": "5", 
                            "label": "WP Horizontal Printing Speed", 
                            "enabled": "=wireframe_enabled", 
                            "settable_per_mesh": "False", 
                            "type": "float", 
                            "description": "Speed of printing the horizontal contours of the model. Only applies to Wire Printing."
                        }
                    }, 
                    "default_value": "5", 
                    "label": "WP Speed", 
                    "enabled": "=wireframe_enabled", 
                    "settable_per_mesh": "False", 
                    "description": "Speed at which the nozzle moves when extruding material. Only applies to Wire Printing."
                }, 
                "wireframe_enabled": {
                    "children": {}, 
                    "default_value": "False", 
                    "label": "Wire Printing", 
                    "settable_per_meshgroup": "False", 
                    "type": "bool", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "False", 
                    "description": "Print only the outside surface with a sparse webbed structure, printing 'in thin air'. This is realized by horizontally printing the contours of the model at given Z intervals which are connected via upward and diagonally downward lines."
                }, 
                "adaptive_layer_height_variation_step": {
                    "children": {}, 
                    "default_value": "0.01", 
                    "label": "Adaptive layers variation step size", 
                    "settable_per_meshgroup": "False", 
                    "enabled": "=adaptive_layer_height_enabled", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "False", 
                    "unit": "mm", 
                    "type": "float", 
                    "description": "The difference in height of the next layer height compared to the previous one."
                }, 
                "wireframe_straight_before_down": {
                    "settable_per_meshgroup": "False", 
                    "maximum_value": "=100", 
                    "minimum_value": "=0", 
                    "settable_per_extruder": "False", 
                    "unit": "%", 
                    "children": {}, 
                    "default_value": "20", 
                    "label": "WP Straighten Downward Lines", 
                    "enabled": "=wireframe_enabled", 
                    "settable_per_mesh": "False", 
                    "type": "float", 
                    "description": "Percentage of a diagonally downward line which is covered by a horizontal line piece. This can prevent sagging of the top most point of upward lines. Only applies to Wire Printing."
                }, 
                "adaptive_layer_height_threshold": {
                    "children": {}, 
                    "default_value": "200.0", 
                    "label": "Adaptive layers threshold", 
                    "settable_per_meshgroup": "False", 
                    "enabled": "=adaptive_layer_height_enabled", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "False", 
                    "type": "float", 
                    "description": "Threshold whether to use a smaller layer or not. This number is compared to the tan of the steepest slope in a layer."
                }, 
                "spaghetti_infill_stepped": {
                    "children": {}, 
                    "default_value": "True", 
                    "limit_to_extruder": "=infill_extruder_nr", 
                    "label": "Spaghetti Infill Stepping", 
                    "enabled": "=infill_sparse_density > 0 and spaghetti_infill_enabled", 
                    "settable_per_mesh": "True", 
                    "type": "bool", 
                    "description": "Whether to print spaghetti infill in steps or extrude all the infill filament at the end of the print."
                }, 
                "wireframe_flat_delay": {
                    "settable_per_meshgroup": "False", 
                    "maximum_value_warning": "=0.5", 
                    "minimum_value": "=0", 
                    "settable_per_extruder": "False", 
                    "unit": "s", 
                    "children": {}, 
                    "default_value": "0.1", 
                    "label": "WP Flat Delay", 
                    "enabled": "=wireframe_enabled", 
                    "settable_per_mesh": "False", 
                    "type": "float", 
                    "description": "Delay time between two horizontal segments. Introducing such a delay can cause better adhesion to previous layers at the connection points, while too long delays cause sagging. Only applies to Wire Printing."
                }, 
                "cross_infill_pocket_size": {
                    "limit_to_extruder": "=infill_extruder_nr", 
                    "maximum_value_warning": "=infill_line_distance * math.sqrt(2)", 
                    "value": "=infill_line_distance", 
                    "unit": "mm", 
                    "children": {}, 
                    "default_value": "2.0", 
                    "label": "Cross 3D Pocket Size", 
                    "minimum_value": "=0", 
                    "enabled": "=infill_pattern == 'cross_3d'", 
                    "settable_per_mesh": "True", 
                    "type": "float", 
                    "description": "The size of pockets at four-way crossings in the cross 3D pattern at heights where the pattern is touching itself."
                }, 
                "bridge_wall_speed": {
                    "minimum_value": "=cool_min_speed", 
                    "maximum_value_warning": "=300", 
                    "maximum_value": "=math.sqrt(machine_max_feedrate_x ** 2 + machine_max_feedrate_y ** 2)", 
                    "value": "=max(cool_min_speed, speed_wall_0 / 2)", 
                    "unit": "mm/s", 
                    "children": {}, 
                    "default_value": "15", 
                    "label": "Bridge Wall Speed", 
                    "enabled": "=bridge_settings_enabled", 
                    "settable_per_mesh": "True", 
                    "type": "float", 
                    "description": "The speed at which the bridge walls are printed."
                }, 
                "magic_fuzzy_skin_thickness": {
                    "children": {}, 
                    "default_value": "0.3", 
                    "limit_to_extruder": "=wall_0_extruder_nr", 
                    "label": "Fuzzy Skin Thickness", 
                    "maximum_value_warning": "=wall_line_width_0", 
                    "unit": "mm", 
                    "enabled": "=magic_fuzzy_skin_enabled", 
                    "settable_per_mesh": "True", 
                    "minimum_value": "=0.001", 
                    "type": "float", 
                    "description": "The width within which to jitter. It's advised to keep this below the outer wall width, since the inner walls are unaltered."
                }
            }, 
            "type": "category", 
            "label": "Experimental", 
            "description": "experimental!"
        }, 
        "support": {
            "icon": "category_support", 
            "children": {
                "support_use_towers": {
                    "children": {}, 
                    "default_value": "True", 
                    "limit_to_extruder": "=support_infill_extruder_nr", 
                    "label": "Use Towers", 
                    "enabled": "=support_enable", 
                    "settable_per_mesh": "True", 
                    "type": "bool", 
                    "description": "Use specialized towers to support tiny overhang areas. These towers have a larger diameter than the region they support. Near the overhang the towers' diameter decreases, forming a roof."
                }, 
                "support_xy_distance": {
                    "children": {}, 
                    "default_value": "0.7", 
                    "limit_to_extruder": "=support_infill_extruder_nr", 
                    "label": "Support X/Y Distance", 
                    "maximum_value_warning": "=1.5 * machine_nozzle_tip_outer_diameter", 
                    "unit": "mm", 
                    "enabled": "=support_enable or support_tree_enable", 
                    "settable_per_mesh": "True", 
                    "minimum_value": "=0", 
                    "type": "float", 
                    "description": "Distance of the support structure from the print in the X/Y directions."
                }, 
                "support_infill_sparse_thickness": {
                    "limit_to_extruder": "=support_infill_extruder_nr", 
                    "maximum_value_warning": "=0.75 * machine_nozzle_size", 
                    "maximum_value": "=resolveOrValue('layer_height') * 8", 
                    "unit": "mm", 
                    "value": "=resolveOrValue('layer_height')", 
                    "minimum_value": "=resolveOrValue('layer_height')", 
                    "children": {}, 
                    "default_value": "0.1", 
                    "label": "Support Infill Layer Thickness", 
                    "enabled": "=(support_enable or support_tree_enable) and support_infill_rate > 0", 
                    "settable_per_mesh": "False", 
                    "type": "float", 
                    "description": "The thickness per layer of support infill material. This value should always be a multiple of the layer height and is otherwise rounded."
                }, 
                "support_extruder_nr": {
                    "children": {
                        "support_extruder_nr_layer_0": {
                            "children": {}, 
                            "default_value": "0", 
                            "label": "First Layer Support Extruder", 
                            "value": "=support_extruder_nr", 
                            "settable_per_mesh": "False", 
                            "settable_per_extruder": "False", 
                            "enabled": "=(support_enable or support_tree_enable) and extruders_enabled_count > 1", 
                            "type": "extruder", 
                            "description": "The extruder train to use for printing the first layer of support infill. This is used in multi-extrusion."
                        }, 
                        "support_infill_extruder_nr": {
                            "children": {}, 
                            "default_value": "0", 
                            "label": "Support Infill Extruder", 
                            "value": "=support_extruder_nr", 
                            "settable_per_mesh": "False", 
                            "settable_per_extruder": "False", 
                            "enabled": "=(support_enable or support_tree_enable) and extruders_enabled_count > 1", 
                            "type": "extruder", 
                            "description": "The extruder train to use for printing the infill of the support. This is used in multi-extrusion."
                        }, 
                        "support_interface_extruder_nr": {
                            "children": {
                                "support_roof_extruder_nr": {
                                    "children": {}, 
                                    "default_value": "0", 
                                    "label": "Support Roof Extruder", 
                                    "value": "=support_interface_extruder_nr", 
                                    "settable_per_mesh": "False", 
                                    "settable_per_extruder": "False", 
                                    "enabled": "=(support_enable or support_tree_enable) and extruders_enabled_count > 1", 
                                    "type": "extruder", 
                                    "description": "The extruder train to use for printing the roofs of the support. This is used in multi-extrusion."
                                }, 
                                "support_bottom_extruder_nr": {
                                    "children": {}, 
                                    "default_value": "0", 
                                    "label": "Support Floor Extruder", 
                                    "value": "=support_interface_extruder_nr", 
                                    "settable_per_mesh": "False", 
                                    "settable_per_extruder": "False", 
                                    "enabled": "=(support_enable or support_tree_enable) and extruders_enabled_count > 1", 
                                    "type": "extruder", 
                                    "description": "The extruder train to use for printing the floors of the support. This is used in multi-extrusion."
                                }
                            }, 
                            "default_value": "0", 
                            "label": "Support Interface Extruder", 
                            "value": "=support_extruder_nr", 
                            "settable_per_mesh": "False", 
                            "settable_per_extruder": "False", 
                            "enabled": "=(support_enable or support_tree_enable) and extruders_enabled_count > 1", 
                            "type": "extruder", 
                            "description": "The extruder train to use for printing the roofs and floors of the support. This is used in multi-extrusion."
                        }
                    }, 
                    "default_value": "0", 
                    "label": "Support Extruder", 
                    "value": "=defaultExtruderPosition()", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "False", 
                    "enabled": "=(support_enable or support_tree_enable) and extruders_enabled_count > 1", 
                    "type": "extruder", 
                    "description": "The extruder train to use for printing the support. This is used in multi-extrusion."
                }, 
                "support_mesh_drop_down": {
                    "children": {}, 
                    "default_value": "True", 
                    "settable_globally": "False", 
                    "label": "Drop Down Support Mesh", 
                    "settable_per_meshgroup": "False", 
                    "enabled": "=support_mesh", 
                    "settable_per_mesh": "True", 
                    "settable_per_extruder": "False", 
                    "type": "bool", 
                    "description": "Make support everywhere below the support mesh, so that there's no overhang in the support mesh."
                }, 
                "support_enable": {
                    "children": {}, 
                    "default_value": "False", 
                    "label": "Generate Support", 
                    "type": "bool", 
                    "settable_per_mesh": "True", 
                    "settable_per_extruder": "False", 
                    "description": "Generate structures to support parts of the model which have overhangs. Without these structures, such parts would collapse during printing."
                }, 
                "support_type": {
                    "children": {}, 
                    "default_value": "everywhere", 
                    "description": "Adjusts the placement of the support structures. The placement can be set to touching build plate or everywhere. When set to everywhere the support structures will also be printed on the model.", 
                    "resolve": "='everywhere' if 'everywhere' in extruderValues('support_type') else 'buildplate'", 
                    "enabled": "=support_enable or support_tree_enable", 
                    "settable_per_mesh": "False", 
                    "options": "OrderedDict([('buildplate', 'Touching Buildplate'), ('everywhere', 'Everywhere')])", 
                    "settable_per_extruder": "False", 
                    "type": "enum", 
                    "label": "Support Placement"
                }, 
                "support_tower_diameter": {
                    "limit_to_extruder": "=support_infill_extruder_nr", 
                    "maximum_value_warning": "=20", 
                    "minimum_value": "=0", 
                    "unit": "mm", 
                    "children": {}, 
                    "default_value": "3.0", 
                    "label": "Tower Diameter", 
                    "minimum_value_warning": "=2 * machine_nozzle_size", 
                    "enabled": "=support_enable and support_use_towers", 
                    "settable_per_mesh": "True", 
                    "type": "float", 
                    "description": "The diameter of a special tower."
                }, 
                "support_interface_pattern": {
                    "children": {
                        "support_roof_pattern": {
                            "children": {}, 
                            "default_value": "concentric", 
                            "limit_to_extruder": "=support_roof_extruder_nr", 
                            "label": "Support Roof Pattern", 
                            "settable_per_extruder": "True", 
                            "value": "=extruderValue(support_roof_extruder_nr, 'support_interface_pattern')", 
                            "settable_per_mesh": "False", 
                            "options": "OrderedDict([('lines', 'Lines'), ('grid', 'Grid'), ('triangles', 'Triangles'), ('concentric', 'Concentric'), ('concentric_3d', 'Concentric 3D'), ('zigzag', 'Zig Zag')])", 
                            "enabled": "=support_roof_enable and (support_enable or support_tree_enable)", 
                            "type": "enum", 
                            "description": "The pattern with which the roofs of the support are printed."
                        }, 
                        "support_bottom_pattern": {
                            "children": {}, 
                            "default_value": "concentric", 
                            "limit_to_extruder": "=support_bottom_extruder_nr", 
                            "label": "Support Floor Pattern", 
                            "settable_per_extruder": "True", 
                            "value": "=extruderValue(support_bottom_extruder_nr, 'support_interface_pattern')", 
                            "settable_per_mesh": "False", 
                            "options": "OrderedDict([('lines', 'Lines'), ('grid', 'Grid'), ('triangles', 'Triangles'), ('concentric', 'Concentric'), ('concentric_3d', 'Concentric 3D'), ('zigzag', 'Zig Zag')])", 
                            "enabled": "=support_bottom_enable and (support_enable or support_tree_enable)", 
                            "type": "enum", 
                            "description": "The pattern with which the floors of the support are printed."
                        }
                    }, 
                    "default_value": "concentric", 
                    "limit_to_extruder": "=support_interface_extruder_nr", 
                    "label": "Support Interface Pattern", 
                    "settable_per_extruder": "True", 
                    "enabled": "=support_interface_enable and (support_enable or support_tree_enable)", 
                    "settable_per_mesh": "False", 
                    "options": "OrderedDict([('lines', 'Lines'), ('grid', 'Grid'), ('triangles', 'Triangles'), ('concentric', 'Concentric'), ('concentric_3d', 'Concentric 3D'), ('zigzag', 'Zig Zag')])", 
                    "type": "enum", 
                    "description": "The pattern with which the interface of the support with the model is printed."
                }, 
                "support_z_distance": {
                    "children": {
                        "support_bottom_distance": {
                            "limit_to_extruder": "=support_bottom_extruder_nr if support_bottom_enable else support_infill_extruder_nr", 
                            "maximum_value_warning": "=machine_nozzle_size", 
                            "value": "=extruderValue(support_bottom_extruder_nr if support_bottom_enable else support_infill_extruder_nr, 'support_z_distance') if support_type == 'everywhere' else 0", 
                            "unit": "mm", 
                            "children": {}, 
                            "default_value": "0.1", 
                            "label": "Support Bottom Distance", 
                            "minimum_value": "=0", 
                            "enabled": "=(support_enable or support_tree_enable) and resolveOrValue('support_type') == 'everywhere'", 
                            "settable_per_mesh": "True", 
                            "type": "float", 
                            "description": "Distance from the print to the bottom of the support."
                        }, 
                        "support_top_distance": {
                            "limit_to_extruder": "=support_roof_extruder_nr if support_roof_enable else support_infill_extruder_nr", 
                            "maximum_value_warning": "=machine_nozzle_size", 
                            "value": "=extruderValue(support_roof_extruder_nr if support_roof_enable else support_infill_extruder_nr, 'support_z_distance')", 
                            "unit": "mm", 
                            "children": {}, 
                            "default_value": "0.1", 
                            "label": "Support Top Distance", 
                            "minimum_value": "=0", 
                            "enabled": "=support_enable or support_tree_enable", 
                            "settable_per_mesh": "True", 
                            "type": "float", 
                            "description": "Distance from the top of the support to the print."
                        }
                    }, 
                    "default_value": "0.1", 
                    "limit_to_extruder": "=support_interface_extruder_nr if support_interface_enable else support_infill_extruder_nr", 
                    "label": "Support Z Distance", 
                    "maximum_value_warning": "=machine_nozzle_size", 
                    "unit": "mm", 
                    "enabled": "=support_enable or support_tree_enable", 
                    "settable_per_mesh": "True", 
                    "minimum_value": "=0", 
                    "type": "float", 
                    "description": "Distance from the top/bottom of the support structure to the print. This gap provides clearance to remove the supports after the model is printed. This value is rounded up to a multiple of the layer height."
                }, 
                "support_angle": {
                    "limit_to_extruder": "=support_roof_extruder_nr if support_roof_enable else support_infill_extruder_nr", 
                    "maximum_value_warning": "=80", 
                    "maximum_value": "=90", 
                    "minimum_value": "=0", 
                    "unit": "\u00b0", 
                    "children": {}, 
                    "default_value": "50", 
                    "label": "Support Overhang Angle", 
                    "enabled": "=support_enable or support_tree_enable", 
                    "settable_per_mesh": "True", 
                    "type": "float", 
                    "description": "The minimum angle of overhangs for which support is added. At a value of 0\u00b0 all overhangs are supported, 90\u00b0 will not provide any support."
                }, 
                "support_pattern": {
                    "children": {}, 
                    "default_value": "zigzag", 
                    "limit_to_extruder": "=support_infill_extruder_nr", 
                    "label": "Support Pattern", 
                    "settable_per_extruder": "True", 
                    "enabled": "=support_enable or support_tree_enable", 
                    "settable_per_mesh": "False", 
                    "options": "OrderedDict([('lines', 'Lines'), ('grid', 'Grid'), ('triangles', 'Triangles'), ('concentric', 'Concentric'), ('concentric_3d', 'Concentric 3D'), ('zigzag', 'Zig Zag'), ('cross', 'Cross')])", 
                    "type": "enum", 
                    "description": "The pattern of the support structures of the print. The different options available result in sturdy or easy to remove support."
                }, 
                "gradual_support_infill_step_height": {
                    "children": {}, 
                    "default_value": "1", 
                    "limit_to_extruder": "=support_infill_extruder_nr", 
                    "label": "Gradual Support Infill Step Height", 
                    "unit": "mm", 
                    "minimum_value_warning": "=3 * resolveOrValue('layer_height')", 
                    "enabled": "=(support_enable or support_tree_enable) and support_infill_rate > 0 and gradual_support_infill_steps > 0", 
                    "settable_per_mesh": "False", 
                    "minimum_value": "=0.0001", 
                    "type": "float", 
                    "description": "The height of support infill of a given density before switching to half the density."
                }, 
                "support_tower_roof_angle": {
                    "children": {}, 
                    "default_value": "65", 
                    "limit_to_extruder": "=support_infill_extruder_nr", 
                    "label": "Tower Roof Angle", 
                    "maximum_value": "=90", 
                    "unit": "\u00b0", 
                    "enabled": "=support_enable and support_use_towers", 
                    "settable_per_mesh": "True", 
                    "minimum_value": "=0", 
                    "type": "int", 
                    "description": "The angle of a rooftop of a tower. A higher value results in pointed tower roofs, a lower value results in flattened tower roofs."
                }, 
                "support_bottom_stair_step_height": {
                    "children": {}, 
                    "default_value": "0.3", 
                    "limit_to_extruder": "=support_bottom_extruder_nr if support_bottom_enable else support_infill_extruder_nr", 
                    "label": "Support Stair Step Height", 
                    "maximum_value_warning": "=1.0", 
                    "unit": "mm", 
                    "enabled": "=support_enable", 
                    "settable_per_mesh": "True", 
                    "minimum_value": "=0", 
                    "type": "float", 
                    "description": "The height of the steps of the stair-like bottom of support resting on the model. A low value makes the support harder to remove, but too high values can lead to unstable support structures. Set to zero to turn off the stair-like behaviour."
                }, 
                "support_xy_overrides_z": {
                    "children": {}, 
                    "default_value": "z_overrides_xy", 
                    "limit_to_extruder": "=support_infill_extruder_nr", 
                    "label": "Support Distance Priority", 
                    "enabled": "=support_enable", 
                    "settable_per_mesh": "True", 
                    "options": "OrderedDict([('xy_overrides_z', 'X/Y overrides Z'), ('z_overrides_xy', 'Z overrides X/Y')])", 
                    "type": "enum", 
                    "description": "Whether the Support X/Y Distance overrides the Support Z Distance or vice versa. When X/Y overrides Z the X/Y distance can push away the support from the model, influencing the actual Z distance to the overhang. We can disable this by not applying the X/Y distance around overhangs."
                }, 
                "support_offset": {
                    "children": {}, 
                    "default_value": "0.2", 
                    "limit_to_extruder": "=support_infill_extruder_nr", 
                    "label": "Support Horizontal Expansion", 
                    "maximum_value_warning": "=10 * machine_nozzle_size", 
                    "minimum_value_warning": "=-1 * machine_nozzle_size", 
                    "enabled": "=support_enable", 
                    "settable_per_mesh": "True", 
                    "unit": "mm", 
                    "type": "float", 
                    "description": "Amount of offset applied to all support polygons in each layer. Positive values can smooth out the support areas and result in more sturdy support."
                }, 
                "gradual_support_infill_steps": {
                    "children": {}, 
                    "default_value": "0", 
                    "limit_to_extruder": "=support_infill_extruder_nr", 
                    "label": "Gradual Support Infill Steps", 
                    "maximum_value_warning": "=1 if (support_pattern == 'cross' or support_pattern == 'lines' or support_pattern == 'zigzag' or support_pattern == 'concentric' or support_pattern == 'concentric_3d') else 5", 
                    "maximum_value": "=999999 if support_line_distance == 0 else (20 - math.log(support_line_distance) / math.log(2))", 
                    "enabled": "=(support_enable or support_tree_enable) and support_infill_rate > 0", 
                    "settable_per_mesh": "False", 
                    "minimum_value": "=0", 
                    "type": "int", 
                    "description": "Number of times to reduce the support infill density by half when getting further below top surfaces. Areas which are closer to top surfaces get a higher density, up to the Support Infill Density."
                }, 
                "support_interface_density": {
                    "limit_to_extruder": "=support_interface_extruder_nr", 
                    "maximum_value_warning": "=100", 
                    "minimum_value": "=0", 
                    "settable_per_extruder": "True", 
                    "unit": "%", 
                    "children": {
                        "support_bottom_density": {
                            "limit_to_extruder": "=support_bottom_extruder_nr", 
                            "maximum_value": "=100", 
                            "unit": "%", 
                            "value": "=extruderValue(support_bottom_extruder_nr, 'support_interface_density')", 
                            "settable_per_extruder": "True", 
                            "minimum_value": "=0", 
                            "children": {
                                "support_bottom_line_distance": {
                                    "limit_to_extruder": "=support_bottom_extruder_nr", 
                                    "unit": "mm", 
                                    "value": "=0 if support_bottom_density == 0 else (support_bottom_line_width * 100) / support_bottom_density * (2 if support_bottom_pattern == 'grid' else (3 if support_bottom_pattern == 'triangles' else 1))", 
                                    "settable_per_extruder": "True", 
                                    "minimum_value": "=0", 
                                    "children": {}, 
                                    "default_value": "0.4", 
                                    "label": "Support Floor Line Distance", 
                                    "minimum_value_warning": "=support_bottom_line_width - 0.0001", 
                                    "enabled": "=support_bottom_enable and (support_enable or support_tree_enable)", 
                                    "settable_per_mesh": "False", 
                                    "type": "float", 
                                    "description": "Distance between the printed support floor lines. This setting is calculated by the Support Floor Density, but can be adjusted separately."
                                }
                            }, 
                            "default_value": "100", 
                            "label": "Support Floor Density", 
                            "enabled": "=support_bottom_enable and (support_enable or support_tree_enable)", 
                            "settable_per_mesh": "False", 
                            "type": "float", 
                            "description": "The density of the floors of the support structure. A higher value results in better adhesion of the support on top of the model."
                        }, 
                        "support_roof_density": {
                            "limit_to_extruder": "=support_roof_extruder_nr", 
                            "maximum_value": "=100", 
                            "unit": "%", 
                            "value": "=extruderValue(support_roof_extruder_nr, 'support_interface_density')", 
                            "settable_per_extruder": "True", 
                            "minimum_value": "=0", 
                            "children": {
                                "support_roof_line_distance": {
                                    "limit_to_extruder": "=support_roof_extruder_nr", 
                                    "unit": "mm", 
                                    "value": "=0 if support_roof_density == 0 else (support_roof_line_width * 100) / support_roof_density * (2 if support_roof_pattern == 'grid' else (3 if support_roof_pattern == 'triangles' else 1))", 
                                    "settable_per_extruder": "True", 
                                    "minimum_value": "=0", 
                                    "children": {}, 
                                    "default_value": "0.4", 
                                    "label": "Support Roof Line Distance", 
                                    "minimum_value_warning": "=support_roof_line_width - 0.0001", 
                                    "enabled": "=support_roof_enable and (support_enable or support_tree_enable)", 
                                    "settable_per_mesh": "False", 
                                    "type": "float", 
                                    "description": "Distance between the printed support roof lines. This setting is calculated by the Support Roof Density, but can be adjusted separately."
                                }
                            }, 
                            "default_value": "100", 
                            "label": "Support Roof Density", 
                            "enabled": "=support_roof_enable and (support_enable or support_tree_enable)", 
                            "settable_per_mesh": "False", 
                            "type": "float", 
                            "description": "The density of the roofs of the support structure. A higher value results in better overhangs, but the supports are harder to remove."
                        }
                    }, 
                    "default_value": "100", 
                    "label": "Support Interface Density", 
                    "enabled": "=support_interface_enable and (support_enable or support_tree_enable)", 
                    "settable_per_mesh": "False", 
                    "type": "float", 
                    "description": "Adjusts the density of the roofs and floors of the support structure. A higher value results in better overhangs, but the supports are harder to remove."
                }, 
                "support_infill_rate": {
                    "limit_to_extruder": "=support_infill_extruder_nr", 
                    "maximum_value_warning": "=100", 
                    "unit": "%", 
                    "value": "=15 if support_enable else 0 if support_tree_enable else 15", 
                    "settable_per_extruder": "True", 
                    "minimum_value": "=0", 
                    "children": {
                        "support_line_distance": {
                            "limit_to_extruder": "=support_infill_extruder_nr", 
                            "unit": "mm", 
                            "value": "=0 if support_infill_rate == 0 else (support_line_width * 100) / support_infill_rate * (2 if support_pattern == 'grid' else (3 if support_pattern == 'triangles' else 1))", 
                            "settable_per_extruder": "True", 
                            "minimum_value": "=0", 
                            "children": {}, 
                            "default_value": "2.66", 
                            "label": "Support Line Distance", 
                            "minimum_value_warning": "=support_line_width", 
                            "enabled": "=support_enable or support_tree_enable", 
                            "settable_per_mesh": "False", 
                            "type": "float", 
                            "description": "Distance between the printed support structure lines. This setting is calculated by the support density."
                        }
                    }, 
                    "default_value": "15", 
                    "label": "Support Density", 
                    "enabled": "=support_enable or support_tree_enable", 
                    "settable_per_mesh": "False", 
                    "type": "float", 
                    "description": "Adjusts the density of the support structure. A higher value results in better overhangs, but the supports are harder to remove."
                }, 
                "zig_zaggify_support": {
                    "children": {}, 
                    "default_value": "False", 
                    "limit_to_extruder": "=support_infill_extruder_nr", 
                    "label": "Connect Support Lines", 
                    "value": "=support_pattern == 'cross'", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "True", 
                    "enabled": "=support_pattern == 'grid' or support_pattern == 'triangles' or support_pattern == 'cross'", 
                    "type": "bool", 
                    "description": "Connect the ends of the support lines together. Enabling this setting can make your support more sturdy and reduce underextrusion, but it will cost more material."
                }, 
                "support_interface_enable": {
                    "children": {
                        "support_bottom_enable": {
                            "children": {}, 
                            "default_value": "False", 
                            "limit_to_extruder": "=support_bottom_extruder_nr", 
                            "label": "Enable Support Floor", 
                            "value": "=extruderValue(support_bottom_extruder_nr, 'support_interface_enable')", 
                            "settable_per_mesh": "True", 
                            "enabled": "=support_enable or support_tree_enable", 
                            "type": "bool", 
                            "description": "Generate a dense slab of material between the bottom of the support and the model. This will create a skin between the model and support."
                        }, 
                        "support_roof_enable": {
                            "children": {}, 
                            "default_value": "False", 
                            "limit_to_extruder": "=support_roof_extruder_nr", 
                            "label": "Enable Support Roof", 
                            "value": "=extruderValue(support_roof_extruder_nr, 'support_interface_enable')", 
                            "settable_per_mesh": "True", 
                            "enabled": "=support_enable or support_tree_enable", 
                            "type": "bool", 
                            "description": "Generate a dense slab of material between the top of support and the model. This will create a skin between the model and support."
                        }
                    }, 
                    "default_value": "False", 
                    "limit_to_extruder": "=support_interface_extruder_nr", 
                    "label": "Enable Support Interface", 
                    "enabled": "=support_enable or support_tree_enable", 
                    "settable_per_mesh": "True", 
                    "type": "bool", 
                    "description": "Generate a dense interface between the model and the support. This will create a skin at the top of the support on which the model is printed and at the bottom of the support, where it rests on the model."
                }, 
                "support_interface_skip_height": {
                    "children": {}, 
                    "default_value": "0.3", 
                    "limit_to_extruder": "=support_interface_extruder_nr", 
                    "label": "Support Interface Resolution", 
                    "maximum_value_warning": "=support_interface_height", 
                    "unit": "mm", 
                    "enabled": "=support_interface_enable and support_enable", 
                    "settable_per_mesh": "True", 
                    "minimum_value": "=0", 
                    "type": "float", 
                    "description": "When checking where there's model above and below the support, take steps of the given height. Lower values will slice slower, while higher values may cause normal support to be printed in some places where there should have been support interface."
                }, 
                "support_connect_zigzags": {
                    "children": {}, 
                    "default_value": "True", 
                    "limit_to_extruder": "=support_infill_extruder_nr", 
                    "label": "Connect Support ZigZags", 
                    "enabled": "=(support_enable or support_tree_enable) and support_pattern == 'zigzag'", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "True", 
                    "type": "bool", 
                    "description": "Connect the ZigZags. This will increase the strength of the zig zag support structure."
                }, 
                "support_minimal_diameter": {
                    "limit_to_extruder": "=support_infill_extruder_nr", 
                    "maximum_value_warning": "=20", 
                    "maximum_value": "=support_tower_diameter", 
                    "unit": "mm", 
                    "type": "float", 
                    "minimum_value": "=0", 
                    "children": {}, 
                    "default_value": "3.0", 
                    "label": "Minimum Diameter", 
                    "minimum_value_warning": "=2 * machine_nozzle_size", 
                    "enabled": "=support_enable and support_use_towers", 
                    "settable_per_mesh": "True", 
                    "description": "Minimum diameter in the X/Y directions of a small area which is to be supported by a specialized support tower."
                }, 
                "support_join_distance": {
                    "children": {}, 
                    "default_value": "2.0", 
                    "limit_to_extruder": "=support_infill_extruder_nr", 
                    "label": "Support Join Distance", 
                    "maximum_value_warning": "=10", 
                    "minimum_value_warning": "=0", 
                    "enabled": "=support_enable", 
                    "settable_per_mesh": "True", 
                    "unit": "mm", 
                    "type": "float", 
                    "description": "The maximum distance between support structures in the X/Y directions. When seperate structures are closer together than this value, the structures merge into one."
                }, 
                "support_xy_distance_overhang": {
                    "limit_to_extruder": "=support_infill_extruder_nr", 
                    "maximum_value_warning": "=support_xy_distance", 
                    "value": "=machine_nozzle_size / 2", 
                    "unit": "mm", 
                    "children": {}, 
                    "default_value": "0.2", 
                    "label": "Minimum Support X/Y Distance", 
                    "minimum_value": "=0", 
                    "enabled": "=support_enable and support_xy_overrides_z == 'z_overrides_xy'", 
                    "settable_per_mesh": "True", 
                    "type": "float", 
                    "description": "Distance of the support structure from the overhang in the X/Y directions. "
                }, 
                "support_wall_count": {
                    "limit_to_extruder": "=support_infill_extruder_nr", 
                    "maximum_value_warning": "=3", 
                    "value": "=1 if (support_pattern == 'grid' or support_pattern == 'triangles' or support_pattern == 'concentric') else 0", 
                    "minimum_value": "=0", 
                    "children": {}, 
                    "default_value": "1", 
                    "label": "Support Wall Line Count", 
                    "minimum_value_warning": "=1 if support_pattern == 'concentric' else 0", 
                    "enabled": "=support_enable", 
                    "settable_per_mesh": "True", 
                    "type": "int", 
                    "description": "The number of walls with which to surround support infill. Adding a wall can make support print more reliably and can support overhangs better, but increases print time and material used."
                }, 
                "support_interface_height": {
                    "limit_to_extruder": "=support_interface_extruder_nr", 
                    "maximum_value_warning": "=10", 
                    "minimum_value": "=0", 
                    "unit": "mm", 
                    "children": {
                        "support_roof_height": {
                            "limit_to_extruder": "=support_roof_extruder_nr", 
                            "maximum_value_warning": "=10", 
                            "unit": "mm", 
                            "value": "=extruderValue(support_roof_extruder_nr, 'support_interface_height')", 
                            "minimum_value": "=0", 
                            "children": {}, 
                            "default_value": "1", 
                            "label": "Support Roof Thickness", 
                            "minimum_value_warning": "=0.2 + layer_height", 
                            "enabled": "=support_roof_enable and (support_enable or support_tree_enable)", 
                            "settable_per_mesh": "True", 
                            "type": "float", 
                            "description": "The thickness of the support roofs. This controls the amount of dense layers at the top of the support on which the model rests."
                        }, 
                        "support_bottom_height": {
                            "limit_to_extruder": "=support_bottom_extruder_nr", 
                            "maximum_value_warning": "=10", 
                            "unit": "mm", 
                            "value": "=extruderValue(support_bottom_extruder_nr, 'support_interface_height')", 
                            "minimum_value": "=0", 
                            "children": {}, 
                            "default_value": "1", 
                            "label": "Support Floor Thickness", 
                            "minimum_value_warning": "=min(0.2 + layer_height, support_bottom_stair_step_height)", 
                            "enabled": "=support_bottom_enable and (support_enable or support_tree_enable)", 
                            "settable_per_mesh": "True", 
                            "type": "float", 
                            "description": "The thickness of the support floors. This controls the number of dense layers that are printed on top of places of a model on which support rests."
                        }
                    }, 
                    "default_value": "1", 
                    "label": "Support Interface Thickness", 
                    "minimum_value_warning": "=0.2 + layer_height", 
                    "enabled": "=support_interface_enable and (support_enable or support_tree_enable)", 
                    "settable_per_mesh": "True", 
                    "type": "float", 
                    "description": "The thickness of the interface of the support where it touches with the model on the bottom or the top."
                }, 
                "support_bottom_stair_step_width": {
                    "children": {}, 
                    "default_value": "5.0", 
                    "limit_to_extruder": "=support_interface_extruder_nr if support_interface_enable else support_infill_extruder_nr", 
                    "label": "Support Stair Step Maximum Width", 
                    "maximum_value_warning": "=10.0", 
                    "unit": "mm", 
                    "enabled": "=support_enable", 
                    "settable_per_mesh": "True", 
                    "minimum_value": "=0", 
                    "type": "float", 
                    "description": "The maximum width of the steps of the stair-like bottom of support resting on the model. A low value makes the support harder to remove, but too high values can lead to unstable support structures."
                }
            }, 
            "type": "category", 
            "label": "Support", 
            "description": "Support"
        }, 
        "speed": {
            "icon": "category_speed", 
            "children": {
                "jerk_skirt_brim": {
                    "limit_to_extruder": "=adhesion_extruder_nr", 
                    "maximum_value_warning": "=50", 
                    "value": "=jerk_layer_0", 
                    "unit": "mm/s", 
                    "children": {}, 
                    "default_value": "20", 
                    "label": "Skirt/Brim Jerk", 
                    "minimum_value": "=0", 
                    "enabled": "=resolveOrValue('jerk_enabled')", 
                    "settable_per_mesh": "False", 
                    "type": "float", 
                    "description": "The maximum instantaneous velocity change with which the skirt and brim are printed."
                }, 
                "acceleration_print": {
                    "children": {
                        "acceleration_prime_tower": {
                            "minimum_value": "=0.1", 
                            "maximum_value_warning": "=10000", 
                            "value": "=acceleration_print", 
                            "unit": "mm/s\u00b2", 
                            "children": {}, 
                            "default_value": "3000", 
                            "label": "Prime Tower Acceleration", 
                            "minimum_value_warning": "=100", 
                            "enabled": "=resolveOrValue('prime_tower_enable') and resolveOrValue('acceleration_enabled')", 
                            "settable_per_mesh": "False", 
                            "type": "float", 
                            "description": "The acceleration with which the prime tower is printed."
                        }, 
                        "acceleration_infill": {
                            "limit_to_extruder": "=infill_extruder_nr", 
                            "maximum_value_warning": "=10000", 
                            "unit": "mm/s\u00b2", 
                            "value": "=acceleration_print", 
                            "minimum_value": "=0.1", 
                            "children": {}, 
                            "default_value": "3000", 
                            "label": "Infill Acceleration", 
                            "minimum_value_warning": "=100", 
                            "enabled": "=resolveOrValue('acceleration_enabled') and infill_sparse_density > 0", 
                            "settable_per_mesh": "True", 
                            "type": "float", 
                            "description": "The acceleration with which infill is printed."
                        }, 
                        "acceleration_topbottom": {
                            "limit_to_extruder": "=top_bottom_extruder_nr", 
                            "maximum_value_warning": "=10000", 
                            "unit": "mm/s\u00b2", 
                            "value": "=acceleration_print", 
                            "minimum_value": "=0.1", 
                            "children": {}, 
                            "default_value": "3000", 
                            "label": "Top/Bottom Acceleration", 
                            "minimum_value_warning": "=100", 
                            "enabled": "=resolveOrValue('acceleration_enabled')", 
                            "settable_per_mesh": "True", 
                            "type": "float", 
                            "description": "The acceleration with which top/bottom layers are printed."
                        }, 
                        "acceleration_wall": {
                            "minimum_value": "=0.1", 
                            "maximum_value_warning": "=10000", 
                            "value": "=acceleration_print", 
                            "unit": "mm/s\u00b2", 
                            "children": {
                                "acceleration_wall_0": {
                                    "limit_to_extruder": "=wall_0_extruder_nr", 
                                    "maximum_value_warning": "=10000", 
                                    "unit": "mm/s\u00b2", 
                                    "value": "=acceleration_wall", 
                                    "minimum_value": "=0.1", 
                                    "children": {}, 
                                    "default_value": "3000", 
                                    "label": "Outer Wall Acceleration", 
                                    "minimum_value_warning": "=100", 
                                    "enabled": "=resolveOrValue('acceleration_enabled')", 
                                    "settable_per_mesh": "True", 
                                    "type": "float", 
                                    "description": "The acceleration with which the outermost walls are printed."
                                }, 
                                "acceleration_wall_x": {
                                    "limit_to_extruder": "=wall_x_extruder_nr", 
                                    "maximum_value_warning": "=10000", 
                                    "unit": "mm/s\u00b2", 
                                    "value": "=acceleration_wall", 
                                    "minimum_value": "=0.1", 
                                    "children": {}, 
                                    "default_value": "3000", 
                                    "label": "Inner Wall Acceleration", 
                                    "minimum_value_warning": "=100", 
                                    "enabled": "=resolveOrValue('acceleration_enabled')", 
                                    "settable_per_mesh": "True", 
                                    "type": "float", 
                                    "description": "The acceleration with which all inner walls are printed."
                                }
                            }, 
                            "default_value": "3000", 
                            "label": "Wall Acceleration", 
                            "minimum_value_warning": "=100", 
                            "enabled": "=resolveOrValue('acceleration_enabled')", 
                            "settable_per_mesh": "True", 
                            "type": "float", 
                            "description": "The acceleration with which the walls are printed."
                        }, 
                        "acceleration_support": {
                            "limit_to_extruder": "=support_extruder_nr", 
                            "maximum_value_warning": "=10000", 
                            "unit": "mm/s\u00b2", 
                            "value": "=acceleration_print", 
                            "settable_per_extruder": "True", 
                            "minimum_value": "=0.1", 
                            "children": {
                                "acceleration_support_interface": {
                                    "limit_to_extruder": "=support_interface_extruder_nr", 
                                    "maximum_value_warning": "=10000", 
                                    "unit": "mm/s\u00b2", 
                                    "value": "=acceleration_support", 
                                    "settable_per_extruder": "True", 
                                    "minimum_value": "=0.1", 
                                    "children": {
                                        "acceleration_support_bottom": {
                                            "limit_to_extruder": "=support_bottom_extruder_nr", 
                                            "maximum_value_warning": "=10000", 
                                            "unit": "mm/s\u00b2", 
                                            "value": "=extruderValue(support_bottom_extruder_nr, 'acceleration_support_interface')", 
                                            "settable_per_extruder": "True", 
                                            "minimum_value": "=0.1", 
                                            "children": {}, 
                                            "default_value": "3000", 
                                            "label": "Support Floor Acceleration", 
                                            "minimum_value_warning": "=100", 
                                            "enabled": "=acceleration_enabled and support_bottom_enable and support_enable", 
                                            "settable_per_mesh": "False", 
                                            "type": "float", 
                                            "description": "The acceleration with which the floors of support are printed. Printing them at lower acceleration can improve adhesion of support on top of your model."
                                        }, 
                                        "acceleration_support_roof": {
                                            "limit_to_extruder": "=support_roof_extruder_nr", 
                                            "maximum_value_warning": "=10000", 
                                            "unit": "mm/s\u00b2", 
                                            "value": "=extruderValue(support_roof_extruder_nr, 'acceleration_support_interface')", 
                                            "settable_per_extruder": "True", 
                                            "minimum_value": "=0.1", 
                                            "children": {}, 
                                            "default_value": "3000", 
                                            "label": "Support Roof Acceleration", 
                                            "minimum_value_warning": "=100", 
                                            "enabled": "=acceleration_enabled and support_roof_enable and support_enable", 
                                            "settable_per_mesh": "False", 
                                            "type": "float", 
                                            "description": "The acceleration with which the roofs of support are printed. Printing them at lower acceleration can improve overhang quality."
                                        }
                                    }, 
                                    "default_value": "3000", 
                                    "label": "Support Interface Acceleration", 
                                    "minimum_value_warning": "=100", 
                                    "enabled": "=resolveOrValue('acceleration_enabled') and support_interface_enable and support_enable", 
                                    "settable_per_mesh": "False", 
                                    "type": "float", 
                                    "description": "The acceleration with which the roofs and floors of support are printed. Printing them at lower acceleration can improve overhang quality."
                                }, 
                                "acceleration_support_infill": {
                                    "limit_to_extruder": "=support_infill_extruder_nr", 
                                    "maximum_value_warning": "=10000", 
                                    "unit": "mm/s\u00b2", 
                                    "value": "=acceleration_support", 
                                    "settable_per_extruder": "True", 
                                    "minimum_value": "=0.1", 
                                    "children": {}, 
                                    "default_value": "3000", 
                                    "label": "Support Infill Acceleration", 
                                    "minimum_value_warning": "=100", 
                                    "enabled": "=resolveOrValue('acceleration_enabled') and support_enable", 
                                    "settable_per_mesh": "False", 
                                    "type": "float", 
                                    "description": "The acceleration with which the infill of support is printed."
                                }
                            }, 
                            "default_value": "3000", 
                            "label": "Support Acceleration", 
                            "minimum_value_warning": "=100", 
                            "enabled": "=resolveOrValue('acceleration_enabled') and support_enable", 
                            "settable_per_mesh": "False", 
                            "type": "float", 
                            "description": "The acceleration with which the support structure is printed."
                        }, 
                        "acceleration_roofing": {
                            "limit_to_extruder": "=roofing_extruder_nr", 
                            "maximum_value_warning": "=10000", 
                            "unit": "mm/s\u00b2", 
                            "value": "=acceleration_topbottom", 
                            "minimum_value": "=0.1", 
                            "children": {}, 
                            "default_value": "3000", 
                            "label": "Top Surface Skin Acceleration", 
                            "minimum_value_warning": "=100", 
                            "enabled": "=resolveOrValue('acceleration_enabled') and roofing_layer_count > 0 and top_layers > 0", 
                            "settable_per_mesh": "True", 
                            "type": "float", 
                            "description": "The acceleration with which top surface skin layers are printed."
                        }
                    }, 
                    "default_value": "3000", 
                    "unit": "mm/s\u00b2", 
                    "label": "Print Acceleration", 
                    "maximum_value_warning": "=10000", 
                    "minimum_value_warning": "=100", 
                    "enabled": "=resolveOrValue('acceleration_enabled')", 
                    "settable_per_mesh": "True", 
                    "minimum_value": "=0.1", 
                    "type": "float", 
                    "description": "The acceleration with which printing happens."
                }, 
                "acceleration_enabled": {
                    "children": {}, 
                    "default_value": "False", 
                    "description": "Enables adjusting the print head acceleration. Increasing the accelerations can reduce printing time at the cost of print quality.", 
                    "resolve": "=any(extruderValues('acceleration_enabled'))", 
                    "type": "bool", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "False", 
                    "label": "Enable Acceleration Control"
                }, 
                "acceleration_travel": {
                    "minimum_value": "=0.1", 
                    "maximum_value_warning": "=10000", 
                    "value": "=acceleration_print if magic_spiralize else 5000", 
                    "unit": "mm/s\u00b2", 
                    "children": {}, 
                    "default_value": "5000", 
                    "label": "Travel Acceleration", 
                    "minimum_value_warning": "=100", 
                    "enabled": "=resolveOrValue('acceleration_enabled')", 
                    "settable_per_mesh": "False", 
                    "type": "float", 
                    "description": "The acceleration with which travel moves are made."
                }, 
                "max_feedrate_z_override": {
                    "children": {}, 
                    "default_value": "0", 
                    "unit": "mm/s", 
                    "label": "Maximum Z Speed", 
                    "maximum_value_warning": "=machine_max_feedrate_z", 
                    "maximum_value": "=299792458000", 
                    "type": "float", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "True", 
                    "minimum_value": "=0", 
                    "description": "The maximum speed with which the build plate is moved. Setting this to zero causes the print to use the firmware defaults for the maximum z speed."
                }, 
                "speed_equalize_flow_max": {
                    "maximum_value_warning": "=150", 
                    "maximum_value": "=math.sqrt(machine_max_feedrate_x ** 2 + machine_max_feedrate_y ** 2)", 
                    "minimum_value": "=0.1", 
                    "settable_per_extruder": "True", 
                    "unit": "mm/s", 
                    "children": {}, 
                    "default_value": "150", 
                    "label": "Maximum Speed for Flow Equalization", 
                    "enabled": "=speed_equalize_flow_enabled", 
                    "settable_per_mesh": "False", 
                    "type": "float", 
                    "description": "Maximum print speed when adjusting the print speed in order to equalize flow."
                }, 
                "jerk_print": {
                    "children": {
                        "jerk_support": {
                            "limit_to_extruder": "=support_extruder_nr", 
                            "maximum_value_warning": "=50", 
                            "unit": "mm/s", 
                            "value": "=jerk_print", 
                            "settable_per_extruder": "True", 
                            "minimum_value": "=0", 
                            "children": {
                                "jerk_support_interface": {
                                    "limit_to_extruder": "=support_interface_extruder_nr", 
                                    "maximum_value_warning": "=50", 
                                    "unit": "mm/s", 
                                    "value": "=jerk_support", 
                                    "settable_per_extruder": "True", 
                                    "minimum_value": "=0", 
                                    "children": {
                                        "jerk_support_bottom": {
                                            "limit_to_extruder": "=support_bottom_extruder_nr", 
                                            "maximum_value_warning": "=50", 
                                            "unit": "mm/s", 
                                            "value": "=extruderValue(support_roof_extruder_nr, 'jerk_support_interface')", 
                                            "settable_per_extruder": "True", 
                                            "minimum_value": "=0", 
                                            "children": {}, 
                                            "default_value": "20", 
                                            "label": "Support Floor Jerk", 
                                            "enabled": "=resolveOrValue('jerk_enabled') and support_bottom_enable and support_enable", 
                                            "settable_per_mesh": "False", 
                                            "type": "float", 
                                            "description": "The maximum instantaneous velocity change with which the floors of support are printed."
                                        }, 
                                        "jerk_support_roof": {
                                            "limit_to_extruder": "=support_roof_extruder_nr", 
                                            "maximum_value_warning": "=50", 
                                            "unit": "mm/s", 
                                            "value": "=extruderValue(support_roof_extruder_nr, 'jerk_support_interface')", 
                                            "settable_per_extruder": "True", 
                                            "minimum_value": "=0", 
                                            "children": {}, 
                                            "default_value": "20", 
                                            "label": "Support Roof Jerk", 
                                            "enabled": "=resolveOrValue('jerk_enabled') and support_roof_enable and support_enable", 
                                            "settable_per_mesh": "False", 
                                            "type": "float", 
                                            "description": "The maximum instantaneous velocity change with which the roofs of support are printed."
                                        }
                                    }, 
                                    "default_value": "20", 
                                    "label": "Support Interface Jerk", 
                                    "enabled": "=resolveOrValue('jerk_enabled') and support_interface_enable and support_enable", 
                                    "settable_per_mesh": "False", 
                                    "type": "float", 
                                    "description": "The maximum instantaneous velocity change with which the roofs and floors of support are printed."
                                }, 
                                "jerk_support_infill": {
                                    "limit_to_extruder": "=support_infill_extruder_nr", 
                                    "maximum_value_warning": "=50", 
                                    "unit": "mm/s", 
                                    "value": "=jerk_support", 
                                    "settable_per_extruder": "True", 
                                    "minimum_value": "=0", 
                                    "children": {}, 
                                    "default_value": "20", 
                                    "label": "Support Infill Jerk", 
                                    "enabled": "=resolveOrValue('jerk_enabled') and support_enable", 
                                    "settable_per_mesh": "False", 
                                    "type": "float", 
                                    "description": "The maximum instantaneous velocity change with which the infill of support is printed."
                                }
                            }, 
                            "default_value": "20", 
                            "label": "Support Jerk", 
                            "enabled": "=resolveOrValue('jerk_enabled') and support_enable", 
                            "settable_per_mesh": "False", 
                            "type": "float", 
                            "description": "The maximum instantaneous velocity change with which the support structure is printed."
                        }, 
                        "jerk_prime_tower": {
                            "children": {}, 
                            "default_value": "20", 
                            "unit": "mm/s", 
                            "label": "Prime Tower Jerk", 
                            "maximum_value_warning": "=50", 
                            "value": "=jerk_print", 
                            "settable_per_mesh": "False", 
                            "enabled": "=resolveOrValue('prime_tower_enable') and resolveOrValue('jerk_enabled')", 
                            "minimum_value": "=0", 
                            "type": "float", 
                            "description": "The maximum instantaneous velocity change with which the prime tower is printed."
                        }, 
                        "jerk_roofing": {
                            "limit_to_extruder": "=roofing_extruder_nr", 
                            "maximum_value_warning": "=50", 
                            "value": "=jerk_topbottom", 
                            "unit": "mm/s", 
                            "children": {}, 
                            "default_value": "20", 
                            "label": "Top Surface Skin Jerk", 
                            "minimum_value": "=0", 
                            "enabled": "=resolveOrValue('jerk_enabled') and roofing_layer_count > 0 and top_layers > 0", 
                            "settable_per_mesh": "True", 
                            "type": "float", 
                            "description": "The maximum instantaneous velocity change with which top surface skin layers are printed."
                        }, 
                        "jerk_topbottom": {
                            "limit_to_extruder": "=top_bottom_extruder_nr", 
                            "maximum_value_warning": "=50", 
                            "value": "=jerk_print", 
                            "unit": "mm/s", 
                            "children": {}, 
                            "default_value": "20", 
                            "label": "Top/Bottom Jerk", 
                            "minimum_value": "=0", 
                            "enabled": "=resolveOrValue('jerk_enabled')", 
                            "settable_per_mesh": "True", 
                            "type": "float", 
                            "description": "The maximum instantaneous velocity change with which top/bottom layers are printed."
                        }, 
                        "jerk_infill": {
                            "limit_to_extruder": "=infill_extruder_nr", 
                            "maximum_value_warning": "=50", 
                            "value": "=jerk_print", 
                            "unit": "mm/s", 
                            "children": {}, 
                            "default_value": "20", 
                            "label": "Infill Jerk", 
                            "minimum_value": "=0", 
                            "enabled": "=resolveOrValue('jerk_enabled') and infill_sparse_density > 0", 
                            "settable_per_mesh": "True", 
                            "type": "float", 
                            "description": "The maximum instantaneous velocity change with which infill is printed."
                        }, 
                        "jerk_wall": {
                            "children": {
                                "jerk_wall_0": {
                                    "limit_to_extruder": "=wall_0_extruder_nr", 
                                    "maximum_value_warning": "=50", 
                                    "value": "=jerk_wall", 
                                    "unit": "mm/s", 
                                    "children": {}, 
                                    "default_value": "20", 
                                    "label": "Outer Wall Jerk", 
                                    "minimum_value": "=0", 
                                    "enabled": "=resolveOrValue('jerk_enabled')", 
                                    "settable_per_mesh": "True", 
                                    "type": "float", 
                                    "description": "The maximum instantaneous velocity change with which the outermost walls are printed."
                                }, 
                                "jerk_wall_x": {
                                    "limit_to_extruder": "=wall_x_extruder_nr", 
                                    "maximum_value_warning": "=50", 
                                    "value": "=jerk_wall", 
                                    "unit": "mm/s", 
                                    "children": {}, 
                                    "default_value": "20", 
                                    "label": "Inner Wall Jerk", 
                                    "minimum_value": "=0", 
                                    "enabled": "=resolveOrValue('jerk_enabled')", 
                                    "settable_per_mesh": "True", 
                                    "type": "float", 
                                    "description": "The maximum instantaneous velocity change with which all inner walls are printed."
                                }
                            }, 
                            "default_value": "20", 
                            "unit": "mm/s", 
                            "label": "Wall Jerk", 
                            "maximum_value_warning": "=50", 
                            "value": "=jerk_print", 
                            "settable_per_mesh": "True", 
                            "enabled": "=resolveOrValue('jerk_enabled')", 
                            "minimum_value": "=0", 
                            "type": "float", 
                            "description": "The maximum instantaneous velocity change with which the walls are printed."
                        }
                    }, 
                    "default_value": "20", 
                    "unit": "mm/s", 
                    "label": "Print Jerk", 
                    "maximum_value_warning": "=50", 
                    "enabled": "=resolveOrValue('jerk_enabled')", 
                    "settable_per_mesh": "True", 
                    "minimum_value": "=0", 
                    "type": "float", 
                    "description": "The maximum instantaneous velocity change of the print head."
                }, 
                "speed_print": {
                    "children": {
                        "speed_topbottom": {
                            "limit_to_extruder": "=top_bottom_extruder_nr", 
                            "maximum_value_warning": "=150", 
                            "maximum_value": "=math.sqrt(machine_max_feedrate_x ** 2 + machine_max_feedrate_y ** 2)", 
                            "value": "=speed_print / 2", 
                            "unit": "mm/s", 
                            "children": {}, 
                            "default_value": "30", 
                            "label": "Top/Bottom Speed", 
                            "minimum_value": "=0.1", 
                            "settable_per_mesh": "True", 
                            "type": "float", 
                            "description": "The speed at which top/bottom layers are printed."
                        }, 
                        "speed_support": {
                            "limit_to_extruder": "=support_extruder_nr", 
                            "maximum_value_warning": "=150", 
                            "maximum_value": "=math.sqrt(machine_max_feedrate_x ** 2 + machine_max_feedrate_y ** 2)", 
                            "unit": "mm/s", 
                            "value": "=speed_print", 
                            "settable_per_extruder": "True", 
                            "minimum_value": "=0.1", 
                            "children": {
                                "speed_support_infill": {
                                    "limit_to_extruder": "=support_infill_extruder_nr", 
                                    "maximum_value_warning": "=150", 
                                    "maximum_value": "=math.sqrt(machine_max_feedrate_x ** 2 + machine_max_feedrate_y ** 2)", 
                                    "unit": "mm/s", 
                                    "value": "=speed_support", 
                                    "settable_per_extruder": "True", 
                                    "minimum_value": "=0.1", 
                                    "children": {}, 
                                    "default_value": "60", 
                                    "label": "Support Infill Speed", 
                                    "enabled": "=support_enable", 
                                    "settable_per_mesh": "False", 
                                    "type": "float", 
                                    "description": "The speed at which the infill of support is printed. Printing the infill at lower speeds improves stability."
                                }, 
                                "speed_support_interface": {
                                    "limit_to_extruder": "=support_interface_extruder_nr", 
                                    "maximum_value_warning": "=150", 
                                    "maximum_value": "=math.sqrt(machine_max_feedrate_x ** 2 + machine_max_feedrate_y ** 2)", 
                                    "unit": "mm/s", 
                                    "value": "=speed_support / 1.5", 
                                    "settable_per_extruder": "True", 
                                    "minimum_value": "=0.1", 
                                    "children": {
                                        "speed_support_roof": {
                                            "limit_to_extruder": "=support_roof_extruder_nr", 
                                            "maximum_value_warning": "=150", 
                                            "maximum_value": "=math.sqrt(machine_max_feedrate_x ** 2 + machine_max_feedrate_y ** 2)", 
                                            "unit": "mm/s", 
                                            "value": "=extruderValue(support_roof_extruder_nr, 'speed_support_interface')", 
                                            "settable_per_extruder": "True", 
                                            "minimum_value": "=0.1", 
                                            "children": {}, 
                                            "default_value": "40", 
                                            "label": "Support Roof Speed", 
                                            "enabled": "=support_roof_enable and support_enable", 
                                            "settable_per_mesh": "False", 
                                            "type": "float", 
                                            "description": "The speed at which the roofs of support are printed. Printing them at lower speeds can improve overhang quality."
                                        }, 
                                        "speed_support_bottom": {
                                            "limit_to_extruder": "=support_bottom_extruder_nr", 
                                            "maximum_value_warning": "=150", 
                                            "maximum_value": "=math.sqrt(machine_max_feedrate_x ** 2 + machine_max_feedrate_y ** 2)", 
                                            "unit": "mm/s", 
                                            "value": "=extruderValue(support_bottom_extruder_nr, 'speed_support_interface')", 
                                            "settable_per_extruder": "True", 
                                            "minimum_value": "=0.1", 
                                            "children": {}, 
                                            "default_value": "40", 
                                            "label": "Support Floor Speed", 
                                            "enabled": "=support_bottom_enable and support_enable", 
                                            "settable_per_mesh": "False", 
                                            "type": "float", 
                                            "description": "The speed at which the floor of support is printed. Printing it at lower speed can improve adhesion of support on top of your model."
                                        }
                                    }, 
                                    "default_value": "40", 
                                    "label": "Support Interface Speed", 
                                    "enabled": "=support_interface_enable and support_enable", 
                                    "settable_per_mesh": "False", 
                                    "type": "float", 
                                    "description": "The speed at which the roofs and floors of support are printed. Printing them at lower speeds can improve overhang quality."
                                }
                            }, 
                            "default_value": "60", 
                            "label": "Support Speed", 
                            "enabled": "=support_enable", 
                            "settable_per_mesh": "False", 
                            "type": "float", 
                            "description": "The speed at which the support structure is printed. Printing support at higher speeds can greatly reduce printing time. The surface quality of the support structure is not important since it is removed after printing."
                        }, 
                        "speed_prime_tower": {
                            "unit": "mm/s", 
                            "maximum_value_warning": "=150", 
                            "maximum_value": "=math.sqrt(machine_max_feedrate_x ** 2 + machine_max_feedrate_y ** 2)", 
                            "value": "=speed_print", 
                            "settable_per_extruder": "True", 
                            "minimum_value": "=0.1", 
                            "children": {}, 
                            "default_value": "60", 
                            "label": "Prime Tower Speed", 
                            "enabled": "=resolveOrValue('prime_tower_enable')", 
                            "settable_per_mesh": "False", 
                            "type": "float", 
                            "description": "The speed at which the prime tower is printed. Printing the prime tower slower can make it more stable when the adhesion between the different filaments is suboptimal."
                        }, 
                        "speed_wall": {
                            "children": {
                                "speed_wall_x": {
                                    "limit_to_extruder": "=wall_x_extruder_nr", 
                                    "maximum_value_warning": "=150", 
                                    "maximum_value": "=math.sqrt(machine_max_feedrate_x ** 2 + machine_max_feedrate_y ** 2)", 
                                    "value": "=speed_wall * 2", 
                                    "unit": "mm/s", 
                                    "children": {}, 
                                    "default_value": "60", 
                                    "label": "Inner Wall Speed", 
                                    "minimum_value": "=0.1", 
                                    "settable_per_mesh": "True", 
                                    "type": "float", 
                                    "description": "The speed at which all inner walls are printed. Printing the inner wall faster than the outer wall will reduce printing time. It works well to set this in between the outer wall speed and the infill speed."
                                }, 
                                "speed_wall_0": {
                                    "limit_to_extruder": "=wall_0_extruder_nr", 
                                    "maximum_value_warning": "=150", 
                                    "maximum_value": "=math.sqrt(machine_max_feedrate_x ** 2 + machine_max_feedrate_y ** 2)", 
                                    "value": "=speed_wall", 
                                    "unit": "mm/s", 
                                    "children": {}, 
                                    "default_value": "30", 
                                    "label": "Outer Wall Speed", 
                                    "minimum_value": "=0.1", 
                                    "settable_per_mesh": "True", 
                                    "type": "float", 
                                    "description": "The speed at which the outermost walls are printed. Printing the outer wall at a lower speed improves the final skin quality. However, having a large difference between the inner wall speed and the outer wall speed will affect quality in a negative way."
                                }
                            }, 
                            "default_value": "30", 
                            "unit": "mm/s", 
                            "label": "Wall Speed", 
                            "maximum_value_warning": "=150", 
                            "maximum_value": "=math.sqrt(machine_max_feedrate_x ** 2 + machine_max_feedrate_y ** 2)", 
                            "value": "=speed_print / 2", 
                            "type": "float", 
                            "settable_per_mesh": "True", 
                            "minimum_value": "=0.1", 
                            "description": "The speed at which the walls are printed."
                        }, 
                        "speed_infill": {
                            "limit_to_extruder": "=infill_extruder_nr", 
                            "maximum_value_warning": "=150", 
                            "maximum_value": "=math.sqrt(machine_max_feedrate_x ** 2 + machine_max_feedrate_y ** 2)", 
                            "unit": "mm/s", 
                            "value": "=speed_print", 
                            "minimum_value": "=0.1", 
                            "children": {}, 
                            "default_value": "60", 
                            "label": "Infill Speed", 
                            "enabled": "=infill_sparse_density > 0", 
                            "settable_per_mesh": "True", 
                            "type": "float", 
                            "description": "The speed at which infill is printed."
                        }, 
                        "speed_roofing": {
                            "limit_to_extruder": "=roofing_extruder_nr", 
                            "maximum_value_warning": "=150", 
                            "maximum_value": "=math.sqrt(machine_max_feedrate_x ** 2 + machine_max_feedrate_y ** 2)", 
                            "unit": "mm/s", 
                            "value": "=speed_topbottom", 
                            "minimum_value": "=0.1", 
                            "children": {}, 
                            "default_value": "25", 
                            "label": "Top Surface Skin Speed", 
                            "enabled": "=roofing_layer_count > 0 and top_layers > 0", 
                            "settable_per_mesh": "True", 
                            "type": "float", 
                            "description": "The speed at which top surface skin layers are printed."
                        }
                    }, 
                    "default_value": "60", 
                    "unit": "mm/s", 
                    "label": "Print Speed", 
                    "maximum_value_warning": "=150", 
                    "maximum_value": "=math.sqrt(machine_max_feedrate_x ** 2 + machine_max_feedrate_y ** 2)", 
                    "type": "float", 
                    "settable_per_mesh": "True", 
                    "minimum_value": "=0.1", 
                    "description": "The speed at which printing happens."
                }, 
                "jerk_enabled": {
                    "children": {}, 
                    "default_value": "False", 
                    "description": "Enables adjusting the jerk of print head when the velocity in the X or Y axis changes. Increasing the jerk can reduce printing time at the cost of print quality.", 
                    "resolve": "=any(extruderValues('jerk_enabled'))", 
                    "type": "bool", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "False", 
                    "label": "Enable Jerk Control"
                }, 
                "speed_slowdown_layers": {
                    "children": {}, 
                    "default_value": "2", 
                    "label": "Number of Slower Layers", 
                    "maximum_value_warning": "=3.2 / resolveOrValue('layer_height')", 
                    "description": "The first few layers are printed slower than the rest of the model, to get better adhesion to the build plate and improve the overall success rate of prints. The speed is gradually increased over these layers.", 
                    "type": "int", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "False", 
                    "minimum_value": "=0", 
                    "resolve": "=round(sum(extruderValues('speed_slowdown_layers')) / len(extruderValues('speed_slowdown_layers')))"
                }, 
                "acceleration_skirt_brim": {
                    "limit_to_extruder": "=adhesion_extruder_nr", 
                    "maximum_value_warning": "=10000", 
                    "unit": "mm/s\u00b2", 
                    "value": "=acceleration_layer_0", 
                    "minimum_value": "=0.1", 
                    "children": {}, 
                    "default_value": "3000", 
                    "label": "Skirt/Brim Acceleration", 
                    "minimum_value_warning": "=100", 
                    "enabled": "=resolveOrValue('acceleration_enabled')", 
                    "settable_per_mesh": "False", 
                    "type": "float", 
                    "description": "The acceleration with which the skirt and brim are printed. Normally this is done with the initial layer acceleration, but sometimes you might want to print the skirt or brim at a different acceleration."
                }, 
                "speed_layer_0": {
                    "children": {
                        "speed_travel_layer_0": {
                            "minimum_value": "=0.1", 
                            "maximum_value_warning": "=300", 
                            "maximum_value": "=math.sqrt(machine_max_feedrate_x ** 2 + machine_max_feedrate_y ** 2)", 
                            "value": "=speed_layer_0 * speed_travel / speed_print", 
                            "settable_per_extruder": "True", 
                            "unit": "mm/s", 
                            "children": {}, 
                            "default_value": "60", 
                            "label": "Initial Layer Travel Speed", 
                            "settable_per_mesh": "False", 
                            "type": "float", 
                            "description": "The speed of travel moves in the initial layer. A lower value is advised to prevent pulling previously printed parts away from the build plate. The value of this setting can automatically be calculated from the ratio between the Travel Speed and the Print Speed."
                        }, 
                        "speed_print_layer_0": {
                            "children": {}, 
                            "default_value": "30", 
                            "unit": "mm/s", 
                            "label": "Initial Layer Print Speed", 
                            "maximum_value_warning": "=300", 
                            "maximum_value": "=math.sqrt(machine_max_feedrate_x ** 2 + machine_max_feedrate_y ** 2)", 
                            "value": "=speed_layer_0", 
                            "type": "float", 
                            "settable_per_mesh": "True", 
                            "minimum_value": "=0.1", 
                            "description": "The speed of printing for the initial layer. A lower value is advised to improve adhesion to the build plate."
                        }
                    }, 
                    "default_value": "30", 
                    "unit": "mm/s", 
                    "label": "Initial Layer Speed", 
                    "maximum_value_warning": "=300", 
                    "maximum_value": "=math.sqrt(machine_max_feedrate_x ** 2 + machine_max_feedrate_y ** 2)", 
                    "value": "=speed_print * 30 / 60", 
                    "type": "float", 
                    "settable_per_mesh": "True", 
                    "minimum_value": "=0.1", 
                    "description": "The speed for the initial layer. A lower value is advised to improve adhesion to the build plate."
                }, 
                "speed_travel": {
                    "minimum_value": "=0.1", 
                    "maximum_value_warning": "=300", 
                    "maximum_value": "=math.sqrt(machine_max_feedrate_x ** 2 + machine_max_feedrate_y ** 2)", 
                    "value": "=speed_print if magic_spiralize else 120", 
                    "settable_per_extruder": "True", 
                    "unit": "mm/s", 
                    "children": {}, 
                    "default_value": "120", 
                    "label": "Travel Speed", 
                    "settable_per_mesh": "False", 
                    "type": "float", 
                    "description": "The speed at which travel moves are made."
                }, 
                "jerk_travel": {
                    "children": {}, 
                    "default_value": "30", 
                    "unit": "mm/s", 
                    "label": "Travel Jerk", 
                    "maximum_value_warning": "=50", 
                    "value": "=jerk_print if magic_spiralize else 30", 
                    "settable_per_mesh": "False", 
                    "enabled": "=resolveOrValue('jerk_enabled')", 
                    "minimum_value": "=0", 
                    "type": "float", 
                    "description": "The maximum instantaneous velocity change with which travel moves are made."
                }, 
                "skirt_brim_speed": {
                    "limit_to_extruder": "=adhesion_extruder_nr", 
                    "maximum_value_warning": "=300", 
                    "maximum_value": "=math.sqrt(machine_max_feedrate_x ** 2 + machine_max_feedrate_y ** 2)", 
                    "unit": "mm/s", 
                    "value": "=speed_layer_0", 
                    "settable_per_extruder": "True", 
                    "minimum_value": "=0.1", 
                    "children": {}, 
                    "default_value": "30", 
                    "label": "Skirt/Brim Speed", 
                    "enabled": "=resolveOrValue('adhesion_type') == 'skirt' or resolveOrValue('adhesion_type') == 'brim'", 
                    "settable_per_mesh": "False", 
                    "type": "float", 
                    "description": "The speed at which the skirt and brim are printed. Normally this is done at the initial layer speed, but sometimes you might want to print the skirt or brim at a different speed."
                }, 
                "jerk_layer_0": {
                    "children": {
                        "jerk_travel_layer_0": {
                            "minimum_value": "=0", 
                            "maximum_value_warning": "=50", 
                            "value": "=jerk_layer_0 * jerk_travel / jerk_print", 
                            "settable_per_extruder": "True", 
                            "unit": "mm/s", 
                            "children": {}, 
                            "default_value": "20", 
                            "label": "Initial Layer Travel Jerk", 
                            "enabled": "=resolveOrValue('jerk_enabled')", 
                            "settable_per_mesh": "False", 
                            "type": "float", 
                            "description": "The acceleration for travel moves in the initial layer."
                        }, 
                        "jerk_print_layer_0": {
                            "children": {}, 
                            "default_value": "20", 
                            "unit": "mm/s", 
                            "label": "Initial Layer Print Jerk", 
                            "maximum_value_warning": "=50", 
                            "value": "=jerk_layer_0", 
                            "settable_per_mesh": "True", 
                            "enabled": "=resolveOrValue('jerk_enabled')", 
                            "minimum_value": "=0", 
                            "type": "float", 
                            "description": "The maximum instantaneous velocity change during the printing of the initial layer."
                        }
                    }, 
                    "default_value": "20", 
                    "unit": "mm/s", 
                    "label": "Initial Layer Jerk", 
                    "maximum_value_warning": "=50", 
                    "value": "=jerk_print", 
                    "settable_per_mesh": "True", 
                    "enabled": "=resolveOrValue('jerk_enabled')", 
                    "minimum_value": "=0", 
                    "type": "float", 
                    "description": "The print maximum instantaneous velocity change for the initial layer."
                }, 
                "speed_equalize_flow_enabled": {
                    "children": {}, 
                    "default_value": "False", 
                    "label": "Equalize Filament Flow", 
                    "type": "bool", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "True", 
                    "description": "Print thinner than normal lines faster so that the amount of material extruded per second remains the same. Thin pieces in your model might require lines printed with smaller line width than provided in the settings. This setting controls the speed changes for such lines."
                }, 
                "acceleration_layer_0": {
                    "minimum_value": "=0.1", 
                    "maximum_value_warning": "=10000", 
                    "value": "=acceleration_print", 
                    "unit": "mm/s\u00b2", 
                    "children": {
                        "acceleration_travel_layer_0": {
                            "unit": "mm/s", 
                            "maximum_value_warning": "=10000", 
                            "value": "=acceleration_layer_0 * acceleration_travel / acceleration_print", 
                            "settable_per_extruder": "True", 
                            "minimum_value": "=0.1", 
                            "children": {}, 
                            "default_value": "3000", 
                            "label": "Initial Layer Travel Acceleration", 
                            "minimum_value_warning": "=100", 
                            "enabled": "=resolveOrValue('acceleration_enabled')", 
                            "settable_per_mesh": "False", 
                            "type": "float", 
                            "description": "The acceleration for travel moves in the initial layer."
                        }, 
                        "acceleration_print_layer_0": {
                            "minimum_value": "=0.1", 
                            "maximum_value_warning": "=10000", 
                            "value": "=acceleration_layer_0", 
                            "unit": "mm/s", 
                            "children": {}, 
                            "default_value": "3000", 
                            "label": "Initial Layer Print Acceleration", 
                            "minimum_value_warning": "=100", 
                            "enabled": "=resolveOrValue('acceleration_enabled')", 
                            "settable_per_mesh": "True", 
                            "type": "float", 
                            "description": "The acceleration during the printing of the initial layer."
                        }
                    }, 
                    "default_value": "3000", 
                    "label": "Initial Layer Acceleration", 
                    "minimum_value_warning": "=100", 
                    "enabled": "=resolveOrValue('acceleration_enabled')", 
                    "settable_per_mesh": "True", 
                    "type": "float", 
                    "description": "The acceleration for the initial layer."
                }
            }, 
            "type": "category", 
            "label": "Speed", 
            "description": "Speed"
        }, 
        "material": {
            "icon": "category_material", 
            "children": {
                "retraction_speed": {
                    "unit": "mm/s", 
                    "maximum_value_warning": "=70", 
                    "maximum_value": "=machine_max_feedrate_e if retraction_enable else float('inf')", 
                    "type": "float", 
                    "settable_per_extruder": "True", 
                    "minimum_value": "=0.0001", 
                    "children": {
                        "retraction_retract_speed": {
                            "unit": "mm/s", 
                            "maximum_value_warning": "=70", 
                            "maximum_value": "=machine_max_feedrate_e if retraction_enable else float('inf')", 
                            "value": "=retraction_speed", 
                            "settable_per_extruder": "True", 
                            "minimum_value": "=0.0001", 
                            "children": {}, 
                            "default_value": "25", 
                            "label": "Retraction Retract Speed", 
                            "minimum_value_warning": "=1", 
                            "enabled": "=retraction_enable and machine_gcode_flavor != \"UltiGCode\"", 
                            "settable_per_mesh": "False", 
                            "type": "float", 
                            "description": "The speed at which the filament is retracted during a retraction move."
                        }, 
                        "retraction_prime_speed": {
                            "unit": "mm/s", 
                            "maximum_value_warning": "=70", 
                            "maximum_value": "=machine_max_feedrate_e if retraction_enable else float('inf')", 
                            "value": "=retraction_speed", 
                            "settable_per_extruder": "True", 
                            "minimum_value": "=0.0001", 
                            "children": {}, 
                            "default_value": "25", 
                            "label": "Retraction Prime Speed", 
                            "minimum_value_warning": "=1", 
                            "enabled": "=retraction_enable and machine_gcode_flavor != \"UltiGCode\"", 
                            "settable_per_mesh": "False", 
                            "type": "float", 
                            "description": "The speed at which the filament is primed during a retraction move."
                        }
                    }, 
                    "default_value": "25", 
                    "label": "Retraction Speed", 
                    "minimum_value_warning": "=1", 
                    "enabled": "=retraction_enable and machine_gcode_flavor != \"UltiGCode\"", 
                    "settable_per_mesh": "False", 
                    "description": "The speed at which the filament is retracted and primed during a retraction move."
                }, 
                "material_extrusion_cool_down_speed": {
                    "maximum_value_warning": "=10.0", 
                    "maximum_value": "=machine_nozzle_heat_up_speed", 
                    "minimum_value": "=0", 
                    "settable_per_extruder": "True", 
                    "unit": "\u00b0C/s", 
                    "children": {}, 
                    "default_value": "0.7", 
                    "label": "Extrusion Cool Down Speed Modifier", 
                    "enabled": "=material_flow_dependent_temperature or (extruders_enabled_count > 1 and material_final_print_temperature != material_print_temperature)", 
                    "settable_per_mesh": "False", 
                    "type": "float", 
                    "description": "The extra speed by which the nozzle cools while extruding. The same value is used to signify the heat up speed lost when heating up while extruding."
                }, 
                "material_diameter": {
                    "maximum_value_warning": "=3.5", 
                    "minimum_value": "=0.0001", 
                    "settable_per_extruder": "True", 
                    "unit": "mm", 
                    "children": {}, 
                    "default_value": "1.75", 
                    "label": "Diameter", 
                    "minimum_value_warning": "=0.4", 
                    "enabled": "=machine_gcode_flavor != \"UltiGCode\"", 
                    "settable_per_mesh": "False", 
                    "type": "float", 
                    "description": "Adjusts the diameter of the filament used. Match this value with the diameter of the used filament."
                }, 
                "material_flow_layer_0": {
                    "children": {}, 
                    "default_value": "100", 
                    "unit": "%", 
                    "label": "Initial Layer Flow", 
                    "maximum_value_warning": "=150", 
                    "minimum_value_warning": "=50", 
                    "value": "=material_flow", 
                    "type": "float", 
                    "settable_per_mesh": "True", 
                    "minimum_value": "=0.0001", 
                    "description": "Flow compensation for the first layer: the amount of material extruded on the initial layer is multiplied by this value."
                }, 
                "material_surface_energy": {
                    "children": {}, 
                    "default_value": "100", 
                    "unit": "%", 
                    "label": "Surface Energy", 
                    "maximum_value": "=100", 
                    "enabled": "=False", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "True", 
                    "minimum_value": "=0", 
                    "type": "int", 
                    "description": "Surface energy."
                }, 
                "material_adhesion_tendency": {
                    "children": {}, 
                    "default_value": "10", 
                    "label": "Adhesion Tendency", 
                    "maximum_value": "=10", 
                    "enabled": "=False", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "True", 
                    "minimum_value": "=0", 
                    "type": "int", 
                    "description": "Surface adhesion tendency."
                }, 
                "material_flow": {
                    "children": {}, 
                    "default_value": "100", 
                    "unit": "%", 
                    "label": "Flow", 
                    "maximum_value_warning": "=150", 
                    "minimum_value_warning": "=50", 
                    "enabled": "=machine_gcode_flavor != \"UltiGCode\"", 
                    "settable_per_mesh": "True", 
                    "minimum_value": "=5", 
                    "type": "float", 
                    "description": "Flow compensation: the amount of material extruded is multiplied by this value."
                }, 
                "retraction_extra_prime_amount": {
                    "children": {}, 
                    "default_value": "0", 
                    "label": "Retraction Extra Prime Amount", 
                    "maximum_value_warning": "=5.0", 
                    "minimum_value_warning": "=-0.0001", 
                    "enabled": "=retraction_enable", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "True", 
                    "unit": "mm\u00b3", 
                    "type": "float", 
                    "description": "Some material can ooze away during a travel move, which can be compensated for here."
                }, 
                "limit_support_retractions": {
                    "children": {}, 
                    "default_value": "True", 
                    "label": "Limit Support Retractions", 
                    "enabled": "=retraction_enable and support_enable", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "True", 
                    "type": "bool", 
                    "description": "Omit retraction when moving from support to support in a straight line. Enabling this setting saves print time, but can lead to excesive stringing within the support structure."
                }, 
                "material_print_temperature_layer_0": {
                    "unit": "\u00b0C", 
                    "maximum_value_warning": "=285", 
                    "value": "=material_print_temperature", 
                    "settable_per_extruder": "True", 
                    "minimum_value": "=-273.15", 
                    "children": {}, 
                    "default_value": "215", 
                    "label": "Printing Temperature Initial Layer", 
                    "minimum_value_warning": "=0", 
                    "enabled": "=machine_nozzle_temp_enabled", 
                    "settable_per_mesh": "False", 
                    "type": "float", 
                    "description": "The temperature used for printing the first layer. Set at 0 to disable special handling of the initial layer."
                }, 
                "retraction_count_max": {
                    "children": {}, 
                    "default_value": "90", 
                    "label": "Maximum Retraction Count", 
                    "maximum_value_warning": "=100", 
                    "enabled": "=retraction_enable", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "True", 
                    "minimum_value": "=0", 
                    "type": "int", 
                    "description": "This setting limits the number of retractions occurring within the minimum extrusion distance window. Further retractions within this window will be ignored. This avoids retracting repeatedly on the same piece of filament, as that can flatten the filament and cause grinding issues."
                }, 
                "retraction_enable": {
                    "children": {}, 
                    "default_value": "True", 
                    "label": "Enable Retraction", 
                    "type": "bool", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "True", 
                    "description": "Retract the filament when the nozzle is moving over a non-printed area. "
                }, 
                "material_bed_temperature_layer_0": {
                    "settable_per_meshgroup": "False", 
                    "unit": "\u00b0C", 
                    "resolve": "=max(extruderValues('material_bed_temperature_layer_0'))", 
                    "maximum_value_warning": "=130", 
                    "value": "=resolveOrValue('material_bed_temperature')", 
                    "settable_per_extruder": "False", 
                    "minimum_value": "=-273.15", 
                    "children": {}, 
                    "default_value": "60", 
                    "label": "Build Plate Temperature Initial Layer", 
                    "minimum_value_warning": "=max(extruderValues('material_bed_temperature'))", 
                    "enabled": "=machine_heated_bed and machine_gcode_flavor != \"UltiGCode\"", 
                    "settable_per_mesh": "False", 
                    "type": "float", 
                    "description": "The temperature used for the heated build plate at the first layer."
                }, 
                "retraction_amount": {
                    "children": {}, 
                    "default_value": "1.0", 
                    "label": "Retraction Distance", 
                    "maximum_value_warning": "=10.0", 
                    "minimum_value_warning": "=-0.0001", 
                    "enabled": "=retraction_enable and machine_gcode_flavor != \"UltiGCode\"", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "True", 
                    "unit": "mm", 
                    "type": "float", 
                    "description": "The length of material retracted during a retraction move."
                }, 
                "default_material_bed_temperature": {
                    "settable_per_meshgroup": "False", 
                    "unit": "\u00b0C", 
                    "resolve": "=max(extruderValues('default_material_bed_temperature'))", 
                    "maximum_value_warning": "=130", 
                    "type": "float", 
                    "settable_per_extruder": "False", 
                    "minimum_value": "=-273.15", 
                    "children": {}, 
                    "default_value": "60", 
                    "label": "Default Build Plate Temperature", 
                    "minimum_value_warning": "=0", 
                    "enabled": "=machine_heated_bed and machine_gcode_flavor != \"UltiGCode\"", 
                    "settable_per_mesh": "False", 
                    "description": "The default temperature used for the heated build plate. This should be the \"base\" temperature of a build plate. All other print temperatures should use offsets based on this value"
                }, 
                "retraction_extrusion_window": {
                    "minimum_value": "=0", 
                    "maximum_value_warning": "=retraction_amount * 2", 
                    "value": "=retraction_amount", 
                    "settable_per_extruder": "True", 
                    "unit": "mm", 
                    "children": {}, 
                    "default_value": "4.5", 
                    "label": "Minimum Extrusion Distance Window", 
                    "enabled": "=retraction_enable", 
                    "settable_per_mesh": "False", 
                    "type": "float", 
                    "description": "The window in which the maximum retraction count is enforced. This value should be approximately the same as the retraction distance, so that effectively the number of times a retraction passes the same patch of material is limited."
                }, 
                "material_final_print_temperature": {
                    "unit": "\u00b0C", 
                    "maximum_value_warning": "=material_print_temperature", 
                    "value": "=max(-273.15, material_print_temperature - 15)", 
                    "settable_per_extruder": "True", 
                    "minimum_value": "=-273.15", 
                    "children": {}, 
                    "default_value": "195", 
                    "label": "Final Printing Temperature", 
                    "minimum_value_warning": "=material_standby_temperature", 
                    "enabled": "=machine_nozzle_temp_enabled", 
                    "settable_per_mesh": "False", 
                    "type": "float", 
                    "description": "The temperature to which to already start cooling down just before the end of printing."
                }, 
                "switch_extruder_retraction_amount": {
                    "maximum_value_warning": "=100", 
                    "value": "=machine_heat_zone_length", 
                    "settable_per_extruder": "True", 
                    "unit": "mm", 
                    "children": {}, 
                    "default_value": "20", 
                    "label": "Nozzle Switch Retraction Distance", 
                    "minimum_value_warning": "=0", 
                    "enabled": "=retraction_enable", 
                    "settable_per_mesh": "False", 
                    "type": "float", 
                    "description": "The amount of retraction: Set at 0 for no retraction at all. This should generally be the same as the length of the heat zone."
                }, 
                "material_standby_temperature": {
                    "maximum_value_warning": "=260", 
                    "minimum_value": "=-273.15", 
                    "settable_per_extruder": "True", 
                    "unit": "\u00b0C", 
                    "children": {}, 
                    "default_value": "150", 
                    "label": "Standby Temperature", 
                    "minimum_value_warning": "=0", 
                    "enabled": "=extruders_enabled_count > 1 and machine_nozzle_temp_enabled", 
                    "settable_per_mesh": "False", 
                    "type": "float", 
                    "description": "The temperature of the nozzle when another nozzle is currently used for printing."
                }, 
                "default_material_print_temperature": {
                    "unit": "\u00b0C", 
                    "maximum_value_warning": "=285", 
                    "type": "float", 
                    "settable_per_extruder": "True", 
                    "minimum_value": "=-273.15", 
                    "children": {}, 
                    "default_value": "210", 
                    "label": "Default Printing Temperature", 
                    "minimum_value_warning": "=0", 
                    "enabled": "=machine_nozzle_temp_enabled", 
                    "settable_per_mesh": "False", 
                    "description": "The default temperature used for printing. This should be the \"base\" temperature of a material. All other print temperatures should use offsets based on this value"
                }, 
                "retract_at_layer_change": {
                    "children": {}, 
                    "default_value": "False", 
                    "label": "Retract at Layer Change", 
                    "type": "bool", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "True", 
                    "description": "Retract the filament when the nozzle is moving to the next layer."
                }, 
                "retraction_min_travel": {
                    "unit": "mm", 
                    "maximum_value_warning": "=10", 
                    "value": "=line_width * 2", 
                    "settable_per_extruder": "True", 
                    "minimum_value": "=0", 
                    "children": {}, 
                    "default_value": "1.5", 
                    "label": "Retraction Minimum Travel", 
                    "minimum_value_warning": "=line_width * 1.5", 
                    "enabled": "=retraction_enable", 
                    "settable_per_mesh": "False", 
                    "type": "float", 
                    "description": "The minimum distance of travel needed for a retraction to happen at all. This helps to get fewer retractions in a small area."
                }, 
                "material_bed_temperature": {
                    "settable_per_meshgroup": "False", 
                    "unit": "\u00b0C", 
                    "maximum_value_warning": "=130", 
                    "value": "=default_material_bed_temperature", 
                    "settable_per_extruder": "False", 
                    "minimum_value": "=-273.15", 
                    "children": {}, 
                    "default_value": "60", 
                    "label": "Build Plate Temperature", 
                    "minimum_value_warning": "=0", 
                    "enabled": "=machine_heated_bed and machine_gcode_flavor != \"UltiGCode\"", 
                    "settable_per_mesh": "False", 
                    "type": "float", 
                    "description": "The temperature used for the heated build plate. If this is 0, the bed temperature will not be adjusted."
                }, 
                "material_print_temperature": {
                    "unit": "\u00b0C", 
                    "maximum_value_warning": "=285", 
                    "value": "=default_material_print_temperature", 
                    "settable_per_extruder": "True", 
                    "minimum_value": "=-273.15", 
                    "children": {}, 
                    "default_value": "210", 
                    "label": "Printing Temperature", 
                    "minimum_value_warning": "=0", 
                    "enabled": "=machine_nozzle_temp_enabled and not (material_flow_dependent_temperature)", 
                    "settable_per_mesh": "False", 
                    "type": "float", 
                    "description": "The temperature used for printing."
                }, 
                "material_initial_print_temperature": {
                    "unit": "\u00b0C", 
                    "maximum_value_warning": "=material_print_temperature", 
                    "value": "=max(-273.15, material_print_temperature - 10)", 
                    "settable_per_extruder": "True", 
                    "minimum_value": "=-273.15", 
                    "children": {}, 
                    "default_value": "200", 
                    "label": "Initial Printing Temperature", 
                    "minimum_value_warning": "=material_standby_temperature", 
                    "enabled": "=machine_nozzle_temp_enabled", 
                    "settable_per_mesh": "False", 
                    "type": "float", 
                    "description": "The minimal temperature while heating up to the Printing Temperature at which printing can already start."
                }, 
                "switch_extruder_retraction_speeds": {
                    "unit": "mm/s", 
                    "maximum_value_warning": "=70", 
                    "maximum_value": "=machine_max_feedrate_e if retraction_enable else float('inf')", 
                    "type": "float", 
                    "settable_per_extruder": "True", 
                    "minimum_value": "=0.1", 
                    "children": {
                        "switch_extruder_retraction_speed": {
                            "unit": "mm/s", 
                            "maximum_value_warning": "=70", 
                            "maximum_value": "=machine_max_feedrate_e if retraction_enable else float('inf')", 
                            "value": "=switch_extruder_retraction_speeds", 
                            "settable_per_extruder": "True", 
                            "minimum_value": "=0.1", 
                            "children": {}, 
                            "default_value": "20", 
                            "label": "Nozzle Switch Retract Speed", 
                            "minimum_value_warning": "=1", 
                            "enabled": "=retraction_enable", 
                            "settable_per_mesh": "False", 
                            "type": "float", 
                            "description": "The speed at which the filament is retracted during a nozzle switch retract."
                        }, 
                        "switch_extruder_prime_speed": {
                            "unit": "mm/s", 
                            "maximum_value_warning": "=70", 
                            "maximum_value": "=machine_max_feedrate_e if retraction_enable else float('inf')", 
                            "value": "=switch_extruder_retraction_speeds", 
                            "settable_per_extruder": "True", 
                            "minimum_value": "=0.1", 
                            "children": {}, 
                            "default_value": "20", 
                            "label": "Nozzle Switch Prime Speed", 
                            "minimum_value_warning": "=1", 
                            "enabled": "=retraction_enable", 
                            "settable_per_mesh": "False", 
                            "type": "float", 
                            "description": "The speed at which the filament is pushed back after a nozzle switch retraction."
                        }
                    }, 
                    "default_value": "20", 
                    "label": "Nozzle Switch Retraction Speed", 
                    "minimum_value_warning": "=1", 
                    "enabled": "=retraction_enable", 
                    "settable_per_mesh": "False", 
                    "description": "The speed at which the filament is retracted. A higher retraction speed works better, but a very high retraction speed can lead to filament grinding."
                }, 
                "material_shrinkage_percentage": {
                    "children": {}, 
                    "default_value": "0", 
                    "unit": "%", 
                    "label": "Shrinkage Ratio", 
                    "maximum_value": "=100", 
                    "enabled": "=False", 
                    "settable_per_mesh": "False", 
                    "settable_per_extruder": "True", 
                    "minimum_value": "=0", 
                    "type": "float", 
                    "description": "Shrinkage ratio in percentage."
                }
            }, 
            "type": "category", 
            "label": "Material", 
            "description": "Material"
        }
    }, 
    "name": "Raise3D N2 Plus Dual"
}